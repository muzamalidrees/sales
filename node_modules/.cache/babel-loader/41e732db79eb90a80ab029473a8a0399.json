{"ast":null,"code":"import _defineProperty from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\auth\\\\pages\\\\Login.jsx\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.handleInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.validateLogin = function (e) {\n      e.preventDefault();\n      var form = _this.refs.myForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        _this.handleLogin();\n      }\n    };\n\n    _this.handleLogin = function () {\n      var options = {\n        method: 'POST',\n        body: JSON.stringify({\n          username: _this.state.username,\n          password: _this.state.password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/auth', options).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        // console.log(json);\n        var message = json.message;\n        _this.refs.loginLabel.innerHTML = message;\n\n        if (message === 'incorrect Password') {\n          _this.password.value = \"\";\n\n          _this.password.focus();\n        } else if (message === \"username doesn't exist\") {\n          _this.username.value = '';\n\n          _this.username.focus();\n        } else {\n          _this.setState({\n            isLoggedIn: true\n          }); // console.log(json.user.role_id);\n\n\n          var user = json.user.role_id;\n\n          _this.props.changeUser(user);\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onChangeLabel = function () {\n      _this.refs.loginLabel.innerHTML = '';\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      isLoggedIn: false\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoggedIn) {\n        return React.createElement(Redirect, {\n          to: \"/home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } else return React.createElement(MDBContainer, {\n        className: \"pt-5 my-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \" mt-5 pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        ref: \"myForm\",\n        style: {\n          marginTop: '100px'\n        },\n        onSubmit: this.validateLogin,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: '#2BBBAD'\n        },\n        className: \"h5 text-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Username\",\n        name: \"username\",\n        icon: \"user\",\n        value: this.state.username,\n        onInput: this.handleInput,\n        onChange: this.onChangeLabel,\n        group: true,\n        type: \"text\",\n        error: \"wrong\",\n        success: \"right\",\n        inputRef: function inputRef(ref) {\n          return _this2.username = ref;\n        },\n        required: true,\n        validate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Please provide a Name.\")), React.createElement(MDBInput, {\n        label: \"Password\",\n        name: \"password\",\n        icon: \"lock\",\n        value: this.state.password,\n        onInput: this.handleInput,\n        inputRef: function inputRef(ref) {\n          return _this2.password = ref;\n        },\n        onChange: this.onChangeLabel,\n        group: true,\n        type: \"password\",\n        required: true,\n        validate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Please provide a Password.\"))), React.createElement(\"label\", {\n        ref: \"loginLabel\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["G:\\mzamal\\sales&stock\\sales\\src\\components\\auth\\pages\\Login.jsx"],"names":["React","Redirect","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","LoginForm","props","handleInput","e","setState","target","name","value","validateLogin","preventDefault","form","refs","myForm","checkValidity","classList","add","handleLogin","options","method","body","JSON","stringify","username","state","password","headers","fetch","then","res","json","message","loginLabel","innerHTML","focus","isLoggedIn","user","role_id","changeUser","err","console","log","onChangeLabel","bind","marginTop","color","ref","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from 'react-router'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLoggedIn: false,\r\n        }\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    validateLogin = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.myForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else {\r\n            this.handleLogin();\r\n        }\r\n    }\r\n    handleLogin = () => {\r\n        var options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username: this.state.username, password: this.state.password }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        fetch('/auth', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json);\r\n                let message = json.message;\r\n                this.refs.loginLabel.innerHTML = message;\r\n                if (message === 'incorrect Password') {\r\n                    this.password.value = \"\";\r\n                    this.password.focus();\r\n                }\r\n                else if (message === `username doesn't exist`) {\r\n                    this.username.value = '';\r\n                    this.username.focus();\r\n                }\r\n                else {\r\n                    this.setState({\r\n\r\n                        isLoggedIn : true\r\n                    })\r\n                    // console.log(json.user.role_id);\r\n                    let user = json.user.role_id\r\n                    this.props.changeUser(user);\r\n\r\n                }\r\n\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n    onChangeLabel = () => {\r\n        this.refs.loginLabel.innerHTML = '';\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else\r\n            return (\r\n                <MDBContainer className=\"pt-5 my-auto\">\r\n                    <MDBRow className=\" mt-5 pt-5\">\r\n                        <MDBCol md=\"6\" className='mx-auto'>\r\n                            <form ref='myForm' style={{ marginTop: '100px' }} onSubmit={this.validateLogin} noValidate>\r\n                                <p style={{color:'#2BBBAD'}} className=\"h5 text-center mb-4\">Sign in</p>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        icon=\"user\"\r\n                                        value={this.state.username}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={this.onChangeLabel}\r\n                                        group\r\n                                        type=\"text\"\r\n                                        error=\"wrong\"\r\n                                        success=\"right\"\r\n                                        inputRef={ref => this.username = ref}\r\n                                        required\r\n                                        validate>\r\n                                        <div className=\"valid-feedback\">\r\n                                            Looks good!\r\n                                    </div>\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Please provide a Name.\r\n                                    </div>\r\n                                    </MDBInput>\r\n                                    <MDBInput\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        icon=\"lock\"\r\n                                        value={this.state.password}\r\n                                        onInput={this.handleInput}\r\n                                        inputRef={ref => this.password = ref}\r\n                                        onChange={this.onChangeLabel}\r\n                                        group\r\n                                        type=\"password\"\r\n                                        required\r\n                                        validate>\r\n                                        <div className=\"valid-feedback\">\r\n                                            Looks good!\r\n                                    </div>\r\n                                        <div className=\"invalid-feedback\">\r\n                                            Please provide a Password.\r\n                                    </div>\r\n                                    </MDBInput>\r\n                                </div>\r\n                                <label ref='loginLabel' style={{ color: 'red' }}></label>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn size='sm' type=\"submit\">Login</MDBBtn>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            )\r\n\r\n    }\r\n}\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}