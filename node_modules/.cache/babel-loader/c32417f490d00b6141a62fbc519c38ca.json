{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\rolePermissioning\\\\pages\\\\AllRolesPermissions.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCardHeader, MDBBtn, MDBIcon, MDBContainer, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from 'mdbreact';\nimport DeleteModal from '../../misc/sections/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\n\nvar AllRolesPermissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllRolesPermissions, _Component);\n\n  function AllRolesPermissions() {\n    var _this;\n\n    _classCallCheck(this, AllRolesPermissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllRolesPermissions).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.toggle = function (tab) {\n      return function (e) {\n        if (_this.state.activeItem !== tab) {\n          _this.setState({\n            activeItem: tab\n          });\n        }\n      };\n    };\n\n    _this.handleDelete = function (id) {\n      return function (e) {\n        var el = e.target;\n        var row = el.closest('tr');\n        var i = row.rowIndex;\n\n        _this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id\n        });\n\n        _this.refs.deleteModal.setState({\n          modalShow: true\n        });\n      };\n    };\n\n    _this.deleteRolePermission = function () {\n      var dRowValue = _this.state.dRowValue;\n      var rolePermission = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(rolePermission),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteRolePermission', options).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        // console.log(json)\n        window.location.reload();\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllRolesPermissions').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          rolesPermissions: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch('/getAllRoles').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          roles: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch('/getAllPermissions').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          permissions: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      rolesPermissions: [],\n      roles: [],\n      permissions: [],\n      dRowValue: '',\n      activeItem: 1\n    };\n    return _this;\n  }\n\n  _createClass(AllRolesPermissions, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          roles = _this$state.roles,\n          permissions = _this$state.permissions,\n          rolesPermissions = _this$state.rolesPermissions,\n          activeItem = _this$state.activeItem;\n      var Tabs = [],\n          navLinks = [],\n          currentComponent = this;\n      roles.forEach(function (role) {\n        navLinks.push(makeNavLink(role));\n        Tabs.push(makeTab(role, permissions, rolesPermissions));\n      });\n\n      function makeNavLink(role) {\n        return React.createElement(MDBNavItem, {\n          key: role.id,\n          className: \"my-3 navLinkRP\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(MDBNavLink, {\n          to: \"#\",\n          active: activeItem === role.id,\n          onClick: currentComponent.toggle(role.id),\n          role: \"tab\",\n          style: {\n            backgroundColor: activeItem === role.id ? '#00796b' : '',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            lineHeight: '15px'\n          },\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, role.name));\n      }\n\n      function makeTab(role, permissions, rolesPermissions) {\n        var index = 0,\n            currentPermission,\n            rows = [];\n        rolesPermissions.forEach(function (rolePermission) {\n          if (rolePermission.role_id === role.id) {\n            index = index + 1;\n\n            if (permissions !== '' && permissions !== null && permissions !== undefined) {\n              permissions.forEach(function (permission) {\n                if (permission.id === rolePermission.permission_id) {\n                  currentPermission = permission.slug;\n                }\n              });\n            }\n\n            rows.push({\n              index: index,\n              role: role.name,\n              permission: currentPermission,\n              buttons: React.createElement(React.Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138\n                },\n                __self: this\n              }, React.createElement(Can, {\n                I: \"delete\",\n                a: \"rolePermission\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 139\n                },\n                __self: this\n              }, React.createElement(MDBBtn, {\n                style: {\n                  fontSize: '15px'\n                },\n                onClick: currentComponent.handleDelete(rolePermission.id),\n                className: \"m-1 py-1 px-2\",\n                outline: true,\n                color: \"red darken-3\",\n                size: \"sm\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140\n                },\n                __self: this\n              }, React.createElement(MDBIcon, {\n                icon: \"trash\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140\n                },\n                __self: this\n              }))))\n            });\n          }\n        });\n        var data = {\n          columns: [{\n            label: '#',\n            field: 'index'\n          }, {\n            label: 'Role',\n            field: 'role'\n          }, {\n            label: 'Permission',\n            field: 'permission'\n          }, {\n            label: 'Action',\n            field: 'buttons'\n          }],\n          rows: rows\n        };\n        return React.createElement(MDBTabPane, {\n          tabId: role.id,\n          role: \"tabpanel\",\n          key: role.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(MDBDataTable, {\n          striped: true,\n          small: true,\n          hover: true,\n          theadColor: \"teal\",\n          bordered: true,\n          btn: true,\n          entries: 12,\n          entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n          responsive: true,\n          data: data,\n          theadTextWhite: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Can, {\n        I: \"read\",\n        a: \"rolePermission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        style: {\n          marginTop: '70px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Roles' Permissions\"), React.createElement(MDBNav, {\n        className: \"nav-tabs mt-5 mx-5 pl-4 mb-0\",\n        style: {\n          borderRadius: '7px',\n          backgroundColor: '#2BBBAD',\n          lineHeight: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, navLinks), React.createElement(MDBTabContent, {\n        activeItem: activeItem,\n        className: \"card p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, Tabs), React.createElement(DeleteModal, {\n        ref: \"deleteModal\",\n        deleteEntry: this.deleteRolePermission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AllRolesPermissions;\n}(Component);\n\nexport default AllRolesPermissions;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\rolePermissioning\\pages\\AllRolesPermissions.jsx"],"names":["React","Component","MDBDataTable","MDBCardHeader","MDBBtn","MDBIcon","MDBContainer","MDBTabPane","MDBTabContent","MDBNav","MDBNavItem","MDBNavLink","DeleteModal","Can","AllRolesPermissions","_isMounted","componentWillUnmount","toggle","tab","e","state","activeItem","setState","handleDelete","id","el","target","row","closest","i","rowIndex","rowToBeDeleted","dRowValue","refs","deleteModal","modalShow","deleteRolePermission","rolePermission","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","window","location","reload","error","console","log","rolesPermissions","data","roles","permissions","Tabs","navLinks","currentComponent","forEach","role","push","makeNavLink","makeTab","backgroundColor","color","border","borderRadius","lineHeight","name","index","currentPermission","rows","role_id","undefined","permission","permission_id","slug","buttons","fontSize","columns","label","field","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    MDBDataTable, MDBCardHeader, MDBBtn,\r\n    MDBIcon, MDBContainer, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink\r\n} from 'mdbreact';\r\nimport DeleteModal from '../../misc/sections/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\n\r\n\r\nclass AllRolesPermissions extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllRolesPermissions')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ rolesPermissions: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        fetch('/getAllPermissions')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ permissions: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        this.state = {\r\n            rolesPermissions: [],\r\n            roles: [],\r\n            permissions: [],\r\n            dRowValue: '',\r\n            activeItem: 1\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    toggle = tab => e => {\r\n        if (this.state.activeItem !== tab) {\r\n            this.setState({\r\n                activeItem: tab\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteRolePermission = () => {\r\n        let dRowValue = this.state.dRowValue\r\n        let rolePermission = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(rolePermission),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteRolePermission', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                window.location.reload()\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        var { roles, permissions, rolesPermissions, activeItem } = this.state;\r\n        let Tabs = [], navLinks = [], currentComponent = this\r\n        roles.forEach(role => {\r\n            navLinks.push(makeNavLink(role))\r\n            Tabs.push(makeTab(role, permissions, rolesPermissions))\r\n        })\r\n        function makeNavLink(role) {\r\n            return (\r\n                <MDBNavItem key={role.id} className='my-3 navLinkRP'>\r\n                    <MDBNavLink to=\"#\"\r\n                        active={activeItem === role.id}\r\n                        onClick={currentComponent.toggle(role.id)}\r\n                        role=\"tab\"\r\n                        style={{ backgroundColor: activeItem === role.id ? '#00796b' :'', color: 'white', border: 'none', borderRadius: '5px', lineHeight: '15px' }}\r\n                        className='' >\r\n                        {role.name}\r\n                    </MDBNavLink>\r\n                </MDBNavItem >\r\n            )\r\n        }\r\n        function makeTab(role, permissions, rolesPermissions) {\r\n            var index = 0, currentPermission, rows = []\r\n\r\n            rolesPermissions.forEach((rolePermission) => {\r\n                if (rolePermission.role_id === role.id) {\r\n                    index = index + 1;\r\n                    if (permissions !== '' && permissions !== null && permissions !== undefined) {\r\n                        permissions.forEach(permission => {\r\n                            if (permission.id === rolePermission.permission_id) {\r\n                                currentPermission = permission.slug\r\n                            }\r\n                        });\r\n                    }\r\n                    rows.push(\r\n                        {\r\n                            index: index,\r\n                            role: role.name,\r\n                            permission: currentPermission,\r\n                            buttons: <React.Fragment>\r\n                                <Can I='delete' a='rolePermission'>\r\n                                    <MDBBtn style={{ fontSize: '15px' }} onClick={currentComponent.handleDelete(rolePermission.id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                                </Can>\r\n                            </React.Fragment>\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n            var data = {\r\n                columns: [\r\n                    { label: '#', field: 'index', },\r\n                    { label: 'Role', field: 'role' },\r\n                    { label: 'Permission', field: 'permission', },\r\n                    { label: 'Action', field: 'buttons' }\r\n                ],\r\n                rows: rows\r\n            }\r\n            return (\r\n                <MDBTabPane tabId={role.id} role=\"tabpanel\" key={role.id}>\r\n                    <MDBDataTable striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                </MDBTabPane>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <Can I='read' a='rolePermission'>\r\n                <MDBContainer style={{ marginTop: '70px' }}>\r\n                    <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                        Roles' Permissions\r\n                    </MDBCardHeader>\r\n                    <MDBNav className=\"nav-tabs mt-5 mx-5 pl-4 mb-0\" style={{ borderRadius: '7px', backgroundColor: '#2BBBAD', lineHeight: '30px' }}>\r\n                        {navLinks}\r\n                    </MDBNav>\r\n                    <MDBTabContent activeItem={activeItem} className='card p-5'>\r\n                        {Tabs}\r\n                    </MDBTabContent>\r\n                    <DeleteModal\r\n                        ref='deleteModal'\r\n                        deleteEntry={this.deleteRolePermission}\r\n                    />\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllRolesPermissions"]},"metadata":{},"sourceType":"module"}