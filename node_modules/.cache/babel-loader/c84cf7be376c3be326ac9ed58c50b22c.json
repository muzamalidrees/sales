{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\orders\\\\pages\\\\AllOrders.jsx\";\nimport React from 'react';\n\nvar AllOrders =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AllOrders, _React$Component);\n\n  function AllOrders() {\n    var _this;\n\n    _classCallCheck(this, AllOrders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllOrders).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleView = function (id, order_id) {\n      return function (e) {\n        // let el = e.target\n        // let row = el.closest('tr')\n        _this.refs.viewOrderModal.setState({\n          modalShow: true\n        });\n\n        _this.refs.viewOrderModal.fetchData(id, order_id);\n      };\n    };\n\n    _this.handleEdit = function (id, order_id) {\n      return function (e) {\n        // let el = e.target\n        // let row = el.closest('tr')\n        _this.refs.editOrderModal.setState({\n          modalShow: true\n        });\n\n        _this.refs.editOrderModal.fetchData(id, order_id);\n      };\n    };\n\n    _this.handleDelete = function (id, order_id) {\n      return function (e) {\n        var el = e.target;\n        var row = el.closest('tr');\n        var i = row.rowIndex;\n\n        _this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id,\n          dOrder_id: order_id\n        });\n\n        _this.refs.deleteModal.setState({\n          modalShow: true\n        });\n      };\n    };\n\n    _this.deleteOrder = function () {\n      var rowToBeDeleted = _this.state.rowToBeDeleted;\n      var dRowValue = _this.state.dRowValue;\n      document.getElementById('ordersTable').deleteRow(rowToBeDeleted);\n      var orderDetail = {\n        orderId: _this.state.dOrder_id\n      };\n      var order = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var options2 = {\n        method: 'DELETE',\n        body: JSON.stringify(orderDetail),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteOrder', options).then(function (res) {\n        return res.json();\n      }).then(function (json) {// console.log(json)\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n      fetch('/deleteOrderDetails', options2).then(function (res) {\n        return res.json();\n      }).then(function (json) {// console.log(json)\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllOrders').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          orders: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      orders: [],\n      rowToBeDeleted: '',\n      dRowValue: '',\n      dOrder_id: ''\n    };\n    return _this;\n  }\n\n  _createClass(AllOrders, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orders = this.state.orders;\n      var rows = [];\n      var index = 0;\n\n      if (orders !== null || orders !== '' || orders !== undefined) {\n        orders.forEach(function (order) {\n          index = index + 1;\n          var orderDate;\n\n          if (order.date === null) {\n            orderDate = '';\n          } else {\n            orderDate = new Date(order.date).toLocaleDateString();\n          }\n\n          rows.push({\n            index: index,\n            order_id: order.order_id,\n            date: orderDate,\n            cName: order.customer_name,\n            cContact: order.customer_contact,\n            cAddress: order.customer_address,\n            total: order.total,\n            tracking: order.tracking_id,\n            note: order.note,\n            status: order.status,\n            buttons: React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, React.createElement(MDBBtn, {\n              style: {\n                fontSize: '15px'\n              },\n              onClick: _this2.handleView(order.id, order.order_id),\n              className: \"m-1 py-1 px-2\",\n              outline: true,\n              color: \"info\",\n              size: \"sm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, React.createElement(MDBIcon, {\n              icon: \"eye\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            })), React.createElement(Can, {\n              I: \"update\",\n              a: \"order\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, React.createElement(MDBBtn, {\n              style: {\n                fontSize: '15px'\n              },\n              onClick: _this2.handleEdit(order.id, order.order_id),\n              className: \"m-1 py-1 px-2\",\n              outline: true,\n              color: \"teal\",\n              size: \"sm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, React.createElement(MDBIcon, {\n              icon: \"pencil-alt\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }))), React.createElement(Can, {\n              I: \"delete\",\n              a: \"order\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, React.createElement(MDBBtn, {\n              style: {\n                fontSize: '15px'\n              },\n              onClick: _this2.handleDelete(order.id, order.order_id),\n              className: \"m-1 py-1 px-2\",\n              outline: true,\n              color: \"red darken-3\",\n              size: \"sm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134\n              },\n              __self: this\n            }, React.createElement(MDBIcon, {\n              icon: \"trash\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134\n              },\n              __self: this\n            }))))\n          });\n        });\n      }\n\n      var data = {\n        columns: [{\n          label: '#',\n          field: 'index'\n        }, {\n          label: 'Order_Id',\n          field: 'order_id'\n        }, {\n          label: 'Date',\n          field: 'date'\n        }, {\n          label: 'Customer Name',\n          field: 'cName'\n        }, {\n          label: 'Customer Contact',\n          field: 'cContact'\n        }, {\n          label: 'Customer Address',\n          field: 'cAddress'\n        }, {\n          label: 'Total',\n          field: 'total'\n        }, {\n          label: 'Tracking Id',\n          field: 'tracking'\n        }, {\n          label: 'Note',\n          field: 'note'\n        }, {\n          label: 'Status',\n          field: 'status'\n        }, {\n          label: 'Action',\n          field: 'buttons'\n        }],\n        rows: rows\n      };\n      return React.createElement(MDBCard, {\n        className: \" p-0\",\n        style: {\n          marginTop: '70px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Orders\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        className: \"m-0 p-0 font-weight-bold\",\n        color: \"info \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/orders/new\",\n        className: \"m-0\",\n        style: {\n          fontSize: '16px',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Add New Order\")), React.createElement(MDBDataTable, {\n        id: \"ordersTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 15,\n        entriesOptions: [10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(ViewOrderModal, {\n        ref: \"viewOrderModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(EditOrderModal, {\n        ref: \"editOrderModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(DeleteModal, {\n        ref: \"deleteModal\",\n        deleteEntry: this.deleteOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AllOrders;\n}(React.Component);\n\nexport default AllOrders;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\orders\\pages\\AllOrders.jsx"],"names":["React","AllOrders","_isMounted","componentWillUnmount","handleView","id","order_id","e","refs","viewOrderModal","setState","modalShow","fetchData","handleEdit","editOrderModal","handleDelete","el","target","row","closest","i","rowIndex","rowToBeDeleted","dRowValue","dOrder_id","deleteModal","deleteOrder","state","document","getElementById","deleteRow","orderDetail","orderId","order","value","options","method","body","JSON","stringify","headers","options2","fetch","then","res","json","error","console","log","orders","data","rows","index","undefined","forEach","orderDate","date","Date","toLocaleDateString","push","cName","customer_name","cContact","customer_contact","cAddress","customer_address","total","tracking","tracking_id","note","status","buttons","fontSize","columns","label","field","marginTop","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n\nclass AllOrders extends React.Component {\n  _isMounted = false\n  constructor() {\n      super();\n      this._isMounted = true\n      fetch('/getAllOrders',\n      )\n          .then((res) => res.json())\n          .then((json) => {\n              // console.log(json)\n              if (this._isMounted) {\n                  this.setState({ orders: json.data })\n              }\n          })\n          .catch((error) => console.log(error))\n      this.state = {\n          orders: [],\n          rowToBeDeleted: '',\n          dRowValue: '',\n          dOrder_id: '',\n      }\n  }\n\n  componentWillUnmount = () => {\n      this._isMounted = false\n  }\n\n  handleView = (id, order_id) => e => {\n      // let el = e.target\n      // let row = el.closest('tr')\n      this.refs.viewOrderModal.setState({\n          modalShow: true\n      })\n      this.refs.viewOrderModal.fetchData(id, order_id);\n  }\n\n  handleEdit = (id, order_id) => e => {\n      // let el = e.target\n      // let row = el.closest('tr')\n      this.refs.editOrderModal.setState({\n          modalShow: true\n      })\n      this.refs.editOrderModal.fetchData(id, order_id);\n  }\n\n  handleDelete = (id, order_id) => e => {\n      let el = e.target\n      let row = el.closest('tr')\n      var i = row.rowIndex;\n      this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id,\n          dOrder_id: order_id,\n      })\n      this.refs.deleteModal.setState({\n          modalShow: true,\n      })\n  }\n\n  deleteOrder = () => {\n      let rowToBeDeleted = this.state.rowToBeDeleted\n      let dRowValue = this.state.dRowValue\n      document.getElementById('ordersTable').deleteRow(rowToBeDeleted)\n      let orderDetail = { orderId: this.state.dOrder_id }\n      let order = { value: dRowValue }\n\n      var options = {\n          method: 'DELETE',\n          body: JSON.stringify(order),\n          headers: { 'Content-Type': 'application/json' }\n      }\n      var options2 = {\n          method: 'DELETE',\n          body: JSON.stringify(orderDetail),\n          headers: { 'Content-Type': 'application/json' }\n      }\n\n\n      fetch('/deleteOrder', options)\n          .then((res) => res.json())\n          .then((json) => {\n              // console.log(json)\n          })\n          .catch((error) => console.log(error))\n\n      fetch('/deleteOrderDetails', options2)\n          .then((res) => res.json())\n          .then((json) => {\n              // console.log(json)\n          })\n          .catch((error) => console.log(error))\n  }\n\n\n\n  render() {\n      var { orders } = this.state;\n      var rows = [];\n      var index = 0;\n      if (orders !== null || orders !== '' || orders !== undefined) {\n\n          orders.forEach((order) => {\n\n              index = index + 1;\n              let orderDate;\n              if (order.date === null) {\n                  orderDate = '';\n              }\n              else {\n                  orderDate = new Date(order.date).toLocaleDateString();\n              }\n              rows.push(\n                  {\n                      index: index,\n                      order_id: order.order_id,\n                      date: orderDate,\n                      cName: order.customer_name,\n                      cContact: order.customer_contact,\n                      cAddress: order.customer_address,\n                      total: order.total,\n                      tracking: order.tracking_id,\n                      note: order.note,\n                      status: order.status,\n                      buttons: <React.Fragment>\n                          <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleView(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='info' size=\"sm\"><MDBIcon icon=\"eye\" /></MDBBtn>\n                          <Can I='update' a='order'>\n                              <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\n                          </Can>\n                          <Can I='delete' a='order'>\n                              <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\n                          </Can>\n                      </React.Fragment>\n                  }\n              );\n          });\n\n      }\n      var data = {\n          columns: [\n              { label: '#', field: 'index', }, { label: 'Order_Id', field: 'order_id', }, { label: 'Date', field: 'date', },\n              { label: 'Customer Name', field: 'cName' }, { label: 'Customer Contact', field: 'cContact', },\n              { label: 'Customer Address', field: 'cAddress', }, { label: 'Total', field: 'total', },\n              { label: 'Tracking Id', field: 'tracking', }, { label: 'Note', field: 'note', },\n              { label: 'Status', field: 'status', }, { label: 'Action', field: 'buttons' }\n          ],\n          rows: rows\n      }\n\n\n      return (\n\n          <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\n              <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\n                  Orders\n              </MDBCardHeader>\n              <MDBCardBody className='p-2'>\n                  <MDBBtn size='sm' className='m-0 p-0 font-weight-bold' color='info ' >\n                      <MDBNavLink to='/orders/new' className='m-0' style={{ fontSize: '16px', color: 'white' }}>\n                          Add New Order\n                      </MDBNavLink>\n                  </MDBBtn>\n                  <MDBDataTable id='ordersTable' striped small hover theadColor=\"teal\"\n                      bordered btn entries={15} entriesOptions={[10, 20, 35, 55, 70, 100, 135]} responsive\n                      data={data} theadTextWhite >\n                  </MDBDataTable>\n                  <ViewOrderModal\n                      ref='viewOrderModal'\n                  />\n                  <EditOrderModal\n                      ref='editOrderModal'\n                  />\n                  <DeleteModal\n                      ref='deleteModal'\n                      deleteEntry={this.deleteOrder}\n                  />\n              </MDBCardBody>\n          </MDBCard>\n      );\n  }\n\n\n}\n\nexport default AllOrders;"]},"metadata":{},"sourceType":"module"}