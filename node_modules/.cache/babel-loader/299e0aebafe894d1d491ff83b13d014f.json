{"ast":null,"code":"import _toConsumableArray from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\orders\\\\pages\\\\sections\\\\ProductsTable.jsx\";\nimport React, { Component } from 'react';\nimport PTableRow from '../../../misc/sections/PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBRow, MDBContainer } from 'mdbreact';\n\nvar ProductsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductsTable, _Component);\n\n  function ProductsTable(props) {\n    var _this;\n\n    _classCallCheck(this, ProductsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductsTable).call(this, props));\n\n    _this.addProductToTbl = function (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked, orderDate) {\n      var row = [];\n      row.push(React.createElement(PTableRow, {\n        index: 'index',\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked,\n        orderDate: orderDate,\n        key: Math.random(),\n        id: Math.random(),\n        deleteProductFrmTbl: _this.props.deleteProductFrmTbl,\n        minusFromTotal: _this.props.minusFromTotal,\n        addToTotal: _this.props.addToTotal,\n        minusFromTotalValueAdded: _this.props.minusFromTotalValueAdded,\n        addToTotalValueAdded: _this.props.addToTotalValueAdded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n\n      _this.setState(function (state) {\n        var Rows = [].concat(_toConsumableArray(state.Rows), [row]);\n        return {\n          Rows: Rows\n        };\n      });\n\n      _this.setState({\n        submitOrderBtn: true\n      });\n    };\n\n    _this.submitOrder = function () {\n      var allFormsValid = _this.props.checkOrderDetailsValidity(); // let allFormsValid = true\n\n\n      if (allFormsValid) {\n        document.getElementById('pTableCard').style.display = 'none';\n\n        _this.props.saveOrderToDB();\n\n        _this.setState({\n          submitOrderBtn: false\n        });\n\n        var pTable = document.getElementById('productsTable');\n\n        for (var index = 1; index < pTable.rows.length; index++) {\n          var pName = pTable.rows[index].cells[1].innerHTML;\n          var pSKU = pTable.rows[index].cells[2].innerHTML;\n          var pRate = pTable.rows[index].cells[3].innerHTML;\n          var pQTY = pTable.rows[index].cells[4].innerHTML;\n          var pPrice = pTable.rows[index].cells[5].innerHTML;\n          var pRemarks = pTable.rows[index].cells[6].innerHTML;\n          var pChecked = pTable.rows[index].cells[7].innerHTML;\n\n          _this.props.saveOrderDetailsToDB(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n        }\n\n        for (var _index = pTable.rows.length - 1; _index > 0; _index--) {\n          pTable.deleteRow(_index);\n        }\n      } else {\n        console.log('something wrong');\n      }\n    };\n\n    _this.state = {\n      Rows: [],\n      submitOrderBtn: false,\n      index: 0\n    };\n    _this.addProductToTbl = _this.addProductToTbl.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProductsTable, [{\n    key: \"render\",\n    value: function render() {\n      return (// <Animation type=\"slideInDown\" duration=\"800ms\" delay=\"1s\">\n        React.createElement(MDBContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(MDBRow, {\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          id: \"pTableCard\",\n          style: {\n            display: 'none'\n          },\n          className: \" m-0 p-0 col-9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(MDBCardHeader, {\n          style: {\n            color: 'teal'\n          },\n          tag: \"h4\",\n          className: \"text-center font-weight-bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Products to be added\"), React.createElement(MDBCardBody, {\n          className: \"p-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(MDBTable, {\n          id: \"productsTable\",\n          ref: this.props.productsTable,\n          striped: true,\n          responsive: true,\n          bordered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"caption\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, this.state.submitOrderBtn ? React.createElement(MDBBtn, {\n          onClick: this.submitOrder,\n          type: \"button\",\n          size: \"sm\",\n          className: \"p-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Submit\") : null), React.createElement(MDBTableHead, {\n          color: \"teal\",\n          textWhite: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Sr.\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Product\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"SKU\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Rate\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"QTY\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Remarks\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Extra Added?\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Action\"))), React.createElement(MDBTableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.state.Rows)))))) // {/* </Animation> */}\n\n      );\n    }\n  }]);\n\n  return ProductsTable;\n}(Component);\n\nexport default ProductsTable;","map":{"version":3,"sources":["D:\\mzamal\\sales&stock\\sales\\src\\components\\orders\\pages\\sections\\ProductsTable.jsx"],"names":["React","Component","PTableRow","MDBTable","MDBTableHead","MDBTableBody","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBRow","MDBContainer","ProductsTable","props","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","orderDate","row","push","Math","random","deleteProductFrmTbl","minusFromTotal","addToTotal","minusFromTotalValueAdded","addToTotalValueAdded","setState","state","Rows","submitOrderBtn","submitOrder","allFormsValid","checkOrderDetailsValidity","document","getElementById","style","display","saveOrderToDB","pTable","index","rows","length","cells","innerHTML","saveOrderDetailsToDB","deleteRow","console","log","bind","color","productsTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PTableRow from '../../../misc/sections/PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBRow, MDBContainer } from 'mdbreact';\n\n\nclass ProductsTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Rows: [],\n            submitOrderBtn: false,\n            index: 0\n        }\n        this.addProductToTbl = this.addProductToTbl.bind(this);\n    }\n\n    addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked, orderDate) => {\n        var row = [];\n        row.push(\n            <PTableRow\n                index={'index'}\n                pName={pName}\n                pSKU={pSKU}\n                pRate={pRate}\n                pQTY={pQTY}\n                pPrice={pPrice}\n                pRemarks={pRemarks}\n                pChecked={pChecked}\n                orderDate={orderDate}\n                key={Math.random()}\n                id={Math.random()}\n                deleteProductFrmTbl={this.props.deleteProductFrmTbl}\n                minusFromTotal={this.props.minusFromTotal}\n                addToTotal={this.props.addToTotal}\n                minusFromTotalValueAdded={this.props.minusFromTotalValueAdded}\n                addToTotalValueAdded={this.props.addToTotalValueAdded}\n            />\n        );\n        this.setState(state => {\n            var Rows = [...state.Rows, row]\n            return {\n                Rows\n            };\n        });\n        this.setState({ submitOrderBtn: true });\n    }\n    submitOrder = () => {\n        let allFormsValid = this.props.checkOrderDetailsValidity();\n        // let allFormsValid = true\n        if (allFormsValid) {\n            document.getElementById('pTableCard').style.display = 'none';\n            this.props.saveOrderToDB();\n            this.setState({ submitOrderBtn: false })\n            let pTable = document.getElementById('productsTable');\n            for (let index = 1; index < pTable.rows.length; index++) {\n                const pName = pTable.rows[index].cells[1].innerHTML;\n                const pSKU = pTable.rows[index].cells[2].innerHTML;\n                const pRate = pTable.rows[index].cells[3].innerHTML;\n                const pQTY = pTable.rows[index].cells[4].innerHTML;\n                const pPrice = pTable.rows[index].cells[5].innerHTML;\n                const pRemarks = pTable.rows[index].cells[6].innerHTML;\n                const pChecked = pTable.rows[index].cells[7].innerHTML;\n                this.props.saveOrderDetailsToDB(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n            }\n            for (let index = pTable.rows.length - 1; index > 0; index--) {\n                pTable.deleteRow(index);\n            }\n        }\n        else {\n            console.log('something wrong')\n        }\n    }\n\n    render() {\n\n\n        return (\n            // <Animation type=\"slideInDown\" duration=\"800ms\" delay=\"1s\">\n            <MDBContainer >\n                <MDBRow center>\n                    <MDBCard id='pTableCard' style={{ display: 'none' }} className=' m-0 p-0 col-9'>\n                        <MDBCardHeader style={{ color: 'teal' }} tag=\"h4\" className=\"text-center font-weight-bold\">\n                            Products to be added\n                            </MDBCardHeader>\n                        <MDBCardBody className='p-2'>\n                            <MDBTable id='productsTable' ref={this.props.productsTable} striped responsive bordered >\n                                <caption>\n                                    {this.state.submitOrderBtn ?\n                                        <MDBBtn onClick={this.submitOrder} type='button' size='sm' className='p-2' >Submit</MDBBtn> :\n                                        null}\n                                </caption>\n                                <MDBTableHead color='teal' textWhite >\n                                    <tr>\n                                        <th>Sr.</th>\n                                        <th>Product</th>\n                                        <th>SKU</th>\n                                        <th>Rate</th>\n                                        <th>QTY</th>\n                                        <th>Price</th>\n                                        <th>Remarks</th>\n                                        <th>Extra Added?</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </MDBTableHead>\n                                <MDBTableBody>\n                                    {this.state.Rows}\n                                </MDBTableBody>\n                            </MDBTable>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBRow>\n            </MDBContainer>\n            // {/* </Animation> */}\n        );\n    }\n\n}\n\nexport default ProductsTable"]},"metadata":{},"sourceType":"module"}