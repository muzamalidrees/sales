{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\Routes.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { PropsRoute } from 'react-router-with-props';\nimport NotFound from './pages/NotFound';\nimport SecuredLogin from './SecuredLogin';\nimport SecuredHome from './SecuredHome';\nimport Home from './pages/NewOrder';\nimport SecuredNeworder from './SecuredNewOrder'; // import Customers from './main/customers/Customers';\n// import PriceGroups from './main/priceGroups/PriceGroups';\n// import Drivers from './main/drivers/Drivers';\n// import Routes from './main/routes/Routes';\n// import Products from './main/products/Products';\n// import ProductCategories from './main/productCategories/ProductCategories';\n// import Areas from './main/areas/Areas'\n// import Users from './main/users/Users'\n// import RolesAndPermissions from './main/rolesAndPermissions/RolesAndPermissions'\n// import SalesOrReturn from './main/salesOrReturn/SalesOrReturn';\n// import Inventory from './main/inventory/Inventory';\n\nimport { AbilityContext } from \"../configs/Ability-context\";\nimport defineRulesFor from \"../configs/Ability\";\nimport { Ability } from \"@casl/ability\";\nconst ability = new Ability();\n\nclass Content extends Component {\n  constructor() {\n    super();\n\n    this.changeUser = x => {\n      console.log('ok');\n      var user1;\n\n      switch (x) {\n        // case '8':\n        //     user1 = 'superAdmin'\n        //     break;\n        case '1':\n          user1 = 'operator';\n          break;\n\n        case '2':\n          user1 = 'admin';\n          break;\n        // case '5':\n        //     user1 = 'endUser'\n        //     break;\n      }\n\n      const rules = defineRulesFor(user1);\n      ability.update(rules); // this.setState({\n      //     value: user1\n      // });\n    };\n\n    this.state = {\n      date: new Date() // value=\"admin\"\n\n    };\n    this.changeUser = this.changeUser.bind(this);\n  } // componentDidMount() {\n  //     this.timerID = setInterval(() => this.tick(), 1000);\n  // }\n  // componentWillUnmount() {\n  //     clearInterval(this.timerID);\n  // }\n  // tick = () => {\n  //     this.setState({ date: new Date() });\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {},\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AbilityContext.Provider, {\n      value: ability,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(PropsRoute, {\n      exact: true,\n      path: \"/\",\n      component: SecuredLogin,\n      changeUser: this.changeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(PropsRoute, {\n      path: \"/login\",\n      component: SecuredLogin,\n      changeUser: this.changeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      component: SecuredHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newOrder\",\n      component: SecuredNeworder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: NotFound,\n      pt: \"186px\",\n      pb: \"185px\",\n      class: 'sol-sm-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\Routes.js"],"names":["React","Component","Switch","Route","PropsRoute","NotFound","SecuredLogin","SecuredHome","Home","SecuredNeworder","AbilityContext","defineRulesFor","Ability","ability","Content","constructor","changeUser","x","console","log","user1","rules","update","state","date","Date","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { PropsRoute } from 'react-router-with-props';\nimport NotFound from './pages/NotFound';\nimport SecuredLogin from './SecuredLogin';\nimport SecuredHome from './SecuredHome';\nimport Home from './pages/NewOrder'\nimport SecuredNeworder from './SecuredNewOrder';\n// import Customers from './main/customers/Customers';\n// import PriceGroups from './main/priceGroups/PriceGroups';\n// import Drivers from './main/drivers/Drivers';\n// import Routes from './main/routes/Routes';\n// import Products from './main/products/Products';\n// import ProductCategories from './main/productCategories/ProductCategories';\n// import Areas from './main/areas/Areas'\n// import Users from './main/users/Users'\n// import RolesAndPermissions from './main/rolesAndPermissions/RolesAndPermissions'\n// import SalesOrReturn from './main/salesOrReturn/SalesOrReturn';\n// import Inventory from './main/inventory/Inventory';\nimport { AbilityContext } from \"../configs/Ability-context\";\nimport defineRulesFor from \"../configs/Ability\";\nimport { Ability } from \"@casl/ability\";\n\n\nconst ability = new Ability();\n\nclass Content extends Component {\n    constructor() {\n        super();\n        this.state = {\n            date: new Date(),\n            // value=\"admin\"\n        };\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n\n    // componentDidMount() {\n    //     this.timerID = setInterval(() => this.tick(), 1000);\n    // }\n    // componentWillUnmount() {\n    //     clearInterval(this.timerID);\n    // }\n    // tick = () => {\n    //     this.setState({ date: new Date() });\n    // }\n    changeUser = (x) => {\n        console.log('ok');\n\n        var user1;\n        switch (x) {\n            // case '8':\n            //     user1 = 'superAdmin'\n            //     break;\n                case '1':\n                    user1 = 'operator'\n                    break;\n            case '2':\n                user1 = 'admin'\n                break;\n            // case '5':\n            //     user1 = 'endUser'\n            //     break;\n        }\n        const rules = defineRulesFor(user1);\n        ability.update(rules);\n        // this.setState({\n        //     value: user1\n        // });\n\n    }\n    render() {\n\n\n        return (\n\n            <div style={{}} className=\"container-fluid\">\n                <AbilityContext.Provider value={ability}>\n                    <Switch>\n                        {/* <Route path=\"/home\" render={() => this.state.loggedIn ? <Home /> : <Redirect to='/login' />} /> */}\n                        {/* <PropsRoute exact path='/' component={SecuredLogin} /> */}\n                        <PropsRoute exact path='/' component={SecuredLogin} changeUser={this.changeUser} />\n                        {/* <PropsRoute path=\"/login\" component={SecuredLogin} /> */}\n                        <PropsRoute path=\"/login\" component={SecuredLogin} changeUser={this.changeUser} />\n                        <Route path=\"/home\" component={SecuredHome} />\n                        <Route path=\"/newOrder\" component={SecuredNeworder} />\n                        {/* <PropsRoute path='/salesOrReturn' component={SalesOrReturn} date={this.state.date} /> */}\n                        <Route path='/' component={NotFound} pt='186px' pb='185px' class={'sol-sm-12'} />\n                    </Switch>\n                </AbilityContext.Provider>\n            </div>\n\n        )\n    }\n}\n\n\nexport default Content"]},"metadata":{},"sourceType":"module"}