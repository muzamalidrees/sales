{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\EditOrderModal.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBRow, MDBCol, MDBInput, MDBDataTable } from 'mdbreact';\nimport Select from 'react-select';\nimport CreateableSelect from './CreatableAdvancedSelect';\nimport OrderDetails from './OrderDetails';\nimport ProductsTable from './ProductsTable';\n\nclass EditOrderModal extends Component {\n  constructor(props) {\n    super(props);\n    this.order = '';\n\n    this.fetchData = id => {\n      fetch('/getSpecificOrder/' + id).then(res => res.json()).then(json => {\n        // console.log(json)\n        // this.order = json.data\n        var order = json.data;\n        this.setState({\n          order: order,\n          orderId: order.id,\n          orderTotal: order.total,\n          totalValueAdded: order.total_value_added,\n          orderSource: order.source,\n          orderStatus: order.status,\n          orderTracking: order.tracking_id,\n          orderNote: order.note,\n          cName: order.customer_name,\n          cContact: order.customer_contact,\n          cAddress: order.customer_address,\n          showOrderDetails: true\n        });\n      }).catch(error => console.log(error));\n      fetch('/getAllOrderDetails/' + id).then(res => res.json()).then(json => {\n        // console.log(json)\n        json.data.map(x => {\n          delete x.createdAt;\n          delete x.updatedAt;\n          delete x.deletedAt;\n          delete x.id;\n          delete x.order_id;\n        });\n        this.setState({\n          orderDetails: json.data\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n    };\n\n    this.deleteProduct = (price, i, pChecked) => {\n      this.refs.orderDetails.minusTotalValue(price);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(price);\n      }\n\n      let table = document.getElementById('productsTable');\n      table.deleteRow(i);\n\n      if (table.rows.length === 1) {\n        this.refs.productsTable.setState({\n          submitOrderBtn: false\n        });\n      }\n    };\n\n    this.checkOrderDetailsValidity = () => {\n      var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\n\n      if (!orderDetailsValidity) {\n        return false;\n      } else if (this.customerForm.checkValidity() === false) {\n        this.customerForm.classList.add('was-validated');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      let orderId = this.orderId.value;\n      let orderDetails = {\n        order_id: orderId,\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked\n      };\n      var options = {\n        method: 'POST',\n        body: JSON.stringify(orderDetails),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/addNewOrderDetails', options).then(res => res.json()).then(json => {// console.log(json)\n      }).catch(error => console.log(error)); // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\n\n      this.refs.orderDetails.minusTotalValue(pPrice);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(pPrice);\n      }\n    };\n\n    this.saveOrderToDB = () => {\n      this.refs.orderDetails.saveOrderToDB();\n    };\n\n    this.refreshOrdersTable = () => {\n      window.location.reload();\n    };\n\n    this.minusFromTotal = pPrice => {\n      this.refs.orderDetails.minusTotalValue(pPrice);\n    };\n\n    this.addToTotal = pPrice => {\n      this.refs.orderDetails.addTotalValue(pPrice);\n    };\n\n    this.minusFromTotalValueAdded = pPrice => {\n      this.refs.orderDetails.minusTotalValueAdded(pPrice);\n    };\n\n    this.addToTotalValueAdded = pPrice => {\n      this.refs.orderDetails.addTotalValueAdded(pPrice);\n    };\n\n    this.state = {\n      modalShow: false,\n      order: '',\n      orderTotal: 0,\n      totalValueAdded: 0,\n      orderSource: '',\n      orderStatus: '',\n      orderTracking: '',\n      orderNote: '',\n      cName: '',\n      cContact: '',\n      cAddress: '',\n      orderId: 1\n    };\n  }\n\n  render() {\n    // console.log(this.state.order);\n    // var { order, orderDetails } = this.state;\n    // var data = {\n    //     columns: [\n    //         { label: 'Name', field: 'product_name' },\n    //         { label: 'SKU', field: 'product_sku' }, { label: 'Rate', field: 'product_rate' },\n    //         { label: 'QTY', field: 'product_qty' }, { label: 'Price', field: 'product_price' },\n    //         { label: 'Remarks', field: 'product_remarks' }, { label: 'Extra Added', field: 'product_extra_added' },\n    //     ],\n    //     rows: orderDetails\n    // }\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      isOpen: this.state.modalShow,\n      toggle: this.toggle,\n      size: \"lg\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Order details\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(OrderDetails, {\n      ref: \"orderDetails\",\n      orderId: this.state.orderId,\n      orderForm: el => this.orderForm = el,\n      customerForm: el => this.customerForm = el,\n      addProductToTbl: this.addProductToTbl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      className: \"mt-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(ProductsTable, {\n      ref: \"productsTable\",\n      refreshOrdersTable: this.refreshOrdersTable,\n      deleteProduct: this.deleteProduct,\n      saveOrderDetailsToDB: this.saveOrderDetailsToDB,\n      saveOrderToDB: this.saveOrderToDB,\n      checkOrderDetailsValidity: this.checkOrderDetailsValidity,\n      productsTable: el => this.productsTable = el,\n      minusFromTotal: this.minusFromTotal,\n      addToTotal: this.addToTotal,\n      minusFromTotalValueAdded: this.minusFromTotalValueAdded,\n      addToTotalValueAdded: this.addToTotalValueAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Save changes\"))));\n  }\n\n}\n\nexport default EditOrderModal;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\EditOrderModal.jsx"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","MDBRow","MDBCol","MDBInput","MDBDataTable","Select","CreateableSelect","OrderDetails","ProductsTable","EditOrderModal","constructor","props","order","fetchData","id","fetch","then","res","json","data","setState","orderId","orderTotal","total","totalValueAdded","total_value_added","orderSource","source","orderStatus","status","orderTracking","tracking_id","orderNote","note","cName","customer_name","cContact","customer_contact","cAddress","customer_address","showOrderDetails","catch","error","console","log","map","x","createdAt","updatedAt","deletedAt","order_id","orderDetails","toggle","modalShow","state","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","refs","productsTable","deleteProduct","price","i","minusTotalValue","minusTotalValueAdded","table","document","getElementById","deleteRow","rows","length","submitOrderBtn","checkOrderDetailsValidity","orderDetailsValidity","customerForm","checkValidity","classList","add","saveOrderDetailsToDB","value","options","method","body","JSON","stringify","headers","saveOrderToDB","refreshOrdersTable","window","location","reload","minusFromTotal","addToTotal","addTotalValue","minusFromTotalValueAdded","addToTotalValueAdded","addTotalValueAdded","render","el","orderForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBRow, MDBCol, MDBInput, MDBDataTable } from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport CreateableSelect from './CreatableAdvancedSelect';\r\nimport OrderDetails from './OrderDetails';\r\nimport ProductsTable from './ProductsTable'\r\n\r\nclass EditOrderModal extends Component {\r\n    order = '';\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false,\r\n            order: '',\r\n            orderTotal: 0,\r\n            totalValueAdded: 0,\r\n            orderSource: '',\r\n            orderStatus: '',\r\n            orderTracking: '',\r\n            orderNote: '',\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n            orderId: 1,\r\n        }\r\n    }\r\n    fetchData = (id) => {\r\n\r\n        fetch('/getSpecificOrder/' + id)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                // this.order = json.data\r\n                var order = json.data\r\n                this.setState({\r\n                    order: order,\r\n                    orderId: order.id,\r\n                    orderTotal: order.total,\r\n                    totalValueAdded: order.total_value_added,\r\n                    orderSource: order.source,\r\n                    orderStatus: order.status,\r\n                    orderTracking: order.tracking_id,\r\n                    orderNote: order.note,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_address,\r\n                    showOrderDetails: true,\r\n                })\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        fetch('/getAllOrderDetails/' + id)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                json.data.map((x) => {\r\n                    delete x.createdAt;\r\n                    delete x.updatedAt;\r\n                    delete x.deletedAt;\r\n                    delete x.id;\r\n                    delete x.order_id;\r\n                });\r\n                this.setState({\r\n                    orderDetails: json.data\r\n                })\r\n\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow,\r\n\r\n        });\r\n    }\r\n    // handleInput = e => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n    // }\r\n    addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\r\n        this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\r\n    }\r\n\r\n    deleteProduct = (price, i, pChecked) => {\r\n\r\n        this.refs.orderDetails.minusTotalValue(price);\r\n        if (pChecked === 'Yes') {\r\n            this.refs.orderDetails.minusTotalValueAdded(price);\r\n        }\r\n        let table = document.getElementById('productsTable');\r\n        table.deleteRow(i);\r\n        if (table.rows.length === 1) {\r\n            this.refs.productsTable.setState({ submitOrderBtn: false })\r\n        }\r\n    }\r\n\r\n    checkOrderDetailsValidity = () => {\r\n        var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\r\n        if (!orderDetailsValidity) {\r\n            return false;\r\n        }\r\n        else if (this.customerForm.checkValidity() === false) {\r\n            this.customerForm.classList.add('was-validated');\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\r\n\r\n        let orderId = this.orderId.value;\r\n        let orderDetails = { order_id: orderId, pName: pName, pSKU: pSKU, pRate: pRate, pQTY: pQTY, pPrice: pPrice, pRemarks: pRemarks, pChecked: pChecked }\r\n        var options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(orderDetails),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/addNewOrderDetails', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n        // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\r\n        this.refs.orderDetails.minusTotalValue(pPrice);\r\n        if (pChecked === 'Yes') {\r\n            this.refs.orderDetails.minusTotalValueAdded(pPrice);\r\n        }\r\n    }\r\n\r\n    saveOrderToDB = () => {\r\n        this.refs.orderDetails.saveOrderToDB();\r\n    }\r\n\r\n    refreshOrdersTable = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    minusFromTotal = (pPrice) => {\r\n        this.refs.orderDetails.minusTotalValue(pPrice)\r\n    }\r\n    addToTotal = (pPrice) => {\r\n        this.refs.orderDetails.addTotalValue(pPrice)\r\n    }\r\n    minusFromTotalValueAdded = (pPrice) => {\r\n        this.refs.orderDetails.minusTotalValueAdded(pPrice);\r\n    }\r\n    addToTotalValueAdded = (pPrice) => {\r\n        this.refs.orderDetails.addTotalValueAdded(pPrice);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.order);\r\n\r\n        // var { order, orderDetails } = this.state;\r\n\r\n        // var data = {\r\n        //     columns: [\r\n        //         { label: 'Name', field: 'product_name' },\r\n        //         { label: 'SKU', field: 'product_sku' }, { label: 'Rate', field: 'product_rate' },\r\n        //         { label: 'QTY', field: 'product_qty' }, { label: 'Price', field: 'product_price' },\r\n        //         { label: 'Remarks', field: 'product_remarks' }, { label: 'Extra Added', field: 'product_extra_added' },\r\n        //     ],\r\n        //     rows: orderDetails\r\n        // }\r\n        return (\r\n            <MDBContainer>\r\n                <MDBModal isOpen={this.state.modalShow} toggle={this.toggle} size='lg' centered>\r\n                    <MDBModalHeader toggle={this.toggle}>Order details</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBRow >\r\n                            <OrderDetails\r\n                                ref='orderDetails'\r\n                                orderId={this.state.orderId}\r\n                                orderForm={el => (this.orderForm = el)}\r\n                                customerForm={el => (this.customerForm = el)}\r\n                                addProductToTbl={this.addProductToTbl}\r\n                            />\r\n                            <MDBRow center className='mt-3 mx-auto'>\r\n\r\n                                <ProductsTable\r\n                                    ref='productsTable'\r\n                                    refreshOrdersTable={this.refreshOrdersTable}\r\n                                    deleteProduct={this.deleteProduct}\r\n                                    saveOrderDetailsToDB={this.saveOrderDetailsToDB}\r\n                                    saveOrderToDB={this.saveOrderToDB}\r\n                                    checkOrderDetailsValidity={this.checkOrderDetailsValidity}\r\n                                    productsTable={el => (this.productsTable = el)}\r\n                                    minusFromTotal={this.minusFromTotal}\r\n                                    addToTotal={this.addToTotal}\r\n                                    minusFromTotalValueAdded={this.minusFromTotalValueAdded}\r\n                                    addToTotalValueAdded={this.addToTotalValueAdded}\r\n                                />\r\n                            </MDBRow>\r\n                        </MDBRow>\r\n                        {/* <MDBRow center>\r\n                            <MDBCol md=\"9\" className='m-0 p-0'>\r\n                                <MDBRow center className='m-0 p-0' >\r\n                                    <MDBCol sm='6' className='m-0'>\r\n                                        <MDBInput value={this.state.orderTotal} label=\"Total\" hint=\"Total\" disabled className='m-0' style={{ fontWeight: 'bold' }} />\r\n                                    </MDBCol>\r\n                                    <MDBCol sm='6' className='m-0'>\r\n                                        <MDBInput value={this.state.totalValueAdded} className='m-0' style={{ fontWeight: 'bold' }} label=\"Total value added\" hint=\"Total value added\" disabled />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow center className='m-0 p-0' >\r\n                                    <MDBCol sm='4' className='m-0 ' >\r\n                                        <MDBInput value={order.id} label=\"Id\" outline disabled className='mt-0 mb-0' />\r\n                                    </MDBCol>\r\n                                    <MDBCol md='4' className=' ' middle >\r\n                                        <React.Fragment>\r\n                                            <Select\r\n                                                styles={customStyles}\r\n                                                value={orderSource}\r\n                                                onChange={this.handleSelectChange}\r\n                                                options={sourceOptions}\r\n                                                placeholder='Source'\r\n                                                isSearchable\r\n                                                className='my-auto'\r\n                                                isClearable\r\n                                            />\r\n                                        </React.Fragment>\r\n                                    </MDBCol>\r\n                                    <MDBCol md='4' className='m-0 ' middle >\r\n                                        <React.Fragment>\r\n                                            <CreateableSelect\r\n                                                ref='createableSelect'\r\n                                                orderStatus={this.orderStatus}\r\n                                                isValidStatus={isValidStatus}\r\n                                            />\r\n                                        </React.Fragment>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow center className='m-0 p-0' >\r\n                                    <MDBCol sm='4' className='m-0 '>\r\n                                        <MDBInput label=\"Tracking Id\" value={order.tracking_id} name=\"orderTracking\" onInput={this.handleInput} outline className='m-0' />\r\n                                    </MDBCol>\r\n                                    <MDBCol sm='8' className='m-0 '>\r\n                                        <MDBInput label=\"Note\" value={order.note} name=\"orderNote\" onInput={this.handleInput} outline className='m-0' />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className='m-0 p-0' end>\r\n                                    <MDBCol sm='12' className='m-0 p-0' bottom >\r\n                                        <label style={{ fontWeight: 'bold', textAlign: 'left' }}>Customer:</label>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className='m-0 p-0'>\r\n                                    <MDBCol sm='3' className='m-0'>\r\n                                        <MDBInput value={this.state.cName} onInput={this.handleInput} name=\"cName\" className='m-0' label=\"Name\" outline required />\r\n                                    </MDBCol>\r\n                                    <MDBCol sm='3' className='m-0'>\r\n                                        <MDBInput value={this.state.cContact} onInput={this.handleInput} name=\"cContact\" className='m-0' label=\"Contact\" outline required />\r\n                                    </MDBCol>\r\n                                    <MDBCol sm='6' className='m-0'>\r\n                                        <MDBInput value={this.state.cAddress} onInput={this.handleInput} name=\"cAddress\" className='m-0' label=\"Address\" outline required />\r\n                                    </MDBCol>\r\n\r\n                                </MDBRow>\r\n                                <MDBRow className='m-0 p-0' end>\r\n                                    <MDBCol sm='12' className='m-0 p-0' bottom >\r\n                                        <label style={{ fontWeight: 'bold', textAlign: 'left' }}>Products:</label>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBDataTable id='viewOrdersTable' striped small theadColor=\"teal\"\r\n                                    bordered entries={10} entriesOptions={[5, 10, 20]} responsive\r\n                                    data={data} theadTextWhite >\r\n                                </MDBDataTable>\r\n\r\n\r\n                            </MDBCol>\r\n                        </MDBRow> */}\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                        <MDBBtn outline color=\"primary\">Save changes</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditOrderModal;"]},"metadata":{},"sourceType":"module"}