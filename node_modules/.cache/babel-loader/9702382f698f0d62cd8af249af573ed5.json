{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\ProductsTable.jsx\";\nimport React, { Component } from 'react';\nimport PTableRow from './PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBRow, MDBCol, MDBContainer } from 'mdbreact';\n\nclass ProductsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      var row = [];\n      row.push(React.createElement(PTableRow, {\n        index: 'index',\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked,\n        key: Math.random(),\n        id: Math.random(),\n        deleteProduct: this.props.deleteProduct,\n        minusFromTotal: this.props.minusFromTotal,\n        addToTotal: this.props.addToTotal,\n        minusFromTotalValueAdded: this.props.minusFromTotalValueAdded,\n        addToTotalValueAdded: this.props.addToTotalValueAdded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      this.setState(state => {\n        var Rows = [...state.Rows, row];\n        return {\n          Rows\n        };\n      });\n      this.setState({\n        submitOrderBtn: true\n      });\n    };\n\n    this.submitOrder = () => {\n      let allFormsValid = this.props.checkOrderDetailsValidity(); // let allFormsValid = true\n\n      if (allFormsValid) {\n        this.props.saveOrderToDB();\n        this.setState({\n          submitOrderBtn: false\n        });\n        let pTable = document.getElementById('productsTable');\n\n        for (let index = 1; index < pTable.rows.length; index++) {\n          const pName = pTable.rows[index].cells[1].innerHTML;\n          const pSKU = pTable.rows[index].cells[2].innerHTML;\n          const pRate = pTable.rows[index].cells[3].innerHTML;\n          const pQTY = pTable.rows[index].cells[4].innerHTML;\n          const pPrice = pTable.rows[index].cells[5].innerHTML;\n          const pRemarks = pTable.rows[index].cells[6].innerHTML;\n          const pChecked = pTable.rows[index].cells[7].innerHTML;\n          this.props.saveOrderDetailsToDB(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n        }\n\n        for (let index = pTable.rows.length - 1; index > 0; index--) {\n          pTable.deleteRow(index);\n        }\n      } else {\n        console.log('something wrong');\n      }\n    };\n\n    this.state = {\n      Rows: [],\n      submitOrderBtn: false,\n      index: 0\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      id: \"pTableCard\",\n      style: {\n        display: 'none'\n      },\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Products to be added\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MDBTable, {\n      id: \"productsTable\",\n      ref: this.props.productsTable,\n      striped: true,\n      responsive: true,\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.submitOrderBtn ? React.createElement(MDBBtn, {\n      onClick: this.submitOrder,\n      type: \"button\",\n      size: \"sm\",\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\") : null), React.createElement(MDBTableHead, {\n      color: \"teal\",\n      textWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Sr.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"SKU\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Rate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"QTY\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Remarks\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Extra Added?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.Rows))))));\n  }\n\n}\n\nexport default ProductsTable;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\ProductsTable.jsx"],"names":["React","Component","PTableRow","MDBTable","MDBTableHead","MDBTableBody","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBRow","MDBCol","MDBContainer","ProductsTable","constructor","props","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","row","push","Math","random","deleteProduct","minusFromTotal","addToTotal","minusFromTotalValueAdded","addToTotalValueAdded","setState","state","Rows","submitOrderBtn","submitOrder","allFormsValid","checkOrderDetailsValidity","saveOrderToDB","pTable","document","getElementById","index","rows","length","cells","innerHTML","saveOrderDetailsToDB","deleteRow","console","log","bind","render","display","productsTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PTableRow from './PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBRow, MDBCol, MDBContainer } from 'mdbreact';\n\n\nclass ProductsTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Rows: [],\n            submitOrderBtn: false,\n            index: 0\n        }\n        this.addProductToTbl = this.addProductToTbl.bind(this);\n    }\n\n    addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n        var row = [];\n        row.push(\n            <PTableRow\n                index={'index'}\n                pName={pName}\n                pSKU={pSKU}\n                pRate={pRate}\n                pQTY={pQTY}\n                pPrice={pPrice}\n                pRemarks={pRemarks}\n                pChecked={pChecked}\n                key={Math.random()}\n                id={Math.random()}\n                deleteProduct={this.props.deleteProduct}\n                minusFromTotal={this.props.minusFromTotal}\n                addToTotal={this.props.addToTotal}\n                minusFromTotalValueAdded={this.props.minusFromTotalValueAdded}\n                addToTotalValueAdded={this.props.addToTotalValueAdded}\n            />\n        );\n        this.setState(state => {\n            var Rows = [...state.Rows, row]\n            return {\n                Rows\n            };\n        });\n        this.setState({ submitOrderBtn: true });\n    }\n    submitOrder = () => {\n        let allFormsValid = this.props.checkOrderDetailsValidity();\n        // let allFormsValid = true\n        if (allFormsValid) {\n            this.props.saveOrderToDB();\n            this.setState({ submitOrderBtn: false })\n            let pTable = document.getElementById('productsTable');\n            for (let index = 1; index < pTable.rows.length; index++) {\n                const pName = pTable.rows[index].cells[1].innerHTML;\n                const pSKU = pTable.rows[index].cells[2].innerHTML;\n                const pRate = pTable.rows[index].cells[3].innerHTML;\n                const pQTY = pTable.rows[index].cells[4].innerHTML;\n                const pPrice = pTable.rows[index].cells[5].innerHTML;\n                const pRemarks = pTable.rows[index].cells[6].innerHTML;\n                const pChecked = pTable.rows[index].cells[7].innerHTML;\n                this.props.saveOrderDetailsToDB(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n            }\n            for (let index = pTable.rows.length - 1; index > 0; index--) {\n                pTable.deleteRow(index);\n            }\n        }\n        else {\n            console.log('something wrong')\n        }\n    }\n\n    render() {\n\n\n        return (\n            <MDBContainer >\n                <MDBRow center>\n                    <MDBCard id='pTableCard' style={{ display: 'none' }} className='col-9'>\n                        <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\n                            Products to be added\n                        </MDBCardHeader>\n                        <MDBCardBody className='p-2'>\n                            <MDBTable id='productsTable' ref={this.props.productsTable} striped responsive bordered >\n                                <caption>\n                                    {this.state.submitOrderBtn ?\n                                        <MDBBtn onClick={this.submitOrder} type='button' size='sm' className='p-2' >Submit</MDBBtn> :\n                                        null}\n                                </caption>\n                                <MDBTableHead color='teal' textWhite >\n                                    <tr>\n                                        <th>Sr.</th>\n                                        <th>Product</th>\n                                        <th>SKU</th>\n                                        <th>Rate</th>\n                                        <th>QTY</th>\n                                        <th>Price</th>\n                                        <th>Remarks</th>\n                                        <th>Extra Added?</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </MDBTableHead>\n                                <MDBTableBody>\n                                    {this.state.Rows}\n                                </MDBTableBody>\n                            </MDBTable>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n\n}\n\nexport default ProductsTable"]},"metadata":{},"sourceType":"module"}