{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\PTableRow.jsx\";\nimport React, { Component } from 'react';\n\nclass PTableRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.editRow = e => {\n      let iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\n      let svgClick = e.target.parentNode.parentNode.parentNode;\n      let buttonClick = e.target.parentNode.parentNode;\n      let tdClick = e.target.parentNode;\n      let target = e.target;\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = svgClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = buttonClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = tdClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = target;\n      } // iconClick.contentEditable = true;\n\n\n      const products = this.props.products;\n      let productName = iconClick.cells[1].innerHTML;\n      let product_id;\n      products.forEach(product => {\n        if (productName == product.name) {\n          product_id = product.id;\n          return;\n        }\n      });\n      let rate = iconClick.cells[2].innerHTML;\n      let qty = iconClick.cells[3].innerHTML;\n      let discount = iconClick.cells[4].innerHTML;\n      let price = iconClick.cells[5].innerHTML;\n      let i = iconClick.rowIndex;\n      this.props.EditRow(product_id, rate, qty, discount, price, i); // document.getElementById('salestbl').deleteRow(i)\n    };\n\n    this.handleKeyDown = event => {\n      console.log(\"blur\");\n      var esc = event.which == 27,\n          nl = event.which == 13,\n          el = event.target,\n          input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',\n          data = {};\n\n      if (input) {\n        if (esc) {\n          // restore state\n          document.execCommand('undo');\n          el.blur();\n        } else if (nl) {\n          // save\n          data[el.getAttribute('data-name')] = el.innerHTML;\n          console.log(JSON.stringify(data));\n          el.blur();\n          event.preventDefault();\n        }\n      }\n    };\n\n    this.state = {};\n  }\n\n  deleteRowfn(e) {\n    let iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n    let svgClik = e.target.parentNode.parentNode.parentNode;\n    let buttonClik = e.target.parentNode.parentNode;\n    let tdClik = e.target.parentNode;\n    let targt = e.target;\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = svgClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = buttonClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = tdClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = targt;\n    }\n\n    let i = iconClik.rowIndex;\n    let price = iconClik.cells[5].innerHTML;\n    let pChecked = iconClik.cells[7].innerHTML;\n    this.props.deleteProduct(price, i, pChecked);\n  }\n\n  render() {\n    var pName = this.props.pName;\n    var pSKU = this.props.pSKU;\n    var pRate = this.props.pRate;\n    var pQTY = this.props.pQTY;\n    var pPrice = this.props.pPrice;\n    var pRemarks = this.props.pRemarks;\n    var pChecked = this.props.pChecked ? 'Yes' : 'No';\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, 'index'), React.createElement(\"td\", {\n      suppressContentEditableWarning: true,\n      onKeyDown: this.handleKeyDown,\n      contentEditable: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, pName), React.createElement(\"td\", {\n      contentEditable: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, pSKU), React.createElement(\"td\", {\n      contentEditable: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, pRate), React.createElement(\"td\", {\n      contentEditable: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, pQTY), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, pPrice), React.createElement(\"td\", {\n      contentEditable: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, pRemarks), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, pChecked), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteRowfn.bind(this),\n      type: \"button\",\n      className: \" btn-sm btn-dark mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default PTableRow;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\PTableRow.jsx"],"names":["React","Component","PTableRow","constructor","args","editRow","e","iconClick","target","parentNode","svgClick","buttonClick","tdClick","rowIndex","undefined","products","props","productName","cells","innerHTML","product_id","forEach","product","name","id","rate","qty","discount","price","i","EditRow","handleKeyDown","event","console","log","esc","which","nl","el","input","nodeName","data","document","execCommand","blur","getAttribute","JSON","stringify","preventDefault","state","deleteRowfn","iconClik","svgClik","buttonClik","tdClik","targt","pChecked","deleteProduct","render","pName","pSKU","pRate","pQTY","pPrice","pRemarks","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass PTableRow extends Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n\n        };\n    }\n\n    editRow = (e) => {\n        let iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\n        let svgClick = e.target.parentNode.parentNode.parentNode;\n        let buttonClick = e.target.parentNode.parentNode;\n        let tdClick = e.target.parentNode;\n        let target = e.target\n\n        if (iconClick.rowIndex === undefined) {\n            iconClick = svgClick;\n        }\n        if (iconClick.rowIndex === undefined) {\n            iconClick = buttonClick;\n        }\n        if (iconClick.rowIndex === undefined) {\n            iconClick = tdClick;\n        }\n        if (iconClick.rowIndex === undefined) {\n            iconClick = target;\n        }\n\n        // iconClick.contentEditable = true;\n        const products = this.props.products;\n        let productName = iconClick.cells[1].innerHTML\n        let product_id;\n\n        products.forEach(product => {\n            if (productName == product.name) {\n                product_id = product.id;\n                return;\n            }\n        });\n\n        let rate = iconClick.cells[2].innerHTML\n        let qty = iconClick.cells[3].innerHTML\n        let discount = iconClick.cells[4].innerHTML\n        let price = iconClick.cells[5].innerHTML\n        let i = iconClick.rowIndex;\n\n\n        this.props.EditRow(product_id, rate, qty, discount, price, i);\n        // document.getElementById('salestbl').deleteRow(i)\n\n    }\n\n    deleteRowfn(e) {\n        let iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n        let svgClik = e.target.parentNode.parentNode.parentNode;\n        let buttonClik = e.target.parentNode.parentNode;\n        let tdClik = e.target.parentNode;\n        let targt = e.target\n\n        if (iconClik.rowIndex === undefined) {\n            iconClik = svgClik;\n        }\n        if (iconClik.rowIndex === undefined) {\n            iconClik = buttonClik;\n        }\n        if (iconClik.rowIndex === undefined) {\n            iconClik = tdClik;\n        }\n        if (iconClik.rowIndex === undefined) {\n            iconClik = targt;\n        }\n        let i = iconClik.rowIndex;\n        let price = iconClik.cells[5].innerHTML;\n        let pChecked = iconClik.cells[7].innerHTML;\n\n        this.props.deleteProduct(price, i, pChecked);\n\n    }\n    handleKeyDown = (event) => {\n        console.log(\"blur\");\n        var esc = event.which == 27,\n            nl = event.which == 13,\n            el = event.target,\n            input = el.nodeName != 'INPUT' && el.nodeName != 'TEXTAREA',\n            data = {};\n\n        if (input) {\n            if (esc) {\n                // restore state\n                document.execCommand('undo');\n                el.blur();\n            } else if (nl) {\n                // save\n                data[el.getAttribute('data-name')] = el.innerHTML;\n\n                console.log(JSON.stringify(data));\n\n                el.blur();\n                event.preventDefault();\n            }\n        }\n\n    }\n    render() {\n\n        var pName = this.props.pName;\n        var pSKU = this.props.pSKU;\n        var pRate = this.props.pRate;\n        var pQTY = this.props.pQTY;\n        var pPrice = this.props.pPrice;\n        var pRemarks = this.props.pRemarks;\n        var pChecked = (this.props.pChecked) ? 'Yes' : 'No';\n\n        return (\n            <tr >\n                <td>{'index'}</td>\n                <td suppressContentEditableWarning onKeyDown={this.handleKeyDown} contentEditable='true'>{pName}</td>\n                <td contentEditable='true'>{pSKU}</td>\n                <td contentEditable='true'>{pRate}</td>\n                <td contentEditable='true'>{pQTY}</td>\n                <td>{pPrice}</td>\n                <td contentEditable='true'>{pRemarks}</td>\n                <td>{pChecked}</td>\n                <td>\n                    <button onClick={this.deleteRowfn.bind(this)} type='button' className=\" btn-sm btn-dark mb-1\">\n                        <i className=\"fas fa-trash\"></i>\n                    </button>\n                </td>\n            </tr >\n        );\n    }\n}\n\n\nexport default PTableRow"]},"metadata":{},"sourceType":"module"}