{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\reports\\\\pages\\\\sections\\\\AllReportsOrderWise.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\nimport { Can } from \"../../../../configs/Ability-context\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nvar AllReports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllReports, _Component);\n\n  function AllReports() {\n    var _this;\n\n    _classCallCheck(this, AllReports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllReports).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleDateChange = function (value) {\n      _this.setState({\n        fromDate: value\n      });\n\n      var comingDate = value;\n      var _1day = 86400000; //miliseconds\n\n      var date = new Date(comingDate - _1day);\n\n      var selectedOrders = _this.state.orders.filter(function (order) {\n        return new Date(order.date) > date;\n      });\n\n      _this.setState({\n        selectedOrders: selectedOrders\n      });\n    };\n\n    _this.totalSales = function () {\n      var Total = 0;\n\n      _this.state.selectedOrders.forEach(function (order) {\n        Total = Total + Number(order.total);\n      });\n\n      return Total;\n    };\n\n    _this.totalValueAdded = function () {\n      var Total = 0;\n\n      _this.state.selectedOrders.forEach(function (order) {\n        Total = Total + Number(order.total_value_added);\n      });\n\n      return Total;\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllOrders').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)    \n      var orders = json.data;\n\n      if (_this._isMounted) {\n        _this.setState({\n          orders: orders,\n          selectedOrders: orders\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      orders: [],\n      selectedOrders: [],\n      fromDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(AllReports, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedOrders = _this$state.selectedOrders,\n          fromDate = _this$state.fromDate;\n      var rows = [];\n      var index = 0;\n      selectedOrders.forEach(function (order) {\n        index = index + 1;\n        var date;\n\n        if (order.date === null) {\n          date = new Date(\"2019-07-09T00:00:00.000Z\").toLocaleString('en-GB');\n        } else {\n          // date = new Date(orderDetail.order_date).toLocaleDateString();\n          date = new Date(order.date).toLocaleString('en-GB');\n        }\n\n        rows.push({\n          order_id: order.order_id,\n          date: date,\n          cName: order.customer_name,\n          cContact: order.customer_contact,\n          cAddress: order.customer_address,\n          total: order.total,\n          total_value: order.total_value_added,\n          tracking: order.tracking_id,\n          status: order.status\n        });\n      });\n      var data = {\n        columns: [{\n          label: 'Order_Id',\n          field: 'order_id'\n        }, {\n          label: 'Date',\n          field: 'date'\n        }, {\n          label: 'Customer Name',\n          field: 'cName'\n        }, {\n          label: 'Customer Contact',\n          field: 'cContact'\n        }, {\n          label: 'Customer Address',\n          field: 'cAddress'\n        }, {\n          label: 'Total',\n          field: 'total'\n        }, {\n          label: 'Tracking Id',\n          field: 'tracking'\n        }, {\n          label: 'Note',\n          field: 'note'\n        }, {\n          label: 'Status',\n          field: 'status'\n        }, {\n          label: 'Action',\n          field: 'buttons'\n        }],\n        rows: rows\n      };\n      return React.createElement(Can, {\n        I: \"read\",\n        a: \"report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"\",\n        fluid: true,\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Order Reports\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Select Date from which you want to fetch report.\"), React.createElement(MDBCol, {\n        md: \"12\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"3\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        id: \"datePicker\",\n        selected: fromDate,\n        onChange: this.handleDateChange,\n        className: \"form-control\",\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        autoComplete: \"off\",\n        dateFormat: \"dd/MM/yyyy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })))), React.createElement(MDBDataTable, {\n        id: \"reportsTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 12,\n        entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Sales\",\n        value: this.totalSales(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Value Added\",\n        value: this.totalValueAdded(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return AllReports;\n}(Component);\n\nexport default AllReports;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\reports\\pages\\sections\\AllReportsOrderWise.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","MDBInput","Can","DatePicker","AllReports","_isMounted","componentWillUnmount","handleDateChange","value","setState","fromDate","comingDate","_1day","date","Date","selectedOrders","state","orders","filter","order","totalSales","Total","forEach","Number","total","totalValueAdded","total_value_added","fetch","then","res","json","data","error","console","log","rows","index","toLocaleString","push","order_id","cName","customer_name","cContact","customer_contact","cAddress","customer_address","total_value","tracking","tracking_id","status","columns","label","field","marginTop","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,aAAhC,EAA+CC,WAA/C,EAA4DC,MAA5D,EAAoEC,OAApE,EAA6EC,YAA7E,EAA2FC,MAA3F,EAAmGC,MAAnG,EAA2GC,QAA3G,QAA2H,UAA3H;AACA,SAASC,GAAT,QAAoB,qCAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAO,uDAAP;;IAGMC,U;;;;;AAEF,wBAAc;AAAA;;AAAA;;AACV;AADU,UADdC,UACc,GADD,KACC;;AAAA,UAoBdC,oBApBc,GAoBS,YAAM;AACzB,YAAKD,UAAL,GAAkB,KAAlB;AACH,KAtBa;;AAAA,UA0BdE,gBA1Bc,GA0BK,UAACC,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAEF;AADA,OAAd;;AAIA,UAAIG,UAAU,GAAGH,KAAjB;AACA,UAAII,KAAK,GAAG,QAAZ,CAN0B,CAML;;AACrB,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,UAAU,GAAGC,KAAtB,CAAX;;AACA,UAAIG,cAAc,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,KAAK;AAAA,eAAI,IAAIL,IAAJ,CAASK,KAAK,CAACN,IAAf,IAAuBA,IAA3B;AAAA,OAA9B,CAArB;;AACA,YAAKJ,QAAL,CAAc;AACVM,QAAAA,cAAc,EAAEA;AADN,OAAd;AAIH,KAvCa;;AAAA,UAyCdK,UAzCc,GAyCD,YAAM;AACf,UAAIC,KAAK,GAAG,CAAZ;;AACA,YAAKL,KAAL,CAAWD,cAAX,CAA0BO,OAA1B,CAAkC,UAAAH,KAAK,EAAI;AACvCE,QAAAA,KAAK,GAAGA,KAAK,GAAGE,MAAM,CAACJ,KAAK,CAACK,KAAP,CAAtB;AACH,OAFD;;AAGA,aAAOH,KAAP;AACH,KA/Ca;;AAAA,UAiDdI,eAjDc,GAiDI,YAAM;AACpB,UAAIJ,KAAK,GAAG,CAAZ;;AACA,YAAKL,KAAL,CAAWD,cAAX,CAA0BO,OAA1B,CAAkC,UAAAH,KAAK,EAAI;AACvCE,QAAAA,KAAK,GAAGA,KAAK,GAAGE,MAAM,CAACJ,KAAK,CAACO,iBAAP,CAAtB;AACH,OAFD;;AAGA,aAAOL,KAAP;AAEH,KAxDa;;AAEV,UAAKhB,UAAL,GAAkB,IAAlB;AACAsB,IAAAA,KAAK,CAAC,eAAD,CAAL,CACKC,IADL,CACU,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADV,EAEKF,IAFL,CAEU,UAACE,IAAD,EAAU;AACZ;AACA,UAAIb,MAAM,GAAGa,IAAI,CAACC,IAAlB;;AACA,UAAI,MAAK1B,UAAT,EAAqB;AACjB,cAAKI,QAAL,CAAc;AAAEQ,UAAAA,MAAM,EAAEA,MAAV;AAAkBF,UAAAA,cAAc,EAAEE;AAAlC,SAAd;AACH;AACJ,KARL,WASW,UAACe,KAAD;AAAA,aAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,KATX;AAUA,UAAKhB,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETF,MAAAA,cAAc,EAAE,EAFP;AAGTL,MAAAA,QAAQ,EAAE,IAAII,IAAJ;AAHD,KAAb;AAbU;AAkBb;;;;6BAwCQ;AAAA,wBAC8B,KAAKE,KADnC;AAAA,UACCD,cADD,eACCA,cADD;AAAA,UACiBL,QADjB,eACiBA,QADjB;AAEL,UAAIyB,IAAI,GAAG,EAAX;AACA,UAAIC,KAAK,GAAG,CAAZ;AACArB,MAAAA,cAAc,CAACO,OAAf,CAAuB,UAACH,KAAD,EAAW;AAE9BiB,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACA,YAAIvB,IAAJ;;AACA,YAAIM,KAAK,CAACN,IAAN,KAAe,IAAnB,EAAyB;AACrBA,UAAAA,IAAI,GAAG,IAAIC,IAAJ,CAAS,0BAAT,EAAqCuB,cAArC,CAAoD,OAApD,CAAP;AACH,SAFD,MAGK;AACD;AACAxB,UAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASK,KAAK,CAACN,IAAf,EAAqBwB,cAArB,CAAoC,OAApC,CAAP;AACH;;AACDF,QAAAA,IAAI,CAACG,IAAL,CACI;AACIC,UAAAA,QAAQ,EAAEpB,KAAK,CAACoB,QADpB;AAEI1B,UAAAA,IAAI,EAAEA,IAFV;AAGI2B,UAAAA,KAAK,EAAErB,KAAK,CAACsB,aAHjB;AAIIC,UAAAA,QAAQ,EAAEvB,KAAK,CAACwB,gBAJpB;AAKIC,UAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,gBALpB;AAMIrB,UAAAA,KAAK,EAAEL,KAAK,CAACK,KANjB;AAOIsB,UAAAA,WAAW,EAAE3B,KAAK,CAACO,iBAPvB;AAQIqB,UAAAA,QAAQ,EAAE5B,KAAK,CAAC6B,WARpB;AASIC,UAAAA,MAAM,EAAE9B,KAAK,CAAC8B;AATlB,SADJ;AAaH,OAxBD;AA0BA,UAAIlB,IAAI,GAAG;AACPmB,QAAAA,OAAO,EAAE,CACJ;AAAEC,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SADI,EAEH;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAFG,EAGL;AAAED,UAAAA,KAAK,EAAE,eAAT;AAA0BC,UAAAA,KAAK,EAAE;AAAjC,SAHK,EAIJ;AAAED,UAAAA,KAAK,EAAE,kBAAT;AAA6BC,UAAAA,KAAK,EAAE;AAApC,SAJI,EAKL;AAAED,UAAAA,KAAK,EAAE,kBAAT;AAA6BC,UAAAA,KAAK,EAAE;AAApC,SALK,EAK8C;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAL9C,EAML;AAAED,UAAAA,KAAK,EAAE,aAAT;AAAwBC,UAAAA,KAAK,EAAE;AAA/B,SANK,EAMyC;AAAED,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SANzC,EAOL;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAPK,EAOkC;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAPlC,CADF;AAUPjB,QAAAA,IAAI,EAAEA;AAVC,OAAX;AAYA,aACI,oBAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,CAAC,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,EAAxB;AAA2B,QAAA,KAAK,MAAhC;AAAiC,QAAA,KAAK,EAAE;AAAEkB,UAAAA,SAAS,EAAE;AAAb,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAC,IAAnB;AAAwB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA/B;AAAkD,QAAA,SAAS,EAAC,8BAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAe,QAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,EAAE,EAAC,YADP;AAEI,QAAA,QAAQ,EAAE5C,QAFd;AAGI,QAAA,QAAQ,EAAE,KAAKH,gBAHnB;AAII,QAAA,SAAS,EAAC,cAJd;AAKI,QAAA,aAAa,MALjB;AAMI,QAAA,iBAAiB,MANrB;AAOI,QAAA,gBAAgB,MAPpB;AAQI,QAAA,YAAY,EAAC,QARjB;AASI,QAAA,YAAY,EAAC,KATjB;AAUI,QAAA,UAAU,EAAC,YAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAFJ,CADJ,EAqBI,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAgC,QAAA,OAAO,MAAvC;AAAwC,QAAA,KAAK,MAA7C;AAA8C,QAAA,KAAK,MAAnD;AAAoD,QAAA,UAAU,EAAC,MAA/D;AACI,QAAA,QAAQ,MADZ;AACa,QAAA,GAAG,MADhB;AACiB,QAAA,OAAO,EAAE,EAD1B;AAC8B,QAAA,cAAc,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB,EAA6B,GAA7B,CAD9C;AACiF,QAAA,UAAU,MAD3F;AAEI,QAAA,IAAI,EAAEwB,IAFV;AAEgB,QAAA,cAAc,MAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,EAyBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,aAA5B;AAA0C,QAAA,KAAK,EAAE,KAAKX,UAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,mBAA5B;AAAgD,QAAA,KAAK,EAAE,KAAKK,eAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CAzBJ,CAJJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAoDH;;;;EA1JoBlC,S;;AA8JzB,eAAea,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\r\nimport { Can } from \"../../../../configs/Ability-context\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\n\r\nclass AllReports extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllOrders')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)    \r\n                let orders = json.data\r\n                if (this._isMounted) {\r\n                    this.setState({ orders: orders, selectedOrders: orders })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orders: [],\r\n            selectedOrders: [],\r\n            fromDate: new Date()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    // handling date value and refreshing records\r\n\r\n    handleDateChange = (value) => {\r\n        this.setState({\r\n            fromDate: value\r\n        })\r\n\r\n        let comingDate = value\r\n        let _1day = 86400000 //miliseconds\r\n        let date = new Date(comingDate - _1day);\r\n        let selectedOrders = this.state.orders.filter(order => new Date(order.date) > date)\r\n        this.setState({\r\n            selectedOrders: selectedOrders\r\n        });\r\n\r\n    }\r\n\r\n    totalSales = () => {\r\n        let Total = 0;\r\n        this.state.selectedOrders.forEach(order => {\r\n            Total = Total + Number(order.total)\r\n        })\r\n        return Total\r\n    }\r\n\r\n    totalValueAdded = () => {\r\n        let Total = 0;\r\n        this.state.selectedOrders.forEach(order => {\r\n            Total = Total + Number(order.total_value_added)\r\n        })\r\n        return Total\r\n\r\n    }\r\n\r\n    render() {\r\n        var { selectedOrders, fromDate } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n        selectedOrders.forEach((order) => {\r\n\r\n            index = index + 1;\r\n            let date;\r\n            if (order.date === null) {\r\n                date = new Date(\"2019-07-09T00:00:00.000Z\").toLocaleString('en-GB');\r\n            }\r\n            else {\r\n                // date = new Date(orderDetail.order_date).toLocaleDateString();\r\n                date = new Date(order.date).toLocaleString('en-GB');\r\n            }\r\n            rows.push(\r\n                {\r\n                    order_id: order.order_id,\r\n                    date: date,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_address,\r\n                    total: order.total,\r\n                    total_value: order.total_value_added,\r\n                    tracking: order.tracking_id,\r\n                    status: order.status,\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                 { label: 'Order_Id', field: 'order_id', },\r\n                  { label: 'Date', field: 'date', },\r\n                { label: 'Customer Name', field: 'cName' },\r\n                 { label: 'Customer Contact', field: 'cContact', },\r\n                { label: 'Customer Address', field: 'cAddress', }, { label: 'Total', field: 'total', },\r\n                { label: 'Tracking Id', field: 'tracking', }, { label: 'Note', field: 'note', },\r\n                { label: 'Status', field: 'status', }, { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='report'>\r\n                <MDBContainer className='' fluid style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol sm=\"10\">\r\n                            <MDBCard className=' p-0'>\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                                    Order Reports\r\n                            </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n                                    <MDBRow className='m-0 p-0' >\r\n                                        <label>Select Date from which you want to fetch report.</label>\r\n                                        <MDBCol md='12' className='m-0 p-0' >\r\n                                            <MDBCol md='3' className='m-0 p-0'>\r\n                                                <DatePicker\r\n                                                    id='datePicker'\r\n                                                    selected={fromDate}\r\n                                                    onChange={this.handleDateChange}\r\n                                                    className='form-control'\r\n                                                    peekNextMonth\r\n                                                    showMonthDropdown\r\n                                                    showYearDropdown\r\n                                                    dropdownMode=\"select\"\r\n                                                    autoComplete='off'\r\n                                                    dateFormat=\"dd/MM/yyyy\"\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBDataTable id='reportsTable' striped small hover theadColor=\"teal\"\r\n                                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                                        data={data} theadTextWhite >\r\n                                    </MDBDataTable>\r\n                                    <MDBRow>\r\n                                        <MDBCol>\r\n\r\n                                            <MDBInput type='text' label='Total Sales' value={this.totalSales()} />\r\n                                        </MDBCol>\r\n                                        <MDBCol>\r\n                                            <MDBInput type='text' label='Total Value Added' value={this.totalValueAdded()} />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllReports"]},"metadata":{},"sourceType":"module"}