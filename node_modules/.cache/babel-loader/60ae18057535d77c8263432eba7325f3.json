{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\roles\\\\pages\\\\NewRole.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBIcon, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\nimport Notification from '../../misc/sections/Notification';\nimport { Can } from '../../../configs/Ability-context';\n\nclass NewUser extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let form = this.refs.newRoleForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        let name = this.state.name;\n        let role = {\n          name: name\n        };\n        var options = {\n          method: 'POST',\n          body: JSON.stringify(role),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/addNewRole', options).then(res => res.json()).then(json => {\n          // console.log(json)\n          if (this._isMounted === true) {\n            this.setState({\n              message: json.message,\n              notificationShow: true\n            });\n          }\n\n          if (json.success === true) {\n            this.setState({\n              name: ''\n            });\n          } else {\n            this.name.focus();\n          }\n\n          if (this._isMounted === true) {\n            setTimeout(() => this.setState({\n              notificationShow: false\n            }), 1502);\n          }\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this._isMounted = true;\n    this.state = {\n      name: '',\n      message: '',\n      notificationShow: false\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    var name = this.state.name;\n    return React.createElement(Can, {\n      I: \"create\",\n      a: \"role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      className: \"\",\n      style: {\n        marginTop: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \" p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      style: {\n        color: 'teal'\n      },\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"New Role\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      ref: \"newRoleForm\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      onInput: this.handleInput,\n      value: this.state.name,\n      label: \"Name\",\n      name: \"name\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      onInput: this.handleInput,\n      value: this.state.email,\n      label: \"Email\",\n      name: \"email\",\n      icon: \"envelope\",\n      group: true,\n      type: \"email\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      onInput: this.handleInput,\n      value: this.state.cell,\n      label: \"Phone\",\n      name: \"cell\",\n      icon: \"phone\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      onInput: this.handleInput,\n      value: this.state.username,\n      label: \"Username\",\n      name: \"username\",\n      inputRef: el => {\n        this.username = el;\n      },\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      onInput: this.handleInput,\n      value: this.state.password,\n      label: \"Password\",\n      name: \"password\",\n      icon: \"lock\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), showOptions ? React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Select, {\n      styles: customStyles,\n      value: role,\n      onChange: this.handleSelectChange,\n      options: roleOptions,\n      placeholder: \"Role\",\n      isSearchable: true,\n      isClearable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      size: \"sm\",\n      color: \"teal\",\n      outline: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Register\"))))), this.state.notificationShow ? React.createElement(Notification, {\n      message: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : null))));\n  }\n\n}\n\nexport default NewUser;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\roles\\pages\\NewRole.jsx"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBIcon","MDBCardBody","MDBCardHeader","MDBCard","Notification","Can","NewUser","constructor","_isMounted","handleInput","e","setState","target","name","value","handleSubmit","preventDefault","form","refs","newRoleForm","checkValidity","classList","add","state","role","options","method","body","JSON","stringify","headers","fetch","then","res","json","message","notificationShow","success","focus","setTimeout","catch","error","console","log","componentWillUnmount","render","marginTop","color","email","cell","username","el","password","showOptions","customStyles","handleSelectChange","roleOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBIcon, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\r\nimport Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\n\r\nclass NewUser extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            message: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newRoleForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else {\r\n            let name = this.state.name\r\n            let role = { name: name }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(role),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewRole', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    if (this._isMounted === true) {\r\n                        this.setState({ message: json.message, notificationShow: true })\r\n                    }\r\n                    if (json.success === true) {\r\n\r\n                        this.setState({\r\n                            name: ''\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    if (this._isMounted === true) {\r\n                        setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var { name } = this.state\r\n\r\n        return (\r\n            <Can I='create' a='role'>\r\n                <MDBContainer className='' style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard className=' p-5'>\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                                    New Role\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n\r\n                                    <form ref='newRoleForm' onSubmit={this.handleSubmit} noValidate>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.name}\r\n                                                label=\"Name\"\r\n                                                name='name'\r\n                                                icon=\"user\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.email}\r\n                                                label=\"Email\"\r\n                                                name=\"email\"\r\n                                                icon=\"envelope\"\r\n                                                group\r\n                                                type=\"email\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.cell}\r\n                                                label=\"Phone\"\r\n                                                name=\"cell\"\r\n                                                icon=\"phone\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.username}\r\n                                                label=\"Username\"\r\n                                                name=\"username\"\r\n                                                inputRef={el => { this.username = el }}\r\n                                                icon=\"user\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.password}\r\n                                                label=\"Password\"\r\n                                                name=\"password\"\r\n                                                icon=\"lock\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                required>\r\n                                                {/* <MDBIcon icon=\"home\" style={{ float: 'left' }} /> */}\r\n                                            </MDBInput>\r\n                                            {showOptions ?\r\n                                                <div className=''>\r\n                                                    <Select\r\n                                                        styles={customStyles}\r\n                                                        value={role}\r\n                                                        onChange={this.handleSelectChange}\r\n                                                        options={roleOptions}\r\n                                                        placeholder='Role'\r\n                                                        isSearchable\r\n                                                        isClearable\r\n                                                    />\r\n                                                </div> : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <MDBBtn size='sm' color=\"teal\" outline type='submit'>Register</MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                            {\r\n                                this.state.notificationShow ?\r\n                                    <Notification\r\n                                        message={this.state.message}\r\n                                    /> : null\r\n                            }\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewUser"]},"metadata":{},"sourceType":"module"}