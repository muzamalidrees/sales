{"ast":null,"code":"import _defineProperty from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\permissions\\\\pages\\\\NewPermission.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\nimport Notification from '../../misc/sections/Notification';\nimport { Can } from '../../../configs/Ability-context';\n\nvar NewPermission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPermission, _Component);\n\n  function NewPermission() {\n    var _this;\n\n    _classCallCheck(this, NewPermission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPermission).call(this));\n    _this._isMounted = false;\n\n    _this.handleInput = function (e) {\n      var str = e.target.value;\n\n      _this.setState(_defineProperty({}, e.target.name, str.toLowerCase()));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.refs.newPermissionForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        var _this$state = _this.state,\n            permission = _this$state.permission,\n            entity = _this$state.entity,\n            slug = _this$state.slug;\n        var newPermission = {\n          permission: permission,\n          entity: entity,\n          slug: slug\n        };\n        var options = {\n          method: 'POST',\n          body: JSON.stringify(newPermission),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/addNewPermission', options).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          // console.log(json)\n          if (_this._isMounted === true) {\n            _this.setState({\n              notificationMessage: json.message,\n              notificationShow: true\n            });\n          }\n\n          if (json.success === true) {\n            _this.setState({\n              permission: '',\n              entity: '',\n              slug: ''\n            });\n          } else {\n            _this.name.focus();\n          }\n\n          if (_this._isMounted === true) {\n            setTimeout(function () {\n              return _this.setState({\n                notificationShow: false\n              });\n            }, 1502);\n          }\n        })[\"catch\"](function (error) {\n          return console.log(error);\n        });\n      }\n    };\n\n    _this._isMounted = true;\n    _this.state = {\n      permission: '',\n      entity: '',\n      slug: '',\n      notificationMessage: '',\n      notificationShow: false\n    };\n    return _this;\n  }\n\n  _createClass(NewPermission, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          permission = _this$state2.permission,\n          entity = _this$state2.entity,\n          slug = _this$state2.slug;\n      return React.createElement(Can, {\n        I: \"create\",\n        a: \"permission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"\",\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: '#008066'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"New Permission\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        ref: \"newPermissionForm\",\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: permission,\n        label: \"Permission\",\n        name: \"permission\",\n        icon: \"pen-nib\",\n        inputRef: function inputRef(el) {\n          _this2.permission = el;\n        },\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        hint: \"e.g. edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: entity,\n        label: \"Entity\",\n        name: \"entity\",\n        icon: \"boxes\",\n        inputRef: function inputRef(el) {\n          _this2.entity = el;\n        },\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        hint: \"e.g. user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: slug,\n        label: \"Slug\",\n        name: \"slug\",\n        icon: \"pen-nib\",\n        inputRef: function inputRef(el) {\n          _this2.slug = el;\n        },\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        hint: \"e.g. edit_user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"teal\",\n        outline: true,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Register\"))))), this.state.notificationShow ? React.createElement(Notification, {\n        message: this.state.notificationMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }) : null))));\n    }\n  }]);\n\n  return NewPermission;\n}(Component);\n\nexport default NewPermission;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\permissions\\pages\\NewPermission.jsx"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBCardBody","MDBCardHeader","MDBCard","Notification","Can","NewPermission","_isMounted","handleInput","e","str","target","value","setState","name","toLowerCase","handleSubmit","preventDefault","form","refs","newPermissionForm","checkValidity","classList","add","state","permission","entity","slug","newPermission","options","method","body","JSON","stringify","headers","fetch","then","res","json","notificationMessage","message","notificationShow","success","focus","setTimeout","error","console","log","marginTop","color","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\r\nimport Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\n\r\nclass NewPermission extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        this.state = {\r\n            permission: '',\r\n            entity: '',\r\n            slug: '',\r\n            notificationMessage: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        let str = e.target.value\r\n        this.setState({\r\n            [e.target.name]: str.toLowerCase()\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newPermissionForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else {\r\n            let { permission, entity, slug } = this.state\r\n            let newPermission = { permission: permission, entity: entity, slug: slug }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newPermission),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewPermission', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    if (this._isMounted === true) {\r\n                        this.setState({ notificationMessage: json.message, notificationShow: true })\r\n                    }\r\n                    if (json.success === true) {\r\n\r\n                        this.setState({\r\n                            permission: '',\r\n                            entity: '',\r\n                            slug: ''\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    if (this._isMounted === true) {\r\n                        setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var { permission, entity, slug } = this.state\r\n\r\n        return (\r\n            <Can I='create' a='permission'>\r\n                <MDBContainer className='' style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard className=' p-5'>\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: '#008066' }} className=\"text-center font-weight-bold\">\r\n                                    New Permission\r\n                            </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n\r\n                                    <form ref='newPermissionForm' onSubmit={this.handleSubmit} noValidate>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={permission}\r\n                                                label=\"Permission\"\r\n                                                name='permission'\r\n                                                icon=\"pen-nib\"\r\n                                                inputRef={el => { this.permission = el }}\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                                hint='e.g. edit'\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={entity}\r\n                                                label=\"Entity\"\r\n                                                name='entity'\r\n                                                icon=\"boxes\"\r\n                                                inputRef={el => { this.entity = el }}\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                                hint='e.g. user'\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={slug}\r\n                                                label=\"Slug\"\r\n                                                name='slug'\r\n                                                icon=\"pen-nib\"\r\n                                                inputRef={el => { this.slug = el }}\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                                hint='e.g. edit_user'\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <MDBBtn size='sm' color=\"teal\" outline type='submit'>Register</MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                            {\r\n                                this.state.notificationShow ?\r\n                                    <Notification\r\n                                        message={this.state.notificationMessage}\r\n                                    /> : null\r\n                            }\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewPermission"]},"metadata":{},"sourceType":"module"}