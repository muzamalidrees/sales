{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\NewOrder.jsx\";\nimport React from 'react';\nimport ProductsTable from './sections/ProductsTable';\nimport OrderDetails from './sections/OrderDetails';\nimport { MDBRow } from 'mdbreact';\n\nclass NewOrder extends React.Component {\n  constructor() {\n    super();\n\n    this.addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n    };\n\n    this.deleteProduct = (price, i, pChecked) => {\n      this.refs.orderDetails.minusTotalValue(price);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(price);\n      }\n\n      let table = document.getElementById('productsTable');\n      table.deleteRow(i);\n\n      if (table.rows.length === 1) {\n        this.refs.productsTable.setState({\n          submitOrderBtn: false\n        });\n      }\n    };\n\n    this.checkOrderDetailsValidity = () => {\n      var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\n\n      if (!orderDetailsValidity) {\n        return false;\n      } else if (this.customerForm.checkValidity() === false) {\n        this.customerForm.classList.add('was-validated');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      let orderId = this.state.orderId; // let orderId = this.orderId.value;\n\n      let orderDetails = {\n        order_id: orderId,\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked\n      };\n      var options = {\n        method: 'POST',\n        body: JSON.stringify(orderDetails),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/addNewOrderDetails', options).then(res => res.json()).then(json => {// console.log(json)\n      }).catch(error => console.log(error)); // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\n\n      this.refs.orderDetails.minusTotalValue(pPrice);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(pPrice);\n      }\n    };\n\n    this.saveOrderToDB = () => {\n      this.refs.orderDetails.saveOrderToDB();\n    };\n\n    this.refreshOrdersTable = () => {\n      window.location.reload();\n    };\n\n    this.minusFromTotal = pPrice => {\n      this.refs.orderDetails.minusTotalValue(pPrice);\n    };\n\n    this.addToTotal = pPrice => {\n      this.refs.orderDetails.addTotalValue(pPrice);\n    };\n\n    this.minusFromTotalValueAdded = pPrice => {\n      this.refs.orderDetails.minusTotalValueAdded(pPrice);\n    };\n\n    this.addToTotalValueAdded = pPrice => {\n      this.refs.orderDetails.addTotalValueAdded(pPrice);\n    };\n\n    this.state = {\n      orderId: 1\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.saveOrderDetailsToDB = this.saveOrderDetailsToDB.bind(this);\n    this.saveOrderToDB = this.saveOrderToDB.bind(this);\n    this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\n  }\n\n  componentDidMount() {\n    // fetchOrderId = () => {\n    let currentComponent = this;\n    fetch('/getLastOrderID').then(res => res.json()).then(function (json) {\n      console.log(json);\n\n      if (json.data.length !== 0) {\n        var lastOrderID = json.data.shift();\n        let id = lastOrderID.id;\n        currentComponent.orderId = id + 1; // currentComponent.setState({ orderId: id + 1 })\n      } else {\n        // currentComponent.setState({ orderId: 1 })\n        currentComponent.orderId = 1;\n      }\n    }).catch(error => console.log(error)); // }\n  }\n\n  render() {\n    return React.createElement(MDBRow, {\n      style: {\n        marginTop: '78px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(OrderDetails, {\n      ref: \"orderDetails\" // orderId={el => (this.orderId = el)}\n      ,\n      orderId: this.orderId,\n      orderForm: el => this.orderForm = el,\n      customerForm: el => this.customerForm = el,\n      addProductToTbl: this.addProductToTbl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      className: \"mt-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ProductsTable, {\n      ref: \"productsTable\",\n      refreshOrdersTable: this.refreshOrdersTable,\n      deleteProduct: this.deleteProduct,\n      saveOrderDetailsToDB: this.saveOrderDetailsToDB,\n      saveOrderToDB: this.saveOrderToDB,\n      checkOrderDetailsValidity: this.checkOrderDetailsValidity,\n      productsTable: el => this.productsTable = el,\n      minusFromTotal: this.minusFromTotal,\n      addToTotal: this.addToTotal,\n      minusFromTotalValueAdded: this.minusFromTotalValueAdded,\n      addToTotalValueAdded: this.addToTotalValueAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewOrder;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\NewOrder.jsx"],"names":["React","ProductsTable","OrderDetails","MDBRow","NewOrder","Component","constructor","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","refs","productsTable","deleteProduct","price","i","orderDetails","minusTotalValue","minusTotalValueAdded","table","document","getElementById","deleteRow","rows","length","setState","submitOrderBtn","checkOrderDetailsValidity","orderDetailsValidity","customerForm","checkValidity","classList","add","saveOrderDetailsToDB","orderId","state","order_id","options","method","body","JSON","stringify","headers","fetch","then","res","json","catch","error","console","log","saveOrderToDB","refreshOrdersTable","window","location","reload","minusFromTotal","addToTotal","addTotalValue","minusFromTotalValueAdded","addToTotalValueAdded","addTotalValueAdded","bind","componentDidMount","currentComponent","data","lastOrderID","shift","id","render","marginTop","el","orderForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProductsTable from './sections/ProductsTable';\nimport OrderDetails from './sections/OrderDetails';\nimport { MDBRow } from 'mdbreact';\n\n\nclass NewOrder extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      orderId:1\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.saveOrderDetailsToDB = this.saveOrderDetailsToDB.bind(this);\n    this.saveOrderToDB = this.saveOrderToDB.bind(this);\n    this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\n  }\n  componentDidMount() {\n    // fetchOrderId = () => {\n    let currentComponent = this;\n    fetch('/getLastOrderID')\n      .then((res) => res.json())\n      .then(function (json) {\n        console.log(json)\n        if (json.data.length !== 0) {\n          var lastOrderID = json.data.shift();\n          let id = lastOrderID.id;\n          currentComponent.orderId = id + 1;\n          // currentComponent.setState({ orderId: id + 1 })\n        }\n        else {\n          // currentComponent.setState({ orderId: 1 })\n          currentComponent.orderId = 1\n        }\n      })\n      .catch((error) => console.log(error));\n    // }\n  }\n\n  addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n    this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n  }\n\n  deleteProduct = (price, i, pChecked) => {\n\n    this.refs.orderDetails.minusTotalValue(price);\n    if (pChecked === 'Yes') {\n      this.refs.orderDetails.minusTotalValueAdded(price);\n    }\n    let table = document.getElementById('productsTable');\n    table.deleteRow(i);\n    if (table.rows.length === 1) {\n      this.refs.productsTable.setState({ submitOrderBtn: false })\n    }\n  }\n\n  checkOrderDetailsValidity = () => {\n    var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\n    if (!orderDetailsValidity) {\n      return false;\n    }\n    else if (this.customerForm.checkValidity() === false) {\n      this.customerForm.classList.add('was-validated');\n      return false;\n    }\n    else {\n      return true;\n    }\n\n  }\n\n  saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n\n    let orderId = this.state.orderId;\n    // let orderId = this.orderId.value;\n    let orderDetails = { order_id: orderId, pName: pName, pSKU: pSKU, pRate: pRate, pQTY: pQTY, pPrice: pPrice, pRemarks: pRemarks, pChecked: pChecked }\n    var options = {\n      method: 'POST',\n      body: JSON.stringify(orderDetails),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('/addNewOrderDetails', options)\n      .then((res) => res.json())\n      .then((json) => {\n        // console.log(json)\n      })\n      .catch((error) => console.log(error))\n    // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\n    this.refs.orderDetails.minusTotalValue(pPrice);\n    if (pChecked === 'Yes') {\n      this.refs.orderDetails.minusTotalValueAdded(pPrice);\n    }\n  }\n\n  saveOrderToDB = () => {\n    this.refs.orderDetails.saveOrderToDB();\n  }\n\n  refreshOrdersTable = () => {\n    window.location.reload();\n  }\n\n  minusFromTotal = (pPrice) => {\n    this.refs.orderDetails.minusTotalValue(pPrice)\n  }\n  addToTotal = (pPrice) => {\n    this.refs.orderDetails.addTotalValue(pPrice)\n  }\n  minusFromTotalValueAdded = (pPrice) => {\n    this.refs.orderDetails.minusTotalValueAdded(pPrice);\n  }\n  addToTotalValueAdded = (pPrice) => {\n    this.refs.orderDetails.addTotalValueAdded(pPrice);\n  }\n\n  render() {\n\n    return (\n      <MDBRow style={{ marginTop: '78px' }}>\n        <OrderDetails\n          ref='orderDetails'\n          // orderId={el => (this.orderId = el)}\n          orderId={this.orderId}\n          orderForm={el => (this.orderForm = el)}\n          customerForm={el => (this.customerForm = el)}\n          addProductToTbl={this.addProductToTbl}\n        />\n        <MDBRow center className='mt-3 mx-auto'>\n\n          <ProductsTable\n            ref='productsTable'\n            refreshOrdersTable={this.refreshOrdersTable}\n            deleteProduct={this.deleteProduct}\n            saveOrderDetailsToDB={this.saveOrderDetailsToDB}\n            saveOrderToDB={this.saveOrderToDB}\n            checkOrderDetailsValidity={this.checkOrderDetailsValidity}\n            productsTable={el => (this.productsTable = el)}\n            minusFromTotal={this.minusFromTotal}\n            addToTotal={this.addToTotal}\n            minusFromTotalValueAdded={this.minusFromTotalValueAdded}\n            addToTotalValueAdded={this.addToTotalValueAdded}\n          />\n        </MDBRow>\n      </MDBRow>\n    );\n  }\n}\n\nexport default NewOrder;"]},"metadata":{},"sourceType":"module"}