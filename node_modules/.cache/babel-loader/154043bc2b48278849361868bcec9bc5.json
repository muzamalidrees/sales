{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\home\\\\pages\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBNavLink } from 'mdbreact'; // import { Link } from 'react-router-dom'\n\nimport ViewOrderModal from './sections/ViewOrderModal';\nimport EditOrderModal from './sections/EditOrderModal';\nimport DeleteModal from '../../misc/sections/DeleteModal';\nimport { Can } from '../../../configs/Ability-context';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleView = function (id, order_id) {\n      return function (e) {\n        // let el = e.target\n        // let row = el.closest('tr')\n        _this.refs.viewOrderModal.setState({\n          modalShow: true\n        });\n\n        _this.refs.viewOrderModal.fetchData(id, order_id);\n      };\n    };\n\n    _this.handleEdit = function (id, order_id) {\n      return function (e) {\n        // let el = e.target\n        // let row = el.closest('tr')\n        _this.refs.editOrderModal.setState({\n          modalShow: true\n        });\n\n        _this.refs.editOrderModal.fetchData(id, order_id);\n      };\n    };\n\n    _this.handleDelete = function (id, order_id) {\n      return function (e) {\n        var el = e.target;\n        var row = el.closest('tr');\n        var i = row.rowIndex;\n\n        _this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id,\n          dOrder_id: order_id\n        });\n\n        _this.refs.deleteModal.setState({\n          modalShow: true\n        });\n      };\n    };\n\n    _this.deleteOrder = function () {\n      var rowToBeDeleted = _this.state.rowToBeDeleted;\n      var dRowValue = _this.state.dRowValue;\n      document.getElementById('ordersTable').deleteRow(rowToBeDeleted);\n      var order = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      console.log(); // fetch('/deleteOrder', options)\n      //     .then((res) => res.json())\n      //     .then((json) => {\n      //         console.log(json)\n      //     })\n      //     .catch((error) => console.log(error))\n      // fetch('/deleteOrderDetail/' + this.state.dOrder_id)\n      //     .then((res) => res.json())\n      //     .then((json) => {\n      //         console.log(json)\n      //     })\n      //     .catch((error) => console.log(error))\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllOrders').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          orders: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      orders: [],\n      rowToBeDeleted: '',\n      dRowValue: '',\n      dOrder_id: ''\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orders = this.state.orders;\n      var rows = [];\n      var index = 0;\n      orders.forEach(function (order) {\n        index = index + 1;\n        var orderDate;\n\n        if (order.date === null) {\n          orderDate = '';\n        } else {\n          orderDate = new Date(order.date).toLocaleDateString();\n        }\n\n        rows.push({\n          index: index,\n          order_id: order.order_id,\n          date: orderDate,\n          cName: order.customer_name,\n          cContact: order.customer_contact,\n          cAddress: order.customer_address,\n          total: order.total,\n          tracking: order.tracking_id,\n          note: order.note,\n          status: order.status,\n          buttons: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(MDBBtn, {\n            style: {\n              fontSize: '15px'\n            },\n            onClick: _this2.handleView(order.id, order.order_id),\n            className: \"m-1 py-1 px-2\",\n            outline: true,\n            color: \"info\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"eye\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          })), React.createElement(Can, {\n            I: \"update\",\n            a: \"order\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(MDBBtn, {\n            style: {\n              fontSize: '15px'\n            },\n            onClick: _this2.handleEdit(order.id, order.order_id),\n            className: \"m-1 py-1 px-2\",\n            outline: true,\n            color: \"teal\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"pencil-alt\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }))), React.createElement(Can, {\n            I: \"delete\",\n            a: \"order\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(MDBBtn, {\n            style: {\n              fontSize: '15px'\n            },\n            onClick: _this2.handleDelete(order.id, order.order_id),\n            className: \"m-1 py-1 px-2\",\n            outline: true,\n            color: \"red darken-3\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"trash\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }))))\n        });\n      });\n      var data = {\n        columns: [{\n          label: '#',\n          field: 'index'\n        }, {\n          label: 'Order_Id',\n          field: 'order_id'\n        }, {\n          label: 'Date',\n          field: 'date'\n        }, {\n          label: 'Customer Name',\n          field: 'cName'\n        }, {\n          label: 'Customer Contact',\n          field: 'cContact'\n        }, {\n          label: 'Customer Address',\n          field: 'cAddress'\n        }, {\n          label: 'Total',\n          field: 'total'\n        }, {\n          label: 'Tracking Id',\n          field: 'tracking'\n        }, {\n          label: 'Note',\n          field: 'note'\n        }, {\n          label: 'Status',\n          field: 'status'\n        }, {\n          label: 'Action',\n          field: 'buttons'\n        }],\n        rows: rows\n      };\n      return React.createElement(MDBCard, {\n        className: \" p-0\",\n        style: {\n          marginTop: '70px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Orders\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        className: \"m-0 p-0 font-weight-bold\",\n        color: \"info \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/orders/new\",\n        className: \"m-0\",\n        style: {\n          fontSize: '16px',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Add New Order\")), React.createElement(MDBDataTable, {\n        id: \"ordersTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 15,\n        entriesOptions: [10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(ViewOrderModal, {\n        ref: \"viewOrderModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(EditOrderModal, {\n        ref: \"editOrderModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(DeleteModal, {\n        ref: \"deleteModal\",\n        deleteEntry: this.deleteOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\home\\pages\\Home.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","MDBNavLink","ViewOrderModal","EditOrderModal","DeleteModal","Can","Home","_isMounted","componentWillUnmount","handleView","id","order_id","e","refs","viewOrderModal","setState","modalShow","fetchData","handleEdit","editOrderModal","handleDelete","el","target","row","closest","i","rowIndex","rowToBeDeleted","dRowValue","dOrder_id","deleteModal","deleteOrder","state","document","getElementById","deleteRow","order","value","options","method","body","JSON","stringify","headers","console","log","fetch","then","res","json","orders","data","error","rows","index","forEach","orderDate","date","Date","toLocaleDateString","push","cName","customer_name","cContact","customer_contact","cAddress","customer_address","total","tracking","tracking_id","note","status","buttons","fontSize","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBNavLink } from 'mdbreact';\r\n// import { Link } from 'react-router-dom'\r\nimport ViewOrderModal from './sections/ViewOrderModal';\r\nimport EditOrderModal from './sections/EditOrderModal';\r\nimport DeleteModal from '../../misc/sections/DeleteModal';\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass Home extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllOrders',\r\n        )\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ orders: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orders: [],\r\n            rowToBeDeleted: '',\r\n            dRowValue: '',\r\n            dOrder_id: '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleView = (id, order_id) => e => {\r\n        // let el = e.target\r\n        // let row = el.closest('tr')\r\n        this.refs.viewOrderModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.viewOrderModal.fetchData(id, order_id);\r\n    }\r\n\r\n    handleEdit = (id, order_id) => e => {\r\n        // let el = e.target\r\n        // let row = el.closest('tr')\r\n        this.refs.editOrderModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.editOrderModal.fetchData(id, order_id);\r\n    }\r\n\r\n    handleDelete = (id, order_id) => e => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: id,\r\n            dOrder_id: order_id,\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteOrder = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('ordersTable').deleteRow(rowToBeDeleted)\r\n        let order = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(order),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        console.log();\r\n        \r\n        // fetch('/deleteOrder', options)\r\n        //     .then((res) => res.json())\r\n        //     .then((json) => {\r\n        //         console.log(json)\r\n        //     })\r\n        //     .catch((error) => console.log(error))\r\n\r\n        // fetch('/deleteOrderDetail/' + this.state.dOrder_id)\r\n        //     .then((res) => res.json())\r\n        //     .then((json) => {\r\n        //         console.log(json)\r\n        //     })\r\n        //     .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var { orders } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n        orders.forEach((order) => {\r\n\r\n            index = index + 1;\r\n            let orderDate;\r\n            if (order.date === null) {\r\n                orderDate = '';\r\n            }\r\n            else {\r\n                orderDate = new Date(order.date).toLocaleDateString();\r\n            }\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    order_id: order.order_id,\r\n                    date: orderDate,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_address,\r\n                    total: order.total,\r\n                    tracking: order.tracking_id,\r\n                    note: order.note,\r\n                    status: order.status,\r\n                    buttons: <React.Fragment>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleView(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='info' size=\"sm\"><MDBIcon icon=\"eye\" /></MDBBtn>\r\n                        <Can I='update' a='order'>\r\n                            <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='order'>\r\n                            <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete(order.id, order.order_id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Order_Id', field: 'order_id', }, { label: 'Date', field: 'date', },\r\n                { label: 'Customer Name', field: 'cName' }, { label: 'Customer Contact', field: 'cContact', },\r\n                { label: 'Customer Address', field: 'cAddress', }, { label: 'Total', field: 'total', },\r\n                { label: 'Tracking Id', field: 'tracking', }, { label: 'Note', field: 'note', },\r\n                { label: 'Status', field: 'status', }, { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\r\n                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                    Orders\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n                    <MDBBtn size='sm' className='m-0 p-0 font-weight-bold' color='info ' >\r\n                        <MDBNavLink to='/orders/new' className='m-0' style={{ fontSize: '16px', color: 'white' }}>\r\n                            Add New Order\r\n                        </MDBNavLink>\r\n                    </MDBBtn>\r\n                    <MDBDataTable id='ordersTable' striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={15} entriesOptions={[10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                    <ViewOrderModal\r\n                        ref='viewOrderModal'\r\n                    />\r\n                    <EditOrderModal\r\n                        ref='editOrderModal'\r\n                    />\r\n                    <DeleteModal\r\n                        ref='deleteModal'\r\n                        deleteEntry={this.deleteOrder}\r\n                    />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}