{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\ProductsTable.jsx\";\nimport React, { Component } from 'react';\nimport PTableRow from './PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn } from 'mdbreact';\n\nclass ProductsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      var row = [];\n      row.push(React.createElement(PTableRow, {\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked,\n        key: Math.random(),\n        deleteProduct: this.props.deleteProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n      this.setState(state => {\n        var Rows = [...state.Rows, row];\n        return {\n          Rows\n        };\n      });\n      this.setState({\n        submitOrderBtn: true\n      });\n    };\n\n    this.submitOrder = () => {\n      let allFormsValid = this.props.checkOrderDetailsValidity();\n\n      if (allFormsValid) {\n        this.setState({\n          submitOrderBtn: false\n        });\n        let pTable = document.getElementById('productsTable');\n\n        for (let index = 1; index < pTable.rows.length; index++) {\n          const pName = pTable.rows[index].cells[1].innerHTML;\n          const pSKU = pTable.rows[index].cells[2].innerHTML;\n          const pRate = pTable.rows[index].cells[3].innerHTML;\n          const pQTY = pTable.rows[index].cells[4].innerHTML;\n          const pPrice = z.rows[index].cells[5].innerHTML;\n          const pRemarks = z.rows[index].cells[6].innerHTML;\n          const pChecked = z.rows[index].cells[7].innerHTML;\n          this.props.saveOPDetails(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n        }\n\n        for (let index = z.rows.length - 1; index > 0; index--) {\n          z.deleteRow(index);\n        }\n      } else {\n        console.log('something wrong');\n      }\n    };\n\n    this.state = {\n      Rows: [],\n      submitOrderBtn: false\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n  }\n\n  render() {\n    return React.createElement(MDBCard, {\n      className: \"col-md-5 mt-4 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h3\",\n      className: \"text-center font-weight-bold py-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Products to be added\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(MDBTable, {\n      id: \"productsTable\",\n      striped: true,\n      responsive: true,\n      bordered: true,\n      autoWidth: true,\n      scrollY: true,\n      maxHeight: \"360px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.submitOrderBtn ? React.createElement(MDBBtn, {\n      onClick: this.submitOrder,\n      type: \"button\",\n      size: \"sm\",\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Submit\") : null), React.createElement(MDBTableHead, {\n      color: \"teal\",\n      textWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Sr.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"SKU\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Rate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"QTY\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Remarks\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Extra Added?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.Rows))));\n  }\n\n}\n\nexport default ProductsTable;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\ProductsTable.jsx"],"names":["React","Component","PTableRow","MDBTable","MDBTableHead","MDBTableBody","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","ProductsTable","constructor","props","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","row","push","Math","random","deleteProduct","setState","state","Rows","submitOrderBtn","submitOrder","allFormsValid","checkOrderDetailsValidity","pTable","document","getElementById","index","rows","length","cells","innerHTML","z","saveOPDetails","deleteRow","console","log","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PTableRow from './PTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn } from 'mdbreact';\n\n\nclass ProductsTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Rows: [],\n            submitOrderBtn: false,\n        }\n        this.addProductToTbl = this.addProductToTbl.bind(this);\n    }\n\n    addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n        var row = [];\n        row.push(\n            <PTableRow\n                pName={pName}\n                pSKU={pSKU}\n                pRate={pRate}\n                pQTY={pQTY}\n                pPrice={pPrice}\n                pRemarks={pRemarks}\n                pChecked={pChecked}\n                key={Math.random()}\n                deleteProduct={this.props.deleteProduct}\n            />\n        );\n        this.setState(state => {\n            var Rows = [...state.Rows, row]\n            return {\n                Rows\n            };\n        });\n        this.setState({ submitOrderBtn: true });\n    }\n    submitOrder = () => {\n        let allFormsValid = this.props.checkOrderDetailsValidity();\n        if (allFormsValid) {\n            this.setState({ submitOrderBtn: false })\n            let pTable = document.getElementById('productsTable');\n            for (let index = 1; index < pTable.rows.length; index++) {\n                const pName = pTable.rows[index].cells[1].innerHTML;\n                const pSKU = pTable.rows[index].cells[2].innerHTML;\n                const pRate = pTable.rows[index].cells[3].innerHTML;\n                const pQTY = pTable.rows[index].cells[4].innerHTML;\n                const pPrice = z.rows[index].cells[5].innerHTML;\n                const pRemarks = z.rows[index].cells[6].innerHTML;\n                const pChecked = z.rows[index].cells[7].innerHTML;\n                this.props.saveOPDetails(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n            }\n            for (let index = z.rows.length - 1; index > 0; index--) {\n                z.deleteRow(index);\n            }\n        }\n        else {\n            console.log('something wrong')\n        }\n    }\n\n    render() {\n\n\n        return (\n            <MDBCard className='col-md-5 mt-4 p-0'>\n                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold py-1\">\n                    Products to be added\n                </MDBCardHeader>\n                <MDBCardBody className='p-2'>\n                    <MDBTable id='productsTable' striped responsive bordered autoWidth scrollY maxHeight='360px'>\n                        <caption>\n                            {this.state.submitOrderBtn ?\n                                <MDBBtn onClick={this.submitOrder} type='button' size='sm' className='p-2' >Submit</MDBBtn> :\n                                null}\n                        </caption>\n                        <MDBTableHead color='teal' textWhite >\n                            <tr>\n                                <th>Sr.</th>\n                                <th>Product</th>\n                                <th>SKU</th>\n                                <th>Rate</th>\n                                <th>QTY</th>\n                                <th>Price</th>\n                                <th>Remarks</th>\n                                <th>Extra Added?</th>\n                                <th></th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {this.state.Rows}\n                        </MDBTableBody>\n                    </MDBTable>\n                </MDBCardBody>\n            </MDBCard>\n        );\n    }\n\n}\n\nexport default ProductsTable"]},"metadata":{},"sourceType":"module"}