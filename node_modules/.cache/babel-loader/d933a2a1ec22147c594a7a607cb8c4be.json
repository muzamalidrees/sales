{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\OTableRow.jsx\";\nimport React, { Component } from 'react'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faUserEdit } from '@fortawesome/free-solid-svg-icons';\n// import PopUp from './PopUp';\n\nclass OTableRow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalShow: false,\n      editId: '',\n      editName: '',\n      editEmail: '',\n      editCell: '',\n      editAddress: '',\n      editArea: '',\n      editRoute: ''\n    }; // this.deleteRow = this.deleteRow.bind(this);\n  } // editRow = (e) => {\n  //     var iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\n  //     var svgClick = e.target.parentNode.parentNode.parentNode;\n  //     var buttonClick = e.target.parentNode.parentNode;\n  //     var tdClick = e.target.parentNode;\n  //     var target = e.target\n  //     if (iconClick.rowIndex === undefined) {\n  //         iconClick = svgClick;\n  //     }\n  //     if (iconClick.rowIndex === undefined) {\n  //         iconClick = buttonClick;\n  //     }\n  //     if (iconClick.rowIndex === undefined) {\n  //         iconClick = tdClick;\n  //     }\n  //     if (iconClick.rowIndex === undefined) {\n  //         iconClick = target;\n  //     }\n  // console.log(iconClick.rowIndex);\n  // console.log(this.rowIndex);\n  //     let id = iconClick.cells[8].innerHTML\n  //     let name = iconClick.cells[1].innerHTML\n  //     let email = iconClick.cells[2].innerHTML\n  //     let cell = iconClick.cells[3].innerHTML\n  //     let address = iconClick.cells[4].innerHTML\n  //     let area = iconClick.cells[5].innerHTML\n  //     let route = iconClick.cells[6].innerHTML\n  //     this.setState({\n  //         editId: id,\n  //         editName: name,\n  //         editEmail: email,\n  //         editCell: cell,\n  //         editAddress: address,\n  //         editArea: area,\n  //         editRoute: route,\n  //         modalShow: true\n  //     })\n  // }\n  // updatedb = (name, email, cell, address, area, route) => {\n  //     let customer = { id: this.state.editId, name: name, email: email, cell: cell, address: address, area: area, route: route }\n  //     var options = {\n  //         method: 'PUT',\n  //         body: JSON.stringify(customer),\n  //         headers: { 'Content-Type': 'application/json' }\n  //     }\n  //     fetch('/updateCustomer', options)\n  //         .then((res) => res.json())\n  //         .then((json) => {\n  //             console.log(json)\n  //             // this.props.dispatch(removeCustomer(json.data));\n  //             this.setState({\n  //                 editId: '',\n  //                 editName: '',\n  //                 editEmail: '',\n  //                 editCell: '',\n  //                 editAddress: '',\n  //                 editArea: '',\n  //                 editRoute: '',\n  //                 modalShow: false\n  //                 // this.setState({ modalShow: false });\n  //             })\n  //         })\n  //         .catch((error) => console.log(error))\n  // }\n  // deleteRow(e) {\n  //     var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n  //     var svgClik = e.target.parentNode.parentNode.parentNode;\n  //     var buttonClik = e.target.parentNode.parentNode;\n  //     var tdClik = e.target.parentNode;\n  //     var targt = e.target\n  //     if (iconClik.rowIndex === undefined) {\n  //         iconClik = svgClik;\n  //     }\n  //     if (iconClik.rowIndex === undefined) {\n  //         iconClik = buttonClik;\n  //     }\n  //     if (iconClik.rowIndex === undefined) {\n  //         iconClik = tdClik;\n  //     }\n  //     if (iconClik.rowIndex === undefined) {\n  //         iconClik = targt;\n  //     }\n  //     var i = iconClik.rowIndex;\n  //     document.getElementById('Ctbl').deleteRow(i)\n  //     let dRowValue = iconClik.cells[8].innerHTML\n  //     let customer = { value: dRowValue }\n  //     var options = {\n  //         method: 'DELETE',\n  //         body: JSON.stringify(customer),\n  //         headers: { 'Content-Type': 'application/json' }\n  //     }\n  //     fetch('/deleteCustomer', options)\n  //         .then((res) => res.json())\n  //         .then((json) => {\n  //             console.log(json)\n  //             this.props.dispatch(removeCustomer(json.data));\n  //         })\n  //         .catch((error) => console.log(error))\n  // }\n\n\n  render() {\n    const index = this.props.index;\n    const searchResult = this.props.searchResult;\n    const id = searchResult.id;\n    const name = searchResult.name;\n    const email = searchResult.email;\n    const cell = searchResult.cell;\n    const address = searchResult.address;\n    const area = searchResult.area_id;\n    const route = searchResult.route_id;\n    return React.createElement(\"tr\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, index), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, cell), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, area), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, route), React.createElement(\"td\", {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, id));\n  }\n\n}\n\nexport default OTableRow;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\OTableRow.jsx"],"names":["React","Component","OTableRow","constructor","args","state","modalShow","editId","editName","editEmail","editCell","editAddress","editArea","editRoute","render","index","props","searchResult","id","name","email","cell","address","area","area_id","route","route_id","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACjB,UAAM,GAAGA,IAAT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,WAAW,EAAE,EANJ;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,SAAS,EAAE;AARF,KAAb,CAHiB,CAcjB;AAEH,GAjB6B,CAkB9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,UAAME,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAAhC;AACA,UAAMC,EAAE,GAAGD,YAAY,CAACC,EAAxB;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACE,IAA1B;AACA,UAAMC,KAAK,GAAGH,YAAY,CAACG,KAA3B;AACA,UAAMC,IAAI,GAAGJ,YAAY,CAACI,IAA1B;AACA,UAAMC,OAAO,GAAGL,YAAY,CAACK,OAA7B;AACA,UAAMC,IAAI,GAAGN,YAAY,CAACO,OAA1B;AACA,UAAMC,KAAK,GAAGR,YAAY,CAACS,QAA3B;AAEA,WACI;AAAI,MAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,IAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,KAAL,CAPJ,EA8BI;AAAI,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCT,EAAjC,CA9BJ,CADJ;AAmCH;;AA5K6B;;AAgLlC,eAAehB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTrash, faUserEdit } from '@fortawesome/free-solid-svg-icons';\r\n// import PopUp from './PopUp';\r\n\r\n\r\nclass OTableRow extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.state = {\r\n            modalShow: false,\r\n            editId: '',\r\n            editName: '',\r\n            editEmail: '',\r\n            editCell: '',\r\n            editAddress: '',\r\n            editArea: '',\r\n            editRoute: '',\r\n\r\n        };\r\n        // this.deleteRow = this.deleteRow.bind(this);\r\n\r\n    }\r\n    // editRow = (e) => {\r\n    //     var iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\r\n    //     var svgClick = e.target.parentNode.parentNode.parentNode;\r\n    //     var buttonClick = e.target.parentNode.parentNode;\r\n    //     var tdClick = e.target.parentNode;\r\n    //     var target = e.target\r\n\r\n    //     if (iconClick.rowIndex === undefined) {\r\n    //         iconClick = svgClick;\r\n    //     }\r\n    //     if (iconClick.rowIndex === undefined) {\r\n    //         iconClick = buttonClick;\r\n    //     }\r\n    //     if (iconClick.rowIndex === undefined) {\r\n    //         iconClick = tdClick;\r\n    //     }\r\n    //     if (iconClick.rowIndex === undefined) {\r\n    //         iconClick = target;\r\n    //     }\r\n        // console.log(iconClick.rowIndex);\r\n        // console.log(this.rowIndex);\r\n\r\n    //     let id = iconClick.cells[8].innerHTML\r\n    //     let name = iconClick.cells[1].innerHTML\r\n    //     let email = iconClick.cells[2].innerHTML\r\n    //     let cell = iconClick.cells[3].innerHTML\r\n    //     let address = iconClick.cells[4].innerHTML\r\n    //     let area = iconClick.cells[5].innerHTML\r\n    //     let route = iconClick.cells[6].innerHTML\r\n    //     this.setState({\r\n    //         editId: id,\r\n    //         editName: name,\r\n    //         editEmail: email,\r\n    //         editCell: cell,\r\n    //         editAddress: address,\r\n    //         editArea: area,\r\n    //         editRoute: route,\r\n    //         modalShow: true\r\n    //     })\r\n\r\n    // }\r\n    // updatedb = (name, email, cell, address, area, route) => {\r\n    //     let customer = { id: this.state.editId, name: name, email: email, cell: cell, address: address, area: area, route: route }\r\n\r\n    //     var options = {\r\n    //         method: 'PUT',\r\n    //         body: JSON.stringify(customer),\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }\r\n    //     fetch('/updateCustomer', options)\r\n    //         .then((res) => res.json())\r\n    //         .then((json) => {\r\n    //             console.log(json)\r\n    //             // this.props.dispatch(removeCustomer(json.data));\r\n    //             this.setState({\r\n    //                 editId: '',\r\n    //                 editName: '',\r\n    //                 editEmail: '',\r\n    //                 editCell: '',\r\n    //                 editAddress: '',\r\n    //                 editArea: '',\r\n    //                 editRoute: '',\r\n    //                 modalShow: false\r\n    //                 // this.setState({ modalShow: false });\r\n    //             })\r\n    //         })\r\n    //         .catch((error) => console.log(error))\r\n    // }\r\n    // deleteRow(e) {\r\n    //     var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\r\n    //     var svgClik = e.target.parentNode.parentNode.parentNode;\r\n    //     var buttonClik = e.target.parentNode.parentNode;\r\n    //     var tdClik = e.target.parentNode;\r\n    //     var targt = e.target\r\n\r\n    //     if (iconClik.rowIndex === undefined) {\r\n    //         iconClik = svgClik;\r\n    //     }\r\n    //     if (iconClik.rowIndex === undefined) {\r\n    //         iconClik = buttonClik;\r\n    //     }\r\n    //     if (iconClik.rowIndex === undefined) {\r\n    //         iconClik = tdClik;\r\n    //     }\r\n    //     if (iconClik.rowIndex === undefined) {\r\n    //         iconClik = targt;\r\n    //     }\r\n    //     var i = iconClik.rowIndex;\r\n    //     document.getElementById('Ctbl').deleteRow(i)\r\n\r\n    //     let dRowValue = iconClik.cells[8].innerHTML\r\n    //     let customer = { value: dRowValue }\r\n\r\n    //     var options = {\r\n    //         method: 'DELETE',\r\n    //         body: JSON.stringify(customer),\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }\r\n    //     fetch('/deleteCustomer', options)\r\n    //         .then((res) => res.json())\r\n    //         .then((json) => {\r\n    //             console.log(json)\r\n    //             this.props.dispatch(removeCustomer(json.data));\r\n\r\n    //         })\r\n    //         .catch((error) => console.log(error))\r\n    // }\r\n\r\n    render() {\r\n        const index = this.props.index;\r\n        const searchResult = this.props.searchResult;\r\n        const id = searchResult.id;\r\n        const name = searchResult.name;\r\n        const email = searchResult.email;\r\n        const cell = searchResult.cell;\r\n        const address = searchResult.address;\r\n        const area = searchResult.area_id;\r\n        const route = searchResult.route_id;\r\n\r\n        return (\r\n            <tr className=''>\r\n                <td>{index}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>{cell}</td>\r\n                <td>{address}</td>\r\n                <td>{area}</td>\r\n                <td>{route}</td>\r\n                {/* <td>\r\n                    <button style={{ marginRight: '10px' }} onClick={this.editRow} type='button' className=\" btn mb-1 btn-light \">\r\n                        <FontAwesomeIcon icon={faUserEdit} />\r\n                        edit\r\n                    </button>\r\n                    <PopUp\r\n\r\n                        editname={this.state.editName}\r\n                        editemail={this.state.editEmail}\r\n                        editcell={this.state.editCell}\r\n                        editaddress={this.state.editAddress}\r\n                        editarea={this.state.editArea}\r\n                        editroute={this.state.editRoute}\r\n                        show={this.state.modalShow}\r\n                        updatedb={this.updatedb}\r\n                        onHide={() => { this.setState({ modalShow: false }) }}\r\n                    />\r\n                    <button onClick={this.deleteRow} type='button' className=\" btn btn-light mb-1\">\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                        delete\r\n                    </button>\r\n                </td> */}\r\n                <td style={{ display: 'none' }}>{id}</td>\r\n\r\n            </tr >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OTableRow"]},"metadata":{},"sourceType":"module"}