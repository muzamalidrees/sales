{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\reports\\\\pages\\\\sections\\\\AllReportsDetailWise.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\nimport { Can } from \"../../../../configs/Ability-context\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nvar AllReports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllReports, _Component);\n\n  function AllReports() {\n    var _this;\n\n    _classCallCheck(this, AllReports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllReports).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleDateChange = function (value) {\n      _this.setState({\n        fromDate: value\n      });\n\n      var comingDate = value;\n      var _1day = 86400000; //miliseconds\n\n      var date = new Date(comingDate - _1day);\n\n      var selectedOrderDetails = _this.state.orderDetails.filter(function (orderDetail) {\n        return new Date(orderDetail.order_date) > date;\n      });\n\n      _this.setState({\n        selectedOrderDetails: selectedOrderDetails\n      });\n    };\n\n    _this.totalSales = function () {\n      var Total = 0;\n\n      _this.state.selectedOrderDetails.forEach(function (orderDetail) {\n        Total = Total + Number(orderDetail.product_price);\n      });\n\n      return Total;\n    };\n\n    _this.totalValueAdded = function () {\n      var Total = 0;\n\n      var details = _this.state.selectedOrderDetails.filter(function (orderDetail) {\n        return orderDetail.product_extra_added === 'Yes';\n      });\n\n      details.forEach(function (detail) {\n        Total = Total + Number(detail.product_price);\n      });\n      return Total;\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllOrders').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      var orders = json.data;\n      var completedOrders = orders.filter(function (order) {\n        return order.status === 'completed';\n      });\n      completedOrders.forEach(function (order) {\n        fetch('getSpecificAllOrderDetails' + order.id).then(function (res) {\n          return res.json();\n        }).then(function (json) {});\n      });\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch('/getAllOrderDetails').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      var orderDetails = json.data;\n\n      if (_this._isMounted) {\n        _this.setState({\n          orderDetails: orderDetails,\n          selectedOrderDetails: orderDetails\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      orderDetails: [],\n      selectedOrderDetails: [],\n      fromDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(AllReports, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedOrderDetails = _this$state.selectedOrderDetails,\n          fromDate = _this$state.fromDate;\n      var rows = [];\n      var index = 0;\n\n      if (selectedOrderDetails !== '' || selectedOrderDetails !== null || selectedOrderDetails !== undefined) {\n        selectedOrderDetails.forEach(function (orderDetail) {\n          index = index + 1;\n          var date;\n\n          if (orderDetail.order_date === null) {\n            date = new Date(\"2000-07-08T00:00:00.000Z\").toLocaleString('en-GB');\n          } else {\n            // date = new Date(orderDetail.order_date).toLocaleDateString();\n            date = new Date(orderDetail.order_date).toLocaleString('en-GB');\n          }\n\n          rows.push({\n            product_name: orderDetail.product_name,\n            product_rate: orderDetail.product_rate,\n            product_qty: orderDetail.product_qty,\n            product_price: orderDetail.product_price,\n            product_remarks: orderDetail.product_remarks,\n            product_extra_added: orderDetail.product_extra_added,\n            order_date: date\n          });\n        });\n        var data = {\n          columns: [{\n            label: 'Name',\n            field: 'product_name'\n          }, {\n            label: 'Rate',\n            field: 'product_rate'\n          }, {\n            label: 'QTY',\n            field: 'product_qty'\n          }, {\n            label: 'Price',\n            field: 'product_price'\n          }, {\n            label: 'Remarks',\n            field: 'product_remarks'\n          }, {\n            label: 'Extra Added',\n            field: 'product_extra_added'\n          }, {\n            label: 'Date',\n            field: 'order_date'\n          }],\n          rows: rows\n        };\n      }\n\n      return React.createElement(Can, {\n        I: \"read\",\n        a: \"report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Order-details Reports\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Select Date from which you want to fetch report.\"), React.createElement(MDBCol, {\n        md: \"12\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"3\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        id: \"datePicker\",\n        selected: fromDate,\n        onChange: this.handleDateChange,\n        className: \"form-control\",\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        autoComplete: \"off\",\n        dateFormat: \"dd/MM/yyyy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })))), React.createElement(MDBDataTable, {\n        id: \"orderDetailReportsTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 12,\n        entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Sales\",\n        value: this.totalSales(),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Value Added\",\n        value: this.totalValueAdded(),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AllReports;\n}(Component);\n\nexport default AllReports;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\reports\\pages\\sections\\AllReportsDetailWise.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","MDBInput","Can","DatePicker","AllReports","_isMounted","componentWillUnmount","handleDateChange","value","setState","fromDate","comingDate","_1day","date","Date","selectedOrderDetails","state","orderDetails","filter","orderDetail","order_date","totalSales","Total","forEach","Number","product_price","totalValueAdded","details","product_extra_added","detail","fetch","then","res","json","orders","data","completedOrders","order","status","id","error","console","log","rows","index","undefined","toLocaleString","push","product_name","product_rate","product_qty","product_remarks","columns","label","field","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\r\nimport { Can } from \"../../../../configs/Ability-context\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\n\r\nclass AllReports extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllOrders')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                let orders = json.data\r\n                let completedOrders = orders.filter(order => order.status === 'completed')\r\n                completedOrders.forEach(order => {\r\n                    fetch('getSpecificAllOrderDetails' + order.id)\r\n                    .then((res) => res.json())\r\n                    .then((json) => {})\r\n                })\r\n            })\r\n            .catch((error) => console.log(error))\r\n        fetch('/getAllOrderDetails')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                let orderDetails = json.data\r\n                if (this._isMounted) {\r\n                    this.setState({ orderDetails: orderDetails, selectedOrderDetails: orderDetails })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orderDetails: [],\r\n            selectedOrderDetails: [],\r\n            fromDate: new Date()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    // handling date value and refreshing records\r\n\r\n    handleDateChange = (value) => {\r\n        this.setState({\r\n            fromDate: value\r\n        })\r\n        let comingDate = value\r\n        let _1day = 86400000 //miliseconds\r\n        let date = new Date(comingDate - _1day);\r\n        let selectedOrderDetails = this.state.orderDetails.filter(orderDetail => new Date(orderDetail.order_date) > date)\r\n        this.setState({\r\n            selectedOrderDetails: selectedOrderDetails\r\n        });\r\n\r\n    }\r\n\r\n    totalSales = () => {\r\n        let Total = 0;\r\n        this.state.selectedOrderDetails.forEach(orderDetail => {\r\n            Total = Total + Number(orderDetail.product_price)\r\n        })\r\n        return Total\r\n    }\r\n\r\n    totalValueAdded = () => {\r\n        let Total = 0;\r\n        let details = this.state.selectedOrderDetails.filter(orderDetail => orderDetail.product_extra_added === 'Yes')\r\n        details.forEach(detail => {\r\n            Total = Total + Number(detail.product_price)\r\n        })\r\n        return Total\r\n\r\n    }\r\n\r\n    render() {\r\n        var { selectedOrderDetails, fromDate } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n        if (selectedOrderDetails !== '' || selectedOrderDetails !== null || selectedOrderDetails !== undefined) {\r\n            selectedOrderDetails.forEach((orderDetail) => {\r\n                index = index + 1;\r\n                let date;\r\n                if (orderDetail.order_date === null) {\r\n                    date = new Date(\"2000-07-08T00:00:00.000Z\").toLocaleString('en-GB');\r\n                }\r\n                else {\r\n                    // date = new Date(orderDetail.order_date).toLocaleDateString();\r\n                    date = new Date(orderDetail.order_date).toLocaleString('en-GB');\r\n                }\r\n                rows.push(\r\n                    {\r\n                        product_name: orderDetail.product_name,\r\n                        product_rate: orderDetail.product_rate,\r\n                        product_qty: orderDetail.product_qty,\r\n                        product_price: orderDetail.product_price,\r\n                        product_remarks: orderDetail.product_remarks,\r\n                        product_extra_added: orderDetail.product_extra_added,\r\n                        order_date: date,\r\n                    }\r\n                );\r\n            });\r\n\r\n            var data = {\r\n                columns: [\r\n                    { label: 'Name', field: 'product_name' },\r\n                    { label: 'Rate', field: 'product_rate' },\r\n                    { label: 'QTY', field: 'product_qty' },\r\n                    { label: 'Price', field: 'product_price' },\r\n                    { label: 'Remarks', field: 'product_remarks' },\r\n                    { label: 'Extra Added', field: 'product_extra_added' },\r\n                    { label: 'Date', field: 'order_date' }\r\n                ],\r\n                rows: rows\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Can I='read' a='report'>\r\n                <MDBCard className=' p-0'>\r\n                    <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                        Order-details Reports\r\n                    </MDBCardHeader>\r\n                    <MDBCardBody className='p-2'>\r\n                        <MDBRow className='m-0 p-0' >\r\n                            <label>Select Date from which you want to fetch report.</label>\r\n                            <MDBCol md='12' className='m-0 p-0' >\r\n                                <MDBCol md='3' className='m-0 p-0'>\r\n                                    <DatePicker\r\n                                        id='datePicker'\r\n                                        selected={fromDate}\r\n                                        onChange={this.handleDateChange}\r\n                                        className='form-control'\r\n                                        peekNextMonth\r\n                                        showMonthDropdown\r\n                                        showYearDropdown\r\n                                        dropdownMode=\"select\"\r\n                                        autoComplete='off'\r\n                                        dateFormat=\"dd/MM/yyyy\"\r\n                                    />\r\n                                </MDBCol>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n\r\n                        <MDBDataTable id='orderDetailReportsTable' striped small hover theadColor=\"teal\"\r\n                            bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                            data={data} theadTextWhite >\r\n                        </MDBDataTable>\r\n                        <MDBRow>\r\n                            <MDBCol>\r\n                                <MDBInput type='text' label='Total Sales' value={this.totalSales()} disabled />\r\n                            </MDBCol>\r\n                            <MDBCol>\r\n                                <MDBInput type='text' label='Total Value Added' value={this.totalValueAdded()} disabled />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n\r\n\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllReports"]},"metadata":{},"sourceType":"module"}