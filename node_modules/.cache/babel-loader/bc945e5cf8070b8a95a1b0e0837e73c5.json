{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\roles\\\\pages\\\\AllRoles.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\nimport EditRoleModal from './EditRoleModal';\nimport DeleteModal from '../../misc/sections/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\n\nclass AllRoles extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n    };\n\n    this.handleEdit = id => e => {\n      this.refs.editRoleModal.setState({\n        modalShow: true\n      });\n      this.refs.editRoleModal.fetchData(id);\n    };\n\n    this.handleDelete = id => e => {\n      let el = e.target;\n      let row = el.closest('tr');\n      var i = row.rowIndex;\n      this.setState({\n        rowToBeDeleted: i,\n        dRowValue: id\n      });\n      this.refs.deleteModal.setState({\n        modalShow: true\n      });\n    };\n\n    this.deleteRole = () => {\n      let rowToBeDeleted = this.state.rowToBeDeleted;\n      let dRowValue = this.state.dRowValue;\n      document.getElementById('rolesTable').deleteRow(rowToBeDeleted);\n      let role = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(role),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteRole', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this._isMounted = true;\n    fetch('/getAllRoles').then(res => res.json()).then(json => {\n      console.log(json);\n\n      if (this._isMounted) {\n        this.setState({\n          roles: json.data\n        });\n      }\n    }).catch(error => console.log(error));\n    this.state = {\n      rowToBeDeleted: '',\n      dRowValue: '',\n      roles: []\n    };\n  }\n\n  render() {\n    var roles = this.state.roles;\n    var rows = [];\n    var index = 0;\n    roles.forEach(role => {\n      index = index + 1;\n      rows.push({\n        index: index,\n        name: role.name,\n        buttons: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Can, {\n          I: \"update\",\n          a: \"role\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleEdit(role.id),\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"teal\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"pencil-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))), React.createElement(Can, {\n          I: \"delete\",\n          a: \"role\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleDelete(role.id),\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"red darken-3\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }))))\n      });\n    });\n    var data = {\n      columns: [{\n        label: '#',\n        field: 'index'\n      }, {\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Action',\n        field: 'buttons'\n      }],\n      rows: rows\n    };\n    return React.createElement(MDBContainer, {\n      className: \"\",\n      style: {\n        marginTop: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \" p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"User' Roles\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      id: \"rolesTable\",\n      striped: true,\n      small: true,\n      hover: true,\n      theadColor: \"teal\",\n      bordered: true,\n      btn: true,\n      entries: 12,\n      entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n      responsive: true,\n      data: data,\n      theadTextWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(EditRoleModal, {\n      ref: \"editRoleModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(DeleteModal, {\n      ref: \"deleteModal\",\n      deleteEntry: this.deleteRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default AllRoles;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\roles\\pages\\AllRoles.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","EditRoleModal","DeleteModal","Can","AllRoles","constructor","_isMounted","componentWillUnmount","handleEdit","id","e","refs","editRoleModal","setState","modalShow","fetchData","handleDelete","el","target","row","closest","i","rowIndex","rowToBeDeleted","dRowValue","deleteModal","deleteRole","state","document","getElementById","deleteRow","role","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","catch","error","roles","data","render","rows","index","forEach","push","name","buttons","fontSize","columns","label","field","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,aAAhC,EAA+CC,WAA/C,EAA4DC,MAA5D,EAAoEC,OAApE,QAAmF,UAAnF;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,GAAT,QAAoB,kCAApB;;AAGA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAE7BW,EAAAA,WAAW,GAAG;AACV;AADU,SADdC,UACc,GADD,KACC;;AAAA,SAmBdC,oBAnBc,GAmBS,MAAM;AACzB,WAAKD,UAAL,GAAkB,KAAlB;AACH,KArBa;;AAAA,SAwBdE,UAxBc,GAwBAC,EAAD,IAASC,CAAD,IAAO;AACxB,WAAKC,IAAL,CAAUC,aAAV,CAAwBC,QAAxB,CAAiC;AAC7BC,QAAAA,SAAS,EAAE;AADkB,OAAjC;AAGA,WAAKH,IAAL,CAAUC,aAAV,CAAwBG,SAAxB,CAAkCN,EAAlC;AACH,KA7Ba;;AAAA,SA+BdO,YA/Bc,GA+BEP,EAAD,IAASC,CAAD,IAAO;AAC1B,UAAIO,EAAE,GAAGP,CAAC,CAACQ,MAAX;AACA,UAAIC,GAAG,GAAGF,EAAE,CAACG,OAAH,CAAW,IAAX,CAAV;AACA,UAAIC,CAAC,GAAGF,GAAG,CAACG,QAAZ;AACA,WAAKT,QAAL,CAAc;AACVU,QAAAA,cAAc,EAAEF,CADN;AAEVG,QAAAA,SAAS,EAAEf;AAFD,OAAd;AAIA,WAAKE,IAAL,CAAUc,WAAV,CAAsBZ,QAAtB,CAA+B;AAC3BC,QAAAA,SAAS,EAAE;AADgB,OAA/B;AAGH,KA1Ca;;AAAA,SA4CdY,UA5Cc,GA4CD,MAAM;AACf,UAAIH,cAAc,GAAG,KAAKI,KAAL,CAAWJ,cAAhC;AACA,UAAIC,SAAS,GAAG,KAAKG,KAAL,CAAWH,SAA3B;AACAI,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,CAAgDP,cAAhD;AACA,UAAIQ,IAAI,GAAG;AAAEC,QAAAA,KAAK,EAAER;AAAT,OAAX;AAEA,UAAIS,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,QADE;AAEVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFI;AAGVO,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAHC,OAAd;AAKAC,MAAAA,KAAK,CAAC,aAAD,EAAgBN,OAAhB,CAAL,CACKO,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAJL,EAKKG,KALL,CAKYC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CALtB;AAMH,KA7Da;;AAEV,SAAKxC,UAAL,GAAkB,IAAlB;AACAiC,IAAAA,KAAK,CAAC,cAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAI,KAAKpC,UAAT,EAAqB;AACjB,aAAKO,QAAL,CAAc;AAAEkC,UAAAA,KAAK,EAAEL,IAAI,CAACM;AAAd,SAAd;AACH;AACJ,KAPL,EAQKH,KARL,CAQYC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CARtB;AASA,SAAKnB,KAAL,GAAa;AACTJ,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTuB,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAgDDE,EAAAA,MAAM,GAAG;AAAA,QACCF,KADD,GACW,KAAKpB,KADhB,CACCoB,KADD;AAEL,QAAIG,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,CAAZ;AAEAJ,IAAAA,KAAK,CAACK,OAAN,CAAerB,IAAD,IAAU;AAEpBoB,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACAD,MAAAA,IAAI,CAACG,IAAL,CACI;AACIF,QAAAA,KAAK,EAAEA,KADX;AAEIG,QAAAA,IAAI,EAAEvB,IAAI,CAACuB,IAFf;AAGIC,QAAAA,OAAO,EAAE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,oBAAC,GAAD;AAAK,UAAA,CAAC,EAAC,QAAP;AAAgB,UAAA,CAAC,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAf;AAAqC,UAAA,OAAO,EAAE,KAAKhD,UAAL,CAAgBuB,IAAI,CAACtB,EAArB,CAA9C;AAAwE,UAAA,SAAS,EAAC,eAAlF;AAAkG,UAAA,OAAO,MAAzG;AAA0G,UAAA,KAAK,EAAC,MAAhH;AAAuH,UAAA,IAAI,EAAC,IAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiI,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjI,CADJ,CADK,EAIL,oBAAC,GAAD;AAAK,UAAA,CAAC,EAAC,QAAP;AAAgB,UAAA,CAAC,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAE+C,YAAAA,QAAQ,EAAE;AAAZ,WAAf;AAAqC,UAAA,OAAO,EAAE,KAAKxC,YAAL,CAAkBe,IAAI,CAACtB,EAAvB,CAA9C;AAA0E,UAAA,SAAS,EAAC,eAApF;AAAoG,UAAA,OAAO,MAA3G;AAA4G,UAAA,KAAK,EAAC,cAAlH;AAAiI,UAAA,IAAI,EAAC,IAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2I,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3I,CADJ,CAJK;AAHb,OADJ;AAcH,KAjBD;AAmBA,QAAIuC,IAAI,GAAG;AACPS,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE;AAArB,OADK,EAC4B;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAD5B,EAEL;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFK,CADF;AAKPT,MAAAA,IAAI,EAAEA;AALC,KAAX;AAOA,WACI,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,EAAxB;AAA2B,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,IAAnB;AAAwB,MAAA,SAAS,EAAC,8BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,YAAjB;AAA8B,MAAA,OAAO,MAArC;AAAsC,MAAA,KAAK,MAA3C;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,UAAU,EAAC,MAA7D;AACI,MAAA,QAAQ,MADZ;AACa,MAAA,GAAG,MADhB;AACiB,MAAA,OAAO,EAAE,EAD1B;AAC8B,MAAA,cAAc,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB,EAA6B,GAA7B,CAD9C;AACiF,MAAA,UAAU,MAD3F;AAEI,MAAA,IAAI,EAAEZ,IAFV;AAEgB,MAAA,cAAc,MAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAMI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAC,eADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EASI,oBAAC,WAAD;AACI,MAAA,GAAG,EAAC,aADR;AAEI,MAAA,WAAW,EAAE,KAAKtB,UAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AA2BH;;AA7H4B;;AAiIjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport EditRoleModal from './EditRoleModal';\r\nimport DeleteModal from '../../misc/sections/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\n\r\n\r\nclass AllRoles extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            rowToBeDeleted: '',\r\n            dRowValue: '',\r\n            roles: [],\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.refs.editRoleModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.editRoleModal.fetchData(id);\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteRole = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('rolesTable').deleteRow(rowToBeDeleted)\r\n        let role = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(role),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteRole', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var { roles } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n\r\n        roles.forEach((role) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: role.name,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='update' a='role'>\r\n                            <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit(role.id)} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='role'>\r\n                            <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete(role.id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <MDBContainer className='' style={{ marginTop: '80px' }}>\r\n                <MDBRow center>\r\n                    <MDBCol md=\"6\">\r\n                        <MDBCard className=' p-0'>\r\n                            <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                                User' Roles\r\n                            </MDBCardHeader>\r\n                            <MDBCardBody className='p-2'>\r\n\r\n                                <MDBDataTable id='rolesTable' striped small hover theadColor=\"teal\"\r\n                                    bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                                    data={data} theadTextWhite >\r\n                                </MDBDataTable>\r\n                                <EditRoleModal\r\n                                    ref='editRoleModal'\r\n                                />\r\n                                <DeleteModal\r\n                                    ref='deleteModal'\r\n                                    deleteEntry={this.deleteRole}\r\n                                />\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllRoles"]},"metadata":{},"sourceType":"module"}