{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\OTableRow.jsx\";\nimport React, { Component } from 'react'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faUserEdit } from '@fortawesome/free-solid-svg-icons';\n// import PopUp from './PopUp';\n\nclass OTableRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.editRow = e => {\n      var iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\n      var svgClick = e.target.parentNode.parentNode.parentNode;\n      var buttonClick = e.target.parentNode.parentNode;\n      var tdClick = e.target.parentNode;\n      var target = e.target;\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = svgClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = buttonClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = tdClick;\n      }\n\n      if (iconClick.rowIndex === undefined) {\n        iconClick = target;\n      } // console.log(iconClick.rowIndex);\n      // console.log(this.rowIndex);\n\n\n      let id = iconClick.cells[8].innerHTML;\n      let name = iconClick.cells[1].innerHTML;\n      let email = iconClick.cells[2].innerHTML;\n      let cell = iconClick.cells[3].innerHTML;\n      let address = iconClick.cells[4].innerHTML;\n      let area = iconClick.cells[5].innerHTML;\n      let route = iconClick.cells[6].innerHTML;\n      this.setState({\n        editId: id,\n        editName: name,\n        editEmail: email,\n        editCell: cell,\n        editAddress: address,\n        editArea: area,\n        editRoute: route,\n        modalShow: true\n      });\n    };\n\n    this.updatedb = (name, email, cell, address, area, route) => {\n      let customer = {\n        id: this.state.editId,\n        name: name,\n        email: email,\n        cell: cell,\n        address: address,\n        area: area,\n        route: route\n      };\n      var options = {\n        method: 'PUT',\n        body: JSON.stringify(customer),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/updateCustomer', options).then(res => res.json()).then(json => {\n        console.log(json); // this.props.dispatch(removeCustomer(json.data));\n\n        this.setState({\n          editId: '',\n          editName: '',\n          editEmail: '',\n          editCell: '',\n          editAddress: '',\n          editArea: '',\n          editRoute: '',\n          modalShow: false // this.setState({ modalShow: false });\n\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      modalShow: false,\n      editId: '',\n      editName: '',\n      editEmail: '',\n      editCell: '',\n      editAddress: '',\n      editArea: '',\n      editRoute: ''\n    }; // this.deleteRow = this.deleteRow.bind(this);\n  }\n\n  deleteRow(e) {\n    var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n    var svgClik = e.target.parentNode.parentNode.parentNode;\n    var buttonClik = e.target.parentNode.parentNode;\n    var tdClik = e.target.parentNode;\n    var targt = e.target;\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = svgClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = buttonClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = tdClik;\n    }\n\n    if (iconClik.rowIndex === undefined) {\n      iconClik = targt;\n    }\n\n    var i = iconClik.rowIndex;\n    document.getElementById('Ctbl').deleteRow(i);\n    let dRowValue = iconClik.cells[8].innerHTML;\n    let customer = {\n      value: dRowValue\n    };\n    var options = {\n      method: 'DELETE',\n      body: JSON.stringify(customer),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('/deleteCustomer', options).then(res => res.json()).then(json => {\n      console.log(json);\n      this.props.dispatch(removeCustomer(json.data));\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const index = this.props.index;\n    const searchResult = this.props.searchResult;\n    const id = searchResult.id;\n    const name = searchResult.name;\n    const email = searchResult.email;\n    const cell = searchResult.cell;\n    const address = searchResult.address;\n    const area = searchResult.area_id;\n    const route = searchResult.route_id;\n    return React.createElement(\"tr\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, index), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, cell), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, area), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, route), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginRight: '10px'\n      },\n      onClick: this.editRow,\n      type: \"button\",\n      className: \" btn mb-1 btn-light \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUserEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(PopUp, {\n      editname: this.state.editName,\n      editemail: this.state.editEmail,\n      editcell: this.state.editCell,\n      editaddress: this.state.editAddress,\n      editarea: this.state.editArea,\n      editroute: this.state.editRoute,\n      show: this.state.modalShow,\n      updatedb: this.updatedb,\n      onHide: () => {\n        this.setState({\n          modalShow: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.deleteRow,\n      type: \"button\",\n      className: \" btn btn-light mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, id));\n  }\n\n}\n\nexport default OTableRow;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\OTableRow.jsx"],"names":["React","Component","OTableRow","constructor","args","editRow","e","iconClick","target","parentNode","svgClick","buttonClick","tdClick","rowIndex","undefined","id","cells","innerHTML","name","email","cell","address","area","route","setState","editId","editName","editEmail","editCell","editAddress","editArea","editRoute","modalShow","updatedb","customer","state","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","catch","error","deleteRow","iconClik","svgClik","buttonClik","tdClik","targt","i","document","getElementById","dRowValue","value","props","dispatch","removeCustomer","data","render","index","searchResult","area_id","route_id","marginRight","faUserEdit","faTrash","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTrash, faUserEdit } from '@fortawesome/free-solid-svg-icons';\r\n// import PopUp from './PopUp';\r\n\r\n\r\nclass OTableRow extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.state = {\r\n            modalShow: false,\r\n            editId: '',\r\n            editName: '',\r\n            editEmail: '',\r\n            editCell: '',\r\n            editAddress: '',\r\n            editArea: '',\r\n            editRoute: '',\r\n\r\n        };\r\n        // this.deleteRow = this.deleteRow.bind(this);\r\n\r\n    }\r\n    editRow = (e) => {\r\n        var iconClick = e.target.parentNode.parentNode.parentNode.parentNode;\r\n        var svgClick = e.target.parentNode.parentNode.parentNode;\r\n        var buttonClick = e.target.parentNode.parentNode;\r\n        var tdClick = e.target.parentNode;\r\n        var target = e.target\r\n\r\n        if (iconClick.rowIndex === undefined) {\r\n            iconClick = svgClick;\r\n        }\r\n        if (iconClick.rowIndex === undefined) {\r\n            iconClick = buttonClick;\r\n        }\r\n        if (iconClick.rowIndex === undefined) {\r\n            iconClick = tdClick;\r\n        }\r\n        if (iconClick.rowIndex === undefined) {\r\n            iconClick = target;\r\n        }\r\n        // console.log(iconClick.rowIndex);\r\n        // console.log(this.rowIndex);\r\n\r\n        let id = iconClick.cells[8].innerHTML\r\n        let name = iconClick.cells[1].innerHTML\r\n        let email = iconClick.cells[2].innerHTML\r\n        let cell = iconClick.cells[3].innerHTML\r\n        let address = iconClick.cells[4].innerHTML\r\n        let area = iconClick.cells[5].innerHTML\r\n        let route = iconClick.cells[6].innerHTML\r\n        this.setState({\r\n            editId: id,\r\n            editName: name,\r\n            editEmail: email,\r\n            editCell: cell,\r\n            editAddress: address,\r\n            editArea: area,\r\n            editRoute: route,\r\n            modalShow: true\r\n        })\r\n\r\n    }\r\n    updatedb = (name, email, cell, address, area, route) => {\r\n        let customer = { id: this.state.editId, name: name, email: email, cell: cell, address: address, area: area, route: route }\r\n\r\n        var options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(customer),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/updateCustomer', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                // this.props.dispatch(removeCustomer(json.data));\r\n                this.setState({\r\n                    editId: '',\r\n                    editName: '',\r\n                    editEmail: '',\r\n                    editCell: '',\r\n                    editAddress: '',\r\n                    editArea: '',\r\n                    editRoute: '',\r\n                    modalShow: false\r\n                    // this.setState({ modalShow: false });\r\n                })\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n    deleteRow(e) {\r\n        var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\r\n        var svgClik = e.target.parentNode.parentNode.parentNode;\r\n        var buttonClik = e.target.parentNode.parentNode;\r\n        var tdClik = e.target.parentNode;\r\n        var targt = e.target\r\n\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = svgClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = buttonClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = tdClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = targt;\r\n        }\r\n        var i = iconClik.rowIndex;\r\n        document.getElementById('Ctbl').deleteRow(i)\r\n\r\n        let dRowValue = iconClik.cells[8].innerHTML\r\n        let customer = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(customer),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteCustomer', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                this.props.dispatch(removeCustomer(json.data));\r\n\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.index;\r\n        const searchResult = this.props.searchResult;\r\n        const id = searchResult.id;\r\n        const name = searchResult.name;\r\n        const email = searchResult.email;\r\n        const cell = searchResult.cell;\r\n        const address = searchResult.address;\r\n        const area = searchResult.area_id;\r\n        const route = searchResult.route_id;\r\n\r\n        return (\r\n            <tr className=''>\r\n                <td>{index}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>{cell}</td>\r\n                <td>{address}</td>\r\n                <td>{area}</td>\r\n                <td>{route}</td>\r\n                <td>\r\n                    <button style={{ marginRight: '10px' }} onClick={this.editRow} type='button' className=\" btn mb-1 btn-light \">\r\n                        <FontAwesomeIcon icon={faUserEdit} />\r\n                        {/* edit */}\r\n                    </button>\r\n                    <PopUp\r\n\r\n                        editname={this.state.editName}\r\n                        editemail={this.state.editEmail}\r\n                        editcell={this.state.editCell}\r\n                        editaddress={this.state.editAddress}\r\n                        editarea={this.state.editArea}\r\n                        editroute={this.state.editRoute}\r\n                        show={this.state.modalShow}\r\n                        updatedb={this.updatedb}\r\n                        onHide={() => { this.setState({ modalShow: false }) }}\r\n                    />\r\n                    <button onClick={this.deleteRow} type='button' className=\" btn btn-light mb-1\">\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                        {/* delete */}\r\n                    </button>\r\n                </td>\r\n                <td style={{ display: 'none' }}>{id}</td>\r\n\r\n            </tr >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OTableRow"]},"metadata":{},"sourceType":"module"}