{"ast":null,"code":"import _objectSpread from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\users\\\\pages\\\\EditUserModal.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBCard, MDBCardBody, MDBModalHeader, MDBRow, MDBCol, MDBIcon, MDBInput } from 'mdbreact';\nimport Select from 'react-select';\nimport Notification from '../../misc/sections/Notification';\n\nvar EditUserModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditUserModal, _Component);\n\n  function EditUserModal(props) {\n    var _this;\n\n    _classCallCheck(this, EditUserModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditUserModal).call(this, props));\n    _this._isMounted = false;\n\n    _this.fetchData = function (id) {\n      _this._isMounted = true;\n      fetch('/getSpecificUser/' + id).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n        var user = json.data;\n\n        if (_this._isMounted === true) {\n          _this.setState({\n            user: user,\n            userId: user.id,\n            role_id: user.role_id,\n            name: user.name,\n            email: user.email,\n            cell: user.cell,\n            username: user.username,\n            password: user.password\n          });\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n      fetch('/getAllRoles').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        if (_this._isMounted) {\n          _this.setState({\n            roles: json.data\n          });\n        }\n\n        _this.setRoleOptions(json.data);\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modalShow: !_this.state.modalShow\n      });\n    };\n\n    _this.setRoleOptions = function (roles) {\n      var roleOptions = roles.map(function (role) {\n        return {\n          key: role.id,\n          label: role.name,\n          value: role.id\n        };\n      });\n      var currentRole;\n      roles.forEach(function (role) {\n        if (role.id === _this.state.user.role_id) {\n          currentRole = {\n            label: role.name,\n            value: role.id\n          };\n        }\n      });\n\n      _this.setState({\n        roleOptions: roleOptions,\n        role: currentRole\n      });\n    };\n\n    _this.handleInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSelectChange = function (selectedOption) {\n      _this.setState({\n        role: selectedOption\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.refs.updateUserForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else if (_this.state.role === '' || _this.state.role === null) {\n        _this.setState({\n          role: null\n        });\n\n        return;\n      } else {\n        var _this$state = _this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            cell = _this$state.cell,\n            username = _this$state.username,\n            password = _this$state.password,\n            role = _this$state.role,\n            userId = _this$state.userId; // console.log(userId, name, email, cell, username, password, role);\n\n        var updatedUser = {\n          id: userId,\n          name: name,\n          email: email,\n          cell: cell,\n          username: username,\n          password: password,\n          role: role.value\n        };\n        var options = {\n          method: 'PUT',\n          body: JSON.stringify(updatedUser),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/updateUser', options).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          // console.log(json)\n          if (_this._isMounted === true) {\n            _this.setState({\n              message: json.message,\n              notificationShow: true\n            });\n\n            setTimeout(function () {\n              return _this.setState({\n                notificationShow: false\n              });\n            }, 1502);\n          }\n        })[\"catch\"](function (error) {\n          return console.log(error);\n        }); //closing edit modal\n\n        _this.toggle(); // refreshing all records table\n        // window.location.reload();\n\n      }\n    };\n\n    _this.state = {\n      modalShow: false,\n      userId: '',\n      role_id: '',\n      role: '',\n      name: '',\n      email: '',\n      cell: undefined || '',\n      username: '',\n      password: '',\n      roles: '',\n      roleOptions: [],\n      message: '',\n      notificationShow: false\n    };\n    return _this;\n  }\n\n  _createClass(EditUserModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          cell = _this$state2.cell,\n          username = _this$state2.username,\n          password = _this$state2.password;\n      var _this$state3 = this.state,\n          role = _this$state3.role,\n          roleOptions = _this$state3.roleOptions;\n      var customStyles = {\n        control: function control(base, state) {\n          return _objectSpread({}, base, {\n            borderColor: state.isFocused ? '#ddd' : role !== null ? '#ddd' : 'red',\n            fontWeight: 370,\n            borderTop: 'none',\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderRadius: 'none'\n          });\n        }\n      };\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(MDBModal, {\n        isOpen: this.state.modalShow,\n        toggle: this.toggle,\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MDBModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Edit User Details\"), React.createElement(MDBModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        ref: \"updateUserForm\",\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: name,\n        label: \"Name\",\n        name: \"name\",\n        icon: \"user\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: email,\n        label: \"Email\",\n        name: \"email\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: cell,\n        label: \"Phone\",\n        name: \"cell\",\n        icon: \"phone\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: username,\n        label: \"Username\",\n        name: \"username\",\n        inputRef: function inputRef(el) {\n          _this2.username = el;\n        },\n        icon: \"user\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: password,\n        label: \"Password\",\n        name: \"password\",\n        icon: \"lock\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: \"mt-0 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: \"1\",\n        middle: true,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"user-tie\",\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Select, {\n        styles: customStyles // defaultValue={currentRole}\n        ,\n        value: this.state.role,\n        onChange: this.handleSelectChange,\n        options: roleOptions,\n        placeholder: \"Role\",\n        isSearchable: true,\n        isClearable: true,\n        className: \"form-control-md pl-0\",\n        isOptionDisabled: function isOptionDisabled(option) {\n          return option.label === 'safe';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        className: \"px-2 font-weight-bold\",\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Close\"), React.createElement(MDBBtn, {\n        size: \"sm\",\n        className: \"px-2 font-weight-bold\",\n        onClick: this.handleSubmit,\n        outline: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Save updates\")))), this.state.notificationShow ? React.createElement(Notification, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }) : null))));\n    }\n  }]);\n\n  return EditUserModal;\n}(Component);\n\nexport default EditUserModal;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\users\\pages\\EditUserModal.jsx"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBCard","MDBCardBody","MDBModalHeader","MDBRow","MDBCol","MDBIcon","MDBInput","Select","Notification","EditUserModal","props","_isMounted","fetchData","id","fetch","then","res","json","console","log","user","data","setState","userId","role_id","name","email","cell","username","password","error","roles","setRoleOptions","componentWillUnmount","toggle","modalShow","state","roleOptions","map","role","key","label","value","currentRole","forEach","handleInput","e","target","handleSelectChange","selectedOption","handleSubmit","preventDefault","form","refs","updateUserForm","checkValidity","classList","add","updatedUser","options","method","body","JSON","stringify","headers","message","notificationShow","setTimeout","undefined","customStyles","control","base","borderColor","isFocused","fontWeight","borderTop","borderRight","borderLeft","borderRadius","el","option"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBCard, MDBCardBody, MDBModalHeader,\r\n    MDBRow, MDBCol, MDBIcon, MDBInput\r\n} from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport Notification from '../../misc/sections/Notification';\r\n\r\n\r\n\r\nclass EditUserModal extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false,\r\n            userId: '',\r\n            role_id: '',\r\n            role: '',\r\n            name: '',\r\n            email: '',\r\n            cell: undefined || '',\r\n            username: '',\r\n            password: '',\r\n            roles: '',\r\n            roleOptions: [],\r\n            message: '',\r\n            notificationShow: false\r\n        }\r\n    }\r\n\r\n    fetchData = (id) => {\r\n        this._isMounted = true\r\n        fetch('/getSpecificUser/' + id)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                var user = json.data\r\n                if (this._isMounted === true) {\r\n                    this.setState({\r\n                        user: user,\r\n                        userId: user.id,\r\n                        role_id: user.role_id,\r\n                        name: user.name,\r\n                        email: user.email,\r\n                        cell: user.cell,\r\n                        username: user.username,\r\n                        password: user.password,\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data })\r\n                }\r\n                this.setRoleOptions(json.data);\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow,\r\n\r\n        });\r\n    }\r\n\r\n    setRoleOptions = (roles) => {\r\n        let roleOptions = roles.map(role => ({ key: role.id, label: role.name, value: role.id }));\r\n        let currentRole;\r\n        roles.forEach(role => {\r\n            if (role.id === this.state.user.role_id) {\r\n                currentRole = { label: role.name, value: role.id }\r\n            }\r\n        });\r\n        this.setState({\r\n            roleOptions: roleOptions, role: currentRole,\r\n        })\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = selectedOption => {\r\n        this.setState({\r\n            role: selectedOption\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.updateUserForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else if (this.state.role === '' || this.state.role === null) {\r\n            this.setState({ role: null })\r\n            return\r\n        }\r\n        else {\r\n            let { name, email, cell, username, password, role, userId } = this.state\r\n            // console.log(userId, name, email, cell, username, password, role);\r\n            let updatedUser = { id: userId, name: name, email: email, cell: cell, username: username, password: password, role: role.value }\r\n            var options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(updatedUser),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    if (this._isMounted === true) {\r\n                        this.setState({ message: json.message, notificationShow: true })\r\n                        setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n\r\n            //closing edit modal\r\n            this.toggle()\r\n\r\n            // refreshing all records table\r\n            // window.location.reload();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { name, email, cell, username, password } = this.state\r\n        let { role, roleOptions } = this.state\r\n        const customStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : role !== null ?\r\n                        '#ddd' : 'red',\r\n                fontWeight: 370,\r\n                borderTop: 'none',\r\n                borderRight: 'none',\r\n                borderLeft: 'none',\r\n                borderRadius: 'none'\r\n            })\r\n        }\r\n\r\n\r\n        return (\r\n            <MDBContainer>\r\n                <MDBModal isOpen={this.state.modalShow} toggle={this.toggle} size='lg' centered>\r\n                    <MDBModalHeader toggle={this.toggle}>Edit User Details</MDBModalHeader>\r\n                    <MDBModalBody>\r\n\r\n                        <MDBCard className=' p-5'>\r\n                            <MDBCardBody className='p-2'>\r\n\r\n                                <form ref='updateUserForm' onSubmit={this.handleSubmit} noValidate>\r\n                                    <div className=\"grey-text\">\r\n                                        <MDBInput\r\n                                            onInput={this.handleInput}\r\n                                            value={name}\r\n                                            label=\"Name\"\r\n                                            name='name'\r\n                                            icon=\"user\"\r\n                                            group\r\n                                            type=\"text\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                            required\r\n                                        />\r\n                                        <MDBInput\r\n                                            onInput={this.handleInput}\r\n                                            value={email}\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            icon=\"envelope\"\r\n                                            group\r\n                                            type=\"email\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                            required\r\n                                        />\r\n                                        <MDBInput\r\n                                            onInput={this.handleInput}\r\n                                            value={cell}\r\n                                            label=\"Phone\"\r\n                                            name=\"cell\"\r\n                                            icon=\"phone\"\r\n                                            group\r\n                                            type=\"text\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                        />\r\n                                        <MDBInput\r\n                                            onInput={this.handleInput}\r\n                                            value={username}\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            inputRef={el => { this.username = el }}\r\n                                            icon=\"user\"\r\n                                            group\r\n                                            type=\"text\"\r\n                                            validate\r\n                                            required\r\n                                        />\r\n                                        <MDBInput\r\n                                            onInput={this.handleInput}\r\n                                            value={password}\r\n                                            label=\"Password\"\r\n                                            name=\"password\"\r\n                                            icon=\"lock\"\r\n                                            group\r\n                                            type=\"text\"\r\n                                            validate\r\n                                            required>\r\n                                        </MDBInput>\r\n                                        <MDBRow className='mt-0 mb-2' >\r\n                                            <MDBCol sm='1' middle className=''>\r\n                                                <MDBIcon icon=\"user-tie\" size='2x' />\r\n                                            </MDBCol>\r\n                                            <MDBCol className=''>\r\n                                                <Select\r\n                                                    styles={customStyles}\r\n                                                    // defaultValue={currentRole}\r\n                                                    value={this.state.role}\r\n                                                    onChange={this.handleSelectChange}\r\n                                                    options={roleOptions}\r\n                                                    placeholder='Role'\r\n                                                    isSearchable\r\n                                                    isClearable\r\n                                                    className='form-control-md pl-0'\r\n                                                    isOptionDisabled={option => option.label === 'safe'}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </div>\r\n                                    <div className='text-right'>\r\n                                        <MDBBtn size='sm' className='px-2 font-weight-bold' color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                                        <MDBBtn size='sm' className='px-2 font-weight-bold' onClick={this.handleSubmit} outline color=\"primary\">Save updates</MDBBtn>\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                            {\r\n                                this.state.notificationShow ?\r\n                                    <Notification\r\n                                        message={this.state.message}\r\n                                    />\r\n                                    : null\r\n                            }\r\n                        </MDBCard>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </MDBContainer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditUserModal;"]},"metadata":{},"sourceType":"module"}