{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\Routes.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { PropsRoute } from 'react-router-with-props';\nimport NotFound from './pages/NotFound';\nimport SecuredLogin from './SecuredLogin';\nimport SecuredHome from './SecuredHome'; // import Customers from './main/customers/Customers';\n// import PriceGroups from './main/priceGroups/PriceGroups';\n// import Drivers from './main/drivers/Drivers';\n// import Routes from './main/routes/Routes';\n// import Products from './main/products/Products';\n// import ProductCategories from './main/productCategories/ProductCategories';\n// import Areas from './main/areas/Areas'\n// import Users from './main/users/Users'\n// import RolesAndPermissions from './main/rolesAndPermissions/RolesAndPermissions'\n// import SalesOrReturn from './main/salesOrReturn/SalesOrReturn';\n// import Inventory from './main/inventory/Inventory';\n// import { AbilityContext } from \"../configs/Ability-context\";\n// import defineRulesFor from \"../configs/Ability\";\n// import { Ability } from \"@casl/ability\";\n// const ability = new Ability();\n\nclass Content extends Component {\n  constructor() {\n    super();\n\n    this.tick = () => {\n      this.setState({\n        date: new Date()\n      });\n    };\n\n    this.changeUser = x => {\n      console.log('ok'); // var user1;\n      // switch (x) {\n      //     case '8':\n      //         user1 = 'superAdmin'\n      //         break;\n      //     case '4':\n      //         user1 = 'admin'\n      //         break;\n      //     case '7':\n      //         user1 = 'operator'\n      //         break;\n      //     case '5':\n      //         user1 = 'endUser'\n      //         break;\n      // }\n      // const rules = defineRulesFor(user1);\n      // ability.update(rules);\n      // // this.setState({\n      // //     value: user1\n      // // });\n\n      this.props.callNavs();\n    };\n\n    this.state = {\n      date: new Date() // value=\"admin\"\n\n    };\n    this.changeUser = this.changeUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {},\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(PropsRoute, {\n      path: \"/\",\n      component: SecuredLogin,\n      changeUser: this.changeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(PropsRoute, {\n      path: \"/login\",\n      component: SecuredLogin,\n      changeUser: this.changeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      component: SecuredHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: NotFound,\n      pt: \"186px\",\n      pb: \"185px\",\n      class: 'sol-sm-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\Routes.js"],"names":["React","Component","Switch","Route","BrowserRouter","PropsRoute","NotFound","SecuredLogin","SecuredHome","Content","constructor","tick","setState","date","Date","changeUser","x","console","log","props","callNavs","state","bind","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC5BS,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,IAhBc,GAgBP,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,OAAd;AACH,KAlBa;;AAAA,SAmBdC,UAnBc,GAmBAC,CAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAKC,KAAL,CAAWC,QAAX;AAEH,KA5Ca;;AAEV,SAAKC,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADG,CAET;;AAFS,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBO,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKd,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACH;;AACDe,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACH;;AA8BDI,EAAAA,MAAM,GAAG;AAEL,WAEI;AAAK,MAAA,KAAK,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,UAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAErB,YAAjC;AAA+C,MAAA,UAAU,EAAE,KAAKQ,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAER,YAArC;AAAmD,MAAA,UAAU,EAAE,KAAKQ,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEP,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAgBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEF,QAA3B;AAAqC,MAAA,EAAE,EAAC,OAAxC;AAAgD,MAAA,EAAE,EAAC,OAAnD;AAA2D,MAAA,KAAK,EAAE,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CAFR,CAFJ;AA0BH;;AA1E2B;;AA8EhC,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { PropsRoute } from 'react-router-with-props';\nimport NotFound from './pages/NotFound';\nimport SecuredLogin from './SecuredLogin';\nimport SecuredHome from './SecuredHome';\n// import Customers from './main/customers/Customers';\n// import PriceGroups from './main/priceGroups/PriceGroups';\n// import Drivers from './main/drivers/Drivers';\n// import Routes from './main/routes/Routes';\n// import Products from './main/products/Products';\n// import ProductCategories from './main/productCategories/ProductCategories';\n// import Areas from './main/areas/Areas'\n// import Users from './main/users/Users'\n// import RolesAndPermissions from './main/rolesAndPermissions/RolesAndPermissions'\n// import SalesOrReturn from './main/salesOrReturn/SalesOrReturn';\n// import Inventory from './main/inventory/Inventory';\n// import { AbilityContext } from \"../configs/Ability-context\";\n// import defineRulesFor from \"../configs/Ability\";\n// import { Ability } from \"@casl/ability\";\n\n\n// const ability = new Ability();\n\nclass Content extends Component {\n    constructor() {\n        super();\n        this.state = {\n            date: new Date(),\n            // value=\"admin\"\n        };\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick = () => {\n        this.setState({ date: new Date() });\n    }\n    changeUser = (x) => {\n        console.log('ok');\n\n        // var user1;\n        // switch (x) {\n        //     case '8':\n        //         user1 = 'superAdmin'\n        //         break;\n        //     case '4':\n        //         user1 = 'admin'\n        //         break;\n        //     case '7':\n        //         user1 = 'operator'\n        //         break;\n        //     case '5':\n        //         user1 = 'endUser'\n        //         break;\n        // }\n        // const rules = defineRulesFor(user1);\n        // ability.update(rules);\n        // // this.setState({\n        // //     value: user1\n        // // });\n        this.props.callNavs();\n\n    }\n    render() {\n\n        return (\n\n            <div style={{}} className=\"container-fluid\">\n                {/* <AbilityContext.Provider value={ability}> */}\n                    <Switch>\n                        {/* <Route path=\"/home\" render={() => this.state.loggedIn ? <Home /> : <Redirect to='/login' />} /> */}\n                        <PropsRoute  path='/' component={SecuredLogin} changeUser={this.changeUser} />\n                        <PropsRoute path=\"/login\" component={SecuredLogin} changeUser={this.changeUser} />\n                        <Route path=\"/home\" component={SecuredHome} />\n                        {/* <PropsRoute path=\"/inventory\" component={Inventory} date={this.state.date} />\n                        <PropsRoute path='/customers' component={Customers} date={this.state.date} />\n                        <PropsRoute path='/priceGroups' component={PriceGroups} date={this.state.date} />\n                        <PropsRoute path='/drivers' component={Drivers} date={this.state.date} />\n                        <PropsRoute path='/routes' component={Routes} date={this.state.date} />\n                        <PropsRoute path='/products' component={Products} date={this.state.date} />\n                        <PropsRoute path='/productCategories' component={ProductCategories} date={this.state.date} />\n                        <PropsRoute path='/areas' component={Areas} date={this.state.date} />\n                        <PropsRoute path='/users' component={Users} date={this.state.date} />\n                        <PropsRoute path='/rolesAndPermissions' component={RolesAndPermissions} date={this.state.date} />\n                    <PropsRoute path='/salesOrReturn' component={SalesOrReturn} date={this.state.date} /> */}\n                        <Route path='/' component={NotFound} pt='186px' pb='185px' class={'sol-sm-12'} />\n                    </Switch>\n                {/* </AbilityContext.Provider> */}\n            </div>\n\n        )\n    }\n}\n\n\nexport default Content"]},"metadata":{},"sourceType":"module"}