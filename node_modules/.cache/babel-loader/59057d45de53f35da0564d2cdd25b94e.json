{"ast":null,"code":"import { AbilityBuilder } from \"@casl/ability\";\nexport default function defineRulesFor(role) {\n  const _AbilityBuilder$extra = AbilityBuilder.extract(),\n        can = _AbilityBuilder$extra.can,\n        rules = _AbilityBuilder$extra.rules;\n\n  switch (role) {\n    // case \"superAdmin\":\n    //     can(\"manage\", \"all\");\n    //     break;\n    case \"admin\":\n      can(\"manage\", \"all\"); // can(\"read\", \"all\");\n      // can(\"delete\", \"all\");\n      // can(\"update\", \"all\");\n      // can(\"create\", \"all\");\n\n      break;\n\n    case \"operator\":\n      can(\"read\", \"user\");\n      can(\"read\", \"order\");\n      break;\n    // case \"endUser\":\n    //     can(\"read\", \"all\");\n    //     break;\n\n    default:\n      can(\"read\", \"all\");\n  }\n\n  return rules;\n} // import { AbilityBuilder } from '@casl/ability'\n// const superAdmin = AbilityBuilder.define(can => {\n//     can('manage', 'all')\n// });\n// const admin = AbilityBuilder.define((can, cannot) => {\n//     can('read', 'all')\n//     can('delete', 'all')\n//     cannot('update', 'user')\n//     cannot('create', 'customer')\n// });\n// const operator = AbilityBuilder.define(can => {\n//     can('read', 'all')\n//     can('create', 'all')\n// });\n// const endUser = AbilityBuilder.define(can => {\n//     can('read', 'all')\n// });\n// const ABILITIES = { superAdmin, admin, operator, endUser }\n// export default ABILITIES","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\configs\\Ability.js"],"names":["AbilityBuilder","defineRulesFor","role","extract","can","rules"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAAA,gCAClBF,cAAc,CAACG,OAAf,EADkB;AAAA,QACjCC,GADiC,yBACjCA,GADiC;AAAA,QAC5BC,KAD4B,yBAC5BA,KAD4B;;AAEzC,UAAQH,IAAR;AACI;AACA;AACA;AACA,SAAK,OAAL;AACIE,MAAAA,GAAG,CAAC,QAAD,EAAW,KAAX,CAAH,CADJ,CAEI;AACA;AACA;AACA;;AACA;;AACJ,SAAK,UAAL;AACIA,MAAAA,GAAG,CAAC,MAAD,EAAS,MAAT,CAAH;AACAA,MAAAA,GAAG,CAAC,MAAD,EAAS,OAAT,CAAH;AACA;AACJ;AACA;AACA;;AACA;AACIA,MAAAA,GAAG,CAAC,MAAD,EAAS,KAAT,CAAH;AAnBR;;AAqBA,SAAOC,KAAP;AACH,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { AbilityBuilder } from \"@casl/ability\";\r\nexport default function defineRulesFor(role) {\r\n    const { can, rules } = AbilityBuilder.extract();\r\n    switch (role) {\r\n        // case \"superAdmin\":\r\n        //     can(\"manage\", \"all\");\r\n        //     break;\r\n        case \"admin\":\r\n            can(\"manage\", \"all\");\r\n            // can(\"read\", \"all\");\r\n            // can(\"delete\", \"all\");\r\n            // can(\"update\", \"all\");\r\n            // can(\"create\", \"all\");\r\n            break;\r\n        case \"operator\":\r\n            can(\"read\", \"user\");\r\n            can(\"read\", \"order\");\r\n            break;\r\n        // case \"endUser\":\r\n        //     can(\"read\", \"all\");\r\n        //     break;\r\n        default:\r\n            can(\"read\", \"all\");\r\n    }\r\n    return rules;\r\n}\r\n\r\n// import { AbilityBuilder } from '@casl/ability'\r\n\r\n// const superAdmin = AbilityBuilder.define(can => {\r\n//     can('manage', 'all')\r\n// });\r\n\r\n// const admin = AbilityBuilder.define((can, cannot) => {\r\n//     can('read', 'all')\r\n//     can('delete', 'all')\r\n//     cannot('update', 'user')\r\n//     cannot('create', 'customer')\r\n// });\r\n// const operator = AbilityBuilder.define(can => {\r\n//     can('read', 'all')\r\n//     can('create', 'all')\r\n\r\n// });\r\n\r\n// const endUser = AbilityBuilder.define(can => {\r\n//     can('read', 'all')\r\n// });\r\n// const ABILITIES = { superAdmin, admin, operator, endUser }\r\n// export default ABILITIES"]},"metadata":{},"sourceType":"module"}