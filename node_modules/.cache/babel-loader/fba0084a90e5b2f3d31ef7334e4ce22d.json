{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\users\\\\pages\\\\AllUsers.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\nimport EditUserModal from './EditUserModal';\nimport DeleteModal from '../../misc/sections/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\n\nvar AllUsers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllUsers, _Component);\n\n  function AllUsers() {\n    var _this;\n\n    _classCallCheck(this, AllUsers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllUsers).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleEdit = function (id) {\n      return function (e) {\n        _this.refs.editUserModal.setState({\n          modalShow: true\n        });\n\n        _this.refs.editUserModal.fetchData(id);\n      };\n    };\n\n    _this.handleDelete = function (id) {\n      return function (e) {\n        var el = e.target;\n        var row = el.closest('tr');\n        var i = row.rowIndex;\n\n        _this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id\n        });\n\n        _this.refs.deleteModal.setState({\n          modalShow: true\n        });\n      };\n    };\n\n    _this.deleteUser = function () {\n      var rowToBeDeleted = _this.state.rowToBeDeleted;\n      var dRowValue = _this.state.dRowValue;\n      document.getElementById('usersTable').deleteRow(rowToBeDeleted);\n      var user = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteUser', options).then(function (res) {\n        return res.json();\n      }).then(function (json) {// console.log(json)\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllUsers').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          users: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch('/getAllRoles').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          roles: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      users: [],\n      rowToBeDeleted: '',\n      dRowValue: '',\n      roles: ''\n    };\n    return _this;\n  }\n\n  _createClass(AllUsers, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          users = _this$state.users,\n          roles = _this$state.roles;\n      var rows = [];\n      var index = 0;\n      users.forEach(function (user) {\n        index = index + 1;\n        var currentRole;\n\n        if (roles !== '' && roles !== null && roles !== undefined) {\n          roles.forEach(function (role) {\n            if (role.id === user.role_id) {\n              currentRole = role.name;\n            }\n          });\n        }\n\n        if (currentRole !== 'super_admin') rows.push();\n      });\n      var data = {\n        columns: [{\n          label: '#',\n          field: 'index'\n        }, {\n          label: 'Name',\n          field: 'name'\n        }, {\n          label: 'Email',\n          field: 'email'\n        }, {\n          label: 'Cell',\n          field: 'cell'\n        }, {\n          label: 'Username',\n          field: 'username'\n        }, {\n          label: 'Role',\n          field: 'role'\n        }, {\n          label: 'Action',\n          field: 'buttons'\n        }],\n        rows: rows\n      };\n      return React.createElement(MDBCard, {\n        className: \" p-0\",\n        style: {\n          marginTop: '70px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        style: {\n          color: 'teal'\n        },\n        tag: \"h4\",\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Users\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(MDBDataTable, {\n        id: \"usersTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 12,\n        entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(EditUserModal, {\n        ref: \"editUserModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(DeleteModal, {\n        ref: \"deleteModal\",\n        deleteEntry: this.deleteUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AllUsers;\n}(Component);\n\nexport default AllUsers;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\users\\pages\\AllUsers.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","EditUserModal","DeleteModal","Can","AllUsers","_isMounted","componentWillUnmount","handleEdit","id","e","refs","editUserModal","setState","modalShow","fetchData","handleDelete","el","target","row","closest","i","rowIndex","rowToBeDeleted","dRowValue","deleteModal","deleteUser","state","document","getElementById","deleteRow","user","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","error","console","log","users","data","roles","rows","index","forEach","currentRole","undefined","role","role_id","name","push","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport EditUserModal from './EditUserModal';\r\nimport DeleteModal from '../../misc/sections/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\n\r\n\r\nclass AllUsers extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllUsers')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ users: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            users: [],\r\n            rowToBeDeleted: '',\r\n            dRowValue: '',\r\n            roles: '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.refs.editUserModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.editUserModal.fetchData(id);\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteUser = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('usersTable').deleteRow(rowToBeDeleted)\r\n        let user = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(user),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteUser', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var { users, roles } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n\r\n        users.forEach((user) => {\r\n\r\n            index = index + 1;\r\n            let currentRole;\r\n            if (roles !== '' && roles !== null && roles !== undefined) {\r\n                roles.forEach(role => {\r\n                    if (role.id === user.role_id) {\r\n                        currentRole = role.name\r\n                    }\r\n                });\r\n            }\r\n            if(currentRole !=='super_admin')\r\n            rows.push(\r\n                // {\r\n                //     index: index,\r\n                //     name: user.name,\r\n                //     email: user.email,\r\n                //     cell: user.cell,\r\n                //     username: user.username,\r\n                //     // password: user.password,\r\n                //     role: currentRole,\r\n                //     buttons: <React.Fragment>\r\n                //         <Can I='update' a='user'>\r\n                //             <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit(user.id)} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\r\n                //         </Can>\r\n                //         <Can I='delete' a='user'>\r\n                //             <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete(user.id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                //         </Can>\r\n                //     </React.Fragment>\r\n                // }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                { label: 'Email', field: 'email', }, { label: 'Cell', field: 'cell', },\r\n                { label: 'Username', field: 'username', }, { label: 'Role', field: 'role', },\r\n                { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n\r\n            <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\r\n                <MDBCardHeader style={{color:'teal'}} tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                    Users\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n\r\n                    <MDBDataTable id='usersTable' striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                    <EditUserModal\r\n                        ref='editUserModal'\r\n                    />\r\n                    <DeleteModal\r\n                        ref='deleteModal'\r\n                        deleteEntry={this.deleteUser}\r\n                    />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllUsers"]},"metadata":{},"sourceType":"module"}