{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\NewOrder.jsx\";\nimport React from 'react';\nimport ProductsTable from './sections/ProductsTable';\nimport OrderDetails from './sections/OrderDetails';\nimport { MDBRow } from 'mdbreact';\n\nclass NewOrder extends React.Component {\n  constructor() {\n    super();\n\n    this.addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n    };\n\n    this.deleteProduct = (price, i, pChecked) => {\n      this.refs.orderDetails.minusTotalValue(price);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(price);\n      }\n\n      let table = document.getElementById('productsTable');\n      table.deleteRow(i);\n\n      if (table.rows.length === 1) {\n        this.refs.productsTable.setState({\n          submitOrderBtn: false\n        });\n      }\n    };\n\n    this.checkOrderDetailsValidity = () => {\n      var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\n\n      if (!orderDetailsValidity) {\n        return false;\n      } else if (this.customerForm.checkValidity() === false) {\n        this.customerForm.classList.add('was-validated');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      let orderId = this.orderId.value;\n      let orderDetail = {\n        order_id: orderId,\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked\n      };\n      var options = {\n        method: 'POST',\n        body: JSON.stringify(orderDetails),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/addNewOrderDetails', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error)); // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\n\n      this.refs.orderDetails.minusTotalValue(pPrice);\n\n      if (pChecked === 'Yes') {\n        this.refs.orderDetails.minusTotalValueAdded(pPrice);\n      }\n    };\n\n    this.saveOrderToDB = () => {\n      this.refs.orderDetails.saveOrderToDB();\n    };\n\n    this.minusFromTotal = pPrice => {\n      this.refs.orderDetails.minusTotalValue(pPrice);\n    };\n\n    this.addToTotal = pPrice => {\n      this.refs.orderDetails.addTotalValue(pPrice);\n    };\n\n    this.minusFromTotalValueAdded = pPrice => {\n      this.refs.orderDetails.minusTotalValueAdded(pPrice);\n    };\n\n    this.addToTotalValueAdded = pPrice => {\n      this.refs.orderDetails.addTotalValueAdded(pPrice);\n    };\n\n    this.state = {\n      showOrderDetails: false\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.saveOrderDetailsToDB = this.saveOrderDetailsToDB.bind(this);\n    this.saveOrderToDB = this.saveOrderToDB.bind(this);\n  }\n\n  render() {\n    return React.createElement(MDBRow, {\n      style: {\n        marginTop: '78px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(OrderDetails, {\n      ref: \"orderDetails\",\n      orderId: el => this.orderId = el,\n      orderForm: el => this.orderForm = el,\n      customerForm: el => this.customerForm = el,\n      addProductToTbl: this.addProductToTbl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      className: \"mt-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(ProductsTable, {\n      ref: \"productsTable\",\n      refreshOrdersTable: this.refreshOrdersTable,\n      deleteProduct: this.deleteProduct,\n      saveOrderDetailsToDB: this.saveOrderDetailsToDB,\n      saveOrderToDB: this.saveOrderToDB,\n      checkOrderDetailsValidity: this.checkOrderDetailsValidity,\n      productsTable: el => this.productsTable = el,\n      minusFromTotal: this.minusFromTotal,\n      addToTotal: this.addToTotal,\n      minusFromTotalValueAdded: this.minusFromTotalValueAdded,\n      addToTotalValueAdded: this.addToTotalValueAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewOrder;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\NewOrder.jsx"],"names":["React","ProductsTable","OrderDetails","MDBRow","NewOrder","Component","constructor","addProductToTbl","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","refs","productsTable","deleteProduct","price","i","orderDetails","minusTotalValue","minusTotalValueAdded","table","document","getElementById","deleteRow","rows","length","setState","submitOrderBtn","checkOrderDetailsValidity","orderDetailsValidity","customerForm","checkValidity","classList","add","saveOrderDetailsToDB","orderId","value","orderDetail","order_id","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","catch","error","saveOrderToDB","minusFromTotal","addToTotal","addTotalValue","minusFromTotalValueAdded","addToTotalValueAdded","addTotalValueAdded","state","showOrderDetails","bind","render","marginTop","el","orderForm","refreshOrdersTable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProductsTable from './sections/ProductsTable';\nimport OrderDetails from './sections/OrderDetails';\nimport { MDBRow } from 'mdbreact';\n\n\nclass NewOrder extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showOrderDetails: false\n    };\n    this.addProductToTbl = this.addProductToTbl.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.saveOrderDetailsToDB = this.saveOrderDetailsToDB.bind(this);\n    this.saveOrderToDB = this.saveOrderToDB.bind(this);\n  }\n\n  addProductToTbl = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n    this.refs.productsTable.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n  }\n\n  deleteProduct = (price, i, pChecked) => {\n\n    this.refs.orderDetails.minusTotalValue(price);\n    if (pChecked === 'Yes') {\n      this.refs.orderDetails.minusTotalValueAdded(price);\n    }\n    let table = document.getElementById('productsTable');\n    table.deleteRow(i);\n    if (table.rows.length === 1) {\n      this.refs.productsTable.setState({ submitOrderBtn: false })\n    }\n  }\n\n  checkOrderDetailsValidity = () => {\n    var orderDetailsValidity = this.refs.orderDetails.orderDetailsValidity();\n    if (!orderDetailsValidity) {\n      return false;\n    }\n    else if (this.customerForm.checkValidity() === false) {\n      this.customerForm.classList.add('was-validated');\n      return false;\n    }\n    else {\n      return true;\n    }\n\n  }\n\n  saveOrderDetailsToDB = (pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n\n    let orderId = this.orderId.value;\n    let orderDetail = { order_id: orderId, pName: pName, pSKU: pSKU, pRate: pRate, pQTY: pQTY, pPrice: pPrice, pRemarks: pRemarks, pChecked: pChecked }\n    var options = {\n      method: 'POST',\n      body: JSON.stringify(orderDetails),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('/addNewOrderDetails', options)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n      })\n      .catch((error) => console.log(error))\n    // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked)\n    this.refs.orderDetails.minusTotalValue(pPrice);\n    if (pChecked === 'Yes') {\n      this.refs.orderDetails.minusTotalValueAdded(pPrice);\n    }\n  }\n\n  saveOrderToDB = () => {\n    this.refs.orderDetails.saveOrderToDB();\n  }\n\n  minusFromTotal = (pPrice) => {\n    this.refs.orderDetails.minusTotalValue(pPrice)\n  }\n  addToTotal = (pPrice) => {\n    this.refs.orderDetails.addTotalValue(pPrice)\n  }\n  minusFromTotalValueAdded = (pPrice) => {\n    this.refs.orderDetails.minusTotalValueAdded(pPrice);\n  }\n  addToTotalValueAdded = (pPrice) => {\n    this.refs.orderDetails.addTotalValueAdded(pPrice);\n  }\n\n  render() {\n\n    return (\n      <MDBRow style={{ marginTop: '78px' }}>\n        {/* {this.state.showOrderDetails ? */}\n        <OrderDetails\n          ref='orderDetails'\n          orderId={el => (this.orderId = el)}\n          orderForm={el => (this.orderForm = el)}\n          customerForm={el => (this.customerForm = el)}\n          addProductToTbl={this.addProductToTbl}\n        />\n        {/* : null} */}\n        <MDBRow center className='mt-3 mx-auto'>\n          <ProductsTable\n            ref='productsTable'\n            refreshOrdersTable={this.refreshOrdersTable}\n            deleteProduct={this.deleteProduct}\n            saveOrderDetailsToDB={this.saveOrderDetailsToDB}\n            saveOrderToDB={this.saveOrderToDB}\n            checkOrderDetailsValidity={this.checkOrderDetailsValidity}\n            productsTable={el => (this.productsTable = el)}\n            minusFromTotal={this.minusFromTotal}\n            addToTotal={this.addToTotal}\n            minusFromTotalValueAdded={this.minusFromTotalValueAdded}\n            addToTotalValueAdded={this.addToTotalValueAdded}\n          />\n        </MDBRow>\n      </MDBRow>\n    );\n  }\n}\n\nexport default NewOrder;"]},"metadata":{},"sourceType":"module"}