{"ast":null,"code":"import _objectSpread from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\OrderDetails.jsx\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBRow, MDBCol, MDBContainer } from 'mdbreact';\nimport Select from 'react-select';\nimport CreateableSelect from './CreatableAdvancedSelect';\nconst sourceOptions = [{\n  value: 'facebook',\n  label: 'Facebook'\n}, {\n  value: 'whatsapp1',\n  label: 'WhatsApp 1'\n}, {\n  value: 'whatsapp2',\n  label: 'WhatsApp 2'\n}, {\n  value: 'phone1',\n  label: 'Phone 1'\n}, {\n  value: 'phone2',\n  label: 'Phone 2'\n}, {\n  value: 'website',\n  label: 'Website'\n}, {\n  value: 'imo',\n  label: 'Imo'\n}]; // const statusOptions = [\n//     { value: 'pending', label: 'Pending' },\n//     { value: 'dispatched', label: 'Dispatched' },\n//     { value: 'completed', label: 'Completed' },\n// ];\n\nvar orderTotal = 0;\nvar totalValueAdded = 0;\nvar isValidSource = true;\nvar isValidStatus = true;\n\nclass OrderDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.orderDetailsValidity = () => {\n      if (this.state.orderSource === null) {\n        isValidSource = false;\n        return false;\n      } else if (this.state.orderStatus === null) {\n        isValidStatus = false;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.saveOrderToDB = () => {\n      let source = this.state.orderSource.value;\n      let status = this.state.orderStatus.value;\n      let tracking = this.state.orderTracking;\n      let note = this.state.orderNote;\n      let total = orderTotal;\n      let totalAddedValue = totalValueAdded;\n      let cName = this.state.cName;\n      let cContact = this.state.cContact;\n      let cAddress = this.state.cAddress;\n      let order = {\n        source: source,\n        status: status,\n        tracking: tracking,\n        note: note,\n        total: total,\n        totalAddedValue: totalAddedValue,\n        cName: cName,\n        cContact: cContact,\n        cAddress: cAddress\n      };\n      var options = {\n        method: 'POST',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/addNewOrder', options).then(res => res.json()).then(json => {// console.log(json)\n      }).catch(error => console.log(error));\n      this.setOrderFormsEmpty();\n    };\n\n    this.orderStatus = newValue => {\n      isValidStatus = true;\n      this.setState({\n        orderStatus: newValue\n      });\n    };\n\n    this.setOrderFormsEmpty = () => {\n      this.setState({\n        cName: '',\n        cContact: '',\n        cAddress: '',\n        orderSource: undefined,\n        orderStatus: undefined,\n        orderTracking: '',\n        orderNote: ''\n      });\n      this.refs.createableSelect.setState({\n        value: undefined\n      });\n    };\n\n    this.handleSelectChange = selectedOption => {\n      isValidSource = true;\n      this.setState({\n        orderSource: selectedOption\n      });\n    };\n\n    this.setTotalValue = value => {\n      orderTotal = orderTotal - parseInt(value);\n    };\n\n    this.setTotalValueAdded = value => {\n      totalValueAdded = totalValueAdded - parseInt(value);\n    };\n\n    this.fetchOrderId = () => {\n      let currentComponent = this;\n      fetch('/getLastOrderID').then(res => res.json()).then(function (json) {\n        // console.log(json)\n        if (json.data.length != 0) {\n          var lastOrderID = json.data.shift();\n          let id = lastOrderID.id;\n          currentComponent.orderId = id + 1;\n          currentComponent.setState({\n            orderId: id + 1\n          });\n        } else {\n          currentComponent.orderId = 1;\n        }\n      }).catch(error => console.log(error));\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleAddProduct = e => {\n      e.preventDefault();\n      let form = this.refs.productForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        let pName = this.state.pName;\n        let pSKU = this.state.pSKU;\n        let pRate = this.state.pRate;\n        let pQTY = this.state.pQTY;\n        let pPrice = this.pPrice.value;\n        let pRemarks = this.state.pRemarks;\n        let pChecked = this.checkbox.checked ? true : false;\n        this.props.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n        orderTotal = orderTotal + parseInt(pPrice);\n\n        if (pChecked) {\n          totalValueAdded = totalValueAdded + parseInt(pPrice);\n        }\n\n        this.setState({\n          pName: '',\n          pSKU: '',\n          pRate: '',\n          pQTY: '',\n          pRemarks: ''\n        });\n        this.checkbox.checked = false;\n      }\n    };\n\n    this.orderId = '';\n    this.state = {\n      orderSource: {\n        label: 'Website',\n        value: 'website'\n      },\n      orderStatus: {\n        label: 'Pending',\n        value: 'pending'\n      },\n      orderTracking: '',\n      orderNote: '',\n      cName: '',\n      cContact: '',\n      cAddress: '',\n      pName: '',\n      pSKU: '',\n      pRate: '',\n      pQTY: '',\n      pRemarks: '',\n      orderId: ''\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.fetchOrderId = this.fetchOrderId.bind(this);\n    this.handleAddProduct = this.handleAddProduct.bind(this);\n    this.setOrderFormsEmpty = this.setOrderFormsEmpty.bind(this);\n    this.orderStatus = this.orderStatus.bind(this);\n    this.orderDetailsValidity = this.orderDetailsValidity.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchOrderId();\n  }\n\n  render() {\n    const orderSource = this.state.orderSource;\n    const customStyles = {\n      control: (base, state) => _objectSpread({}, base, {\n        borderColor: state.isFocused ? '#ddd' : isValidSource ? '#ddd' : 'red',\n        margin: '0px',\n        padding: '0px'\n      })\n    };\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"10\",\n      className: \"m-0 p-0\",\n      style: {\n        border: '1px solid '\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Order Details\"), React.createElement(MDBRow, {\n      end: true,\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"4\",\n      className: \"m-0 p-0 \",\n      bottom: true,\n      style: {\n        border: '1px solid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"\",\n      style: {\n        border: '1px solid',\n        fontWeight: 'bold',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Order:\")), React.createElement(MDBCol, {\n      sm: \"4\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: orderTotal,\n      label: \"Total\",\n      hint: \"Total\",\n      disabled: true,\n      className: \"m-0\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      sm: \"4\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: totalValueAdded,\n      className: \"m-0\",\n      style: {\n        fontWeight: 'bold'\n      },\n      label: \"Total value added\",\n      hint: \"Total value added\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      className: \"form-inline m-0 p-0\",\n      style: {\n        border: '1px solid '\n      },\n      ref: this.props.orderForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.orderId,\n      inputRef: this.props.orderId,\n      label: \"Id\",\n      outline: true,\n      disabled: true,\n      className: \"mt-0 mb-0\",\n      style: {\n        marginRight: '4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Select, {\n      styles: customStyles,\n      value: orderSource,\n      onChange: this.handleSelectChange,\n      options: sourceOptions,\n      placeholder: \"Source\",\n      isSearchable: true,\n      className: \"mt-0 mb-0\",\n      isClearable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: '211px',\n        marginRight: '4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(CreateableSelect, {\n      ref: \"createableSelect\",\n      orderStatus: this.orderStatus,\n      isValidStatus: isValidStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(MDBInput, {\n      label: \"Tracking Id\",\n      name: \"orderTracking\",\n      onInput: this.handleInput,\n      value: this.state.orderTracking,\n      outline: true,\n      className: \"mt-0 mb-0\",\n      style: {\n        marginRight: '4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Note\",\n      name: \"orderNote\",\n      onInput: this.handleInput,\n      value: this.state.orderNote,\n      outline: true,\n      className: \"mt-0 mb-0\",\n      style: {\n        marginRight: '4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Login\"))))) // <MDBCard className='col-md-12 m-0'>\n    //     <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\n    //         Order Details\n    //     </MDBCardHeader>\n    //     <MDBCardBody className='p-0 m-0'>\n    //         <MDBRow center className='m-0 p-0' >\n    //             <MDBCol sm='4' className='m-0'>\n    //                 <MDBInput value={orderTotal} label=\"Total\" hint=\"Total\" disabled className='mt-0 mb-0' style={{ marginRight: '4px', fontWeight: 'bold' }} />\n    //             </MDBCol>\n    //             <MDBCol sm='4' className='m-0'>\n    //                 <MDBInput value={totalValueAdded} className='mt-0 mb-0' style={{ marginRight: '4px', fontWeight: 'bold' }} label=\"Total value added\" hint=\"Total value added\" disabled />\n    //             </MDBCol>\n    //         </MDBRow>\n    // <form className='form-inline mb-0 mt-0 ml-3 p-0' ref={this.props.orderForm}>\n    //     <div className=' p-0 mr-4' >\n    //         <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Order:</label>\n    //     </div>\n    //     <MDBInput value={this.state.orderId} inputRef={this.props.orderId} label=\"Id\" outline disabled className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //     <div style={{ marginRight: '4px', width: '211px' }}>\n    //         <Select\n    //             styles={customStyles}\n    //             value={orderSource}\n    //             onChange={this.handleSelectChange}\n    //             options={sourceOptions}\n    //             placeholder='Source'\n    //             isSearchable\n    //             className='mt-0 mb-0'\n    //             isClearable\n    //         />\n    //     </div>\n    //     <div style={{ width: '211px', marginRight: '4px' }}>\n    //         <CreateableSelect\n    //             ref='createableSelect'\n    //             orderStatus={this.orderStatus}\n    //             isValidStatus={isValidStatus}\n    //         />\n    //         {/* <Select\n    //                         value={selectedOption}\n    //                         onChange={this.handleSelectChange('orderStatus')}\n    //                         options={statusOptions}\n    //                         placeholder='Status'\n    //                         isSearchable\n    //                         className='mt-0 mb-0'\n    //                         required\n    //                     /> */}\n    //     </div>\n    //     <MDBInput label=\"Tracking Id\" name=\"orderTracking\" onInput={this.handleInput} value={this.state.orderTracking} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //     <MDBInput label=\"Note\" name=\"orderNote\" onInput={this.handleInput} value={this.state.orderNote} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    // </form>\n    //         <form className='form-inline mb-0 mt-0 ml-3' ref={this.props.customerForm} >\n    //             <div className=' p-0 mr-4' >\n    //                 <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Customer:</label>\n    //             </div>\n    //             <MDBInput value={this.state.cName} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Name\" name=\"cName\" onInput={this.handleInput} required validate outline />\n    //             <MDBInput value={this.state.cContact} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Contact\" name=\"cContact\" onInput={this.handleInput} required validate outline />\n    //             <MDBInput value={this.state.cAddress} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Address\" name=\"cAddress\" onInput={this.handleInput} required validate outline />\n    //         </form>\n    //         <form className='form-inline mb-0 mt-0 ml-3' ref='productForm' onSubmit={this.handleAddProduct} noValidate>\n    //             <div className='p-0 mr-4' >\n    //                 <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Product:</label>\n    //             </div>\n    //             <MDBInput value={this.state.pName} type='text' label=\"Name\" name=\"pName\" onInput={this.handleInput} required validate outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput value={this.state.pSKU} type='text' label=\"SKU\" name=\"pSKU\" onInput={this.handleInput} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput value={this.state.pRate} type='number' label=\"Rate\" name=\"pRate\" onInput={this.handleInput} required validate outline min='0' className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput value={this.state.pQTY} type='number' label=\"Qty\" name=\"pQTY\" onInput={this.handleInput} required validate outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput value={this.state.pRate * this.state.pQTY} type='number' label='Price' hint=\"Price\" inputRef={e => { this.pPrice = e }} disabled outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput value={this.state.pRemarks} type='text' label=\"Remarks\" name=\"pRemarks\" onInput={this.handleInput} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\n    //             <MDBInput type='checkbox' inputRef={e => { this.checkbox = e }} className='mt-0 mb-0' filled label='Is Extra added?' />\n    //             <MDBBtn type='submit' size='lg' style={{ width: '50px', height: '40px', padding: '0px', margin: '0px' }} outline>Add</MDBBtn>\n    //         </form>\n    //     </MDBCardBody>\n    // </MDBCard>\n    ;\n  }\n\n}\n\nexport default OrderDetails;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\OrderDetails.jsx"],"names":["React","Component","MDBInput","MDBBtn","MDBCard","MDBCardHeader","MDBCardBody","MDBRow","MDBCol","MDBContainer","Select","CreateableSelect","sourceOptions","value","label","orderTotal","totalValueAdded","isValidSource","isValidStatus","OrderDetails","constructor","props","orderDetailsValidity","state","orderSource","orderStatus","saveOrderToDB","source","status","tracking","orderTracking","note","orderNote","total","totalAddedValue","cName","cContact","cAddress","order","options","method","body","JSON","stringify","headers","fetch","then","res","json","catch","error","console","log","setOrderFormsEmpty","newValue","setState","undefined","refs","createableSelect","handleSelectChange","selectedOption","setTotalValue","parseInt","setTotalValueAdded","fetchOrderId","currentComponent","data","length","lastOrderID","shift","id","orderId","handleInput","e","target","name","handleAddProduct","preventDefault","form","productForm","checkValidity","classList","add","pName","pSKU","pRate","pQTY","pPrice","pRemarks","pChecked","checkbox","checked","addProductToTbl","bind","componentDidMount","render","customStyles","control","base","borderColor","isFocused","margin","padding","border","fontWeight","textAlign","orderForm","marginRight","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBInput, MDBBtn, MDBCard, MDBCardHeader, MDBCardBody, MDBRow, MDBCol, MDBContainer } from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport CreateableSelect from './CreatableAdvancedSelect';\r\n\r\n\r\n\r\nconst sourceOptions = [\r\n    { value: 'facebook', label: 'Facebook' },\r\n    { value: 'whatsapp1', label: 'WhatsApp 1' },\r\n    { value: 'whatsapp2', label: 'WhatsApp 2' },\r\n    { value: 'phone1', label: 'Phone 1' },\r\n    { value: 'phone2', label: 'Phone 2' },\r\n    { value: 'website', label: 'Website' },\r\n    { value: 'imo', label: 'Imo' },\r\n];\r\n// const statusOptions = [\r\n//     { value: 'pending', label: 'Pending' },\r\n//     { value: 'dispatched', label: 'Dispatched' },\r\n//     { value: 'completed', label: 'Completed' },\r\n// ];\r\nvar orderTotal = 0;\r\nvar totalValueAdded = 0;\r\nvar isValidSource = true;\r\nvar isValidStatus = true;\r\nclass OrderDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.orderId = '';\r\n        this.state = {\r\n            orderSource: { label: 'Website', value: 'website' },\r\n            orderStatus: { label: 'Pending', value: 'pending' },\r\n            orderTracking: '',\r\n            orderNote: '',\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n            pName: '',\r\n            pSKU: '',\r\n            pRate: '',\r\n            pQTY: '',\r\n            pRemarks: '',\r\n            orderId: ''\r\n        }\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.fetchOrderId = this.fetchOrderId.bind(this);\r\n        this.handleAddProduct = this.handleAddProduct.bind(this);\r\n        this.setOrderFormsEmpty = this.setOrderFormsEmpty.bind(this);\r\n        this.orderStatus = this.orderStatus.bind(this)\r\n        this.orderDetailsValidity = this.orderDetailsValidity.bind(this);\r\n    }\r\n    orderDetailsValidity = () => {\r\n        if (this.state.orderSource === null) {\r\n            isValidSource = false\r\n            return false;\r\n        }\r\n        else if (this.state.orderStatus === null) {\r\n            isValidStatus = false\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    saveOrderToDB = () => {\r\n        let source = this.state.orderSource.value;\r\n        let status = this.state.orderStatus.value;\r\n        let tracking = this.state.orderTracking;\r\n        let note = this.state.orderNote;\r\n        let total = orderTotal;\r\n        let totalAddedValue = totalValueAdded;\r\n        let cName = this.state.cName;\r\n        let cContact = this.state.cContact;\r\n        let cAddress = this.state.cAddress;\r\n        let order = {\r\n            source: source, status: status, tracking: tracking,\r\n            note: note, total: total, totalAddedValue: totalAddedValue,\r\n            cName: cName, cContact: cContact, cAddress: cAddress\r\n        }\r\n\r\n        var options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(order),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/addNewOrder', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.setOrderFormsEmpty();\r\n    }\r\n\r\n    orderStatus = (newValue) => {\r\n        isValidStatus = true\r\n        this.setState({ orderStatus: newValue })\r\n\r\n    }\r\n\r\n    setOrderFormsEmpty = () => {\r\n        this.setState({\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n            orderSource: undefined,\r\n            orderStatus: undefined,\r\n            orderTracking: '',\r\n            orderNote: ''\r\n        })\r\n        this.refs.createableSelect.setState({ value: undefined })\r\n    }\r\n\r\n    handleSelectChange = selectedOption => {\r\n        isValidSource = true\r\n        this.setState({ orderSource: selectedOption })\r\n\r\n    }\r\n\r\n    setTotalValue = (value) => {\r\n        orderTotal = orderTotal - parseInt(value)\r\n    }\r\n    setTotalValueAdded = (value) => {\r\n        totalValueAdded = totalValueAdded - parseInt(value)\r\n    }\r\n\r\n    fetchOrderId = () => {\r\n        let currentComponent = this;\r\n        fetch('/getLastOrderID')\r\n            .then((res) => res.json())\r\n            .then(function (json) {\r\n                // console.log(json)\r\n                if (json.data.length != 0) {\r\n                    var lastOrderID = json.data.shift();\r\n                    let id = lastOrderID.id;\r\n                    currentComponent.orderId = id + 1;\r\n                    currentComponent.setState({ orderId: id + 1 })\r\n                }\r\n                else {\r\n                    currentComponent.orderId = 1\r\n                }\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddProduct = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.productForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else {\r\n            let pName = this.state.pName;\r\n            let pSKU = this.state.pSKU;\r\n            let pRate = this.state.pRate;\r\n            let pQTY = this.state.pQTY\r\n            let pPrice = this.pPrice.value;\r\n            let pRemarks = this.state.pRemarks;\r\n            let pChecked = (this.checkbox.checked) ? true : false\r\n            this.props.addProductToTbl(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\r\n            orderTotal = orderTotal + parseInt(pPrice)\r\n            if (pChecked) {\r\n                totalValueAdded = totalValueAdded + parseInt(pPrice)\r\n            }\r\n            this.setState({\r\n                pName: '',\r\n                pSKU: '',\r\n                pRate: '',\r\n                pQTY: '',\r\n                pRemarks: ''\r\n            })\r\n            this.checkbox.checked = false;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchOrderId();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { orderSource } = this.state\r\n        const customStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : isValidSource ?\r\n                        '#ddd' : 'red',\r\n                margin: '0px',\r\n                padding:'0px'\r\n\r\n            })\r\n        }\r\n\r\n\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow center>\r\n                    <MDBCol md=\"10\" className='m-0 p-0' style={{ border: '1px solid ' }}>\r\n                        <p className=\"h4 text-center m-0\">Order Details</p>\r\n                        <MDBRow end className='m-0 p-0' >\r\n                            <MDBCol sm='4' className='m-0 p-0 ' bottom style={{ border: '1px solid' }}>\r\n                                <label className='' style={{ border: '1px solid', fontWeight: 'bold', textAlign: 'left' }}>Order:</label>\r\n                            </MDBCol>\r\n                            <MDBCol sm='4' className='m-0'>\r\n                                <MDBInput value={orderTotal} label=\"Total\" hint=\"Total\" disabled className='m-0' style={{ fontWeight: 'bold' }} />\r\n                            </MDBCol>\r\n                            <MDBCol sm='4' className='m-0'>\r\n                                <MDBInput value={totalValueAdded} className='m-0' style={{ fontWeight: 'bold' }} label=\"Total value added\" hint=\"Total value added\" disabled />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <form className='form-inline m-0 p-0' style={{ border: '1px solid ' }} ref={this.props.orderForm}>\r\n                            <div className='form-row m-0 p-0'>\r\n\r\n\r\n                                <MDBInput value={this.state.orderId} inputRef={this.props.orderId} label=\"Id\" outline disabled className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n                                {/* <div className='m-0 p-0' style={{ border:'1px solid red', width: '211px' }}> */}\r\n                                <React.Fragment>\r\n\r\n                                    <Select\r\n                                        styles={customStyles}\r\n                                        value={orderSource}\r\n                                        onChange={this.handleSelectChange}\r\n                                        options={sourceOptions}\r\n                                        placeholder='Source'\r\n                                        isSearchable\r\n                                        className='mt-0 mb-0'\r\n                                        isClearable\r\n                                    />\r\n                                </React.Fragment>\r\n                                {/* </div> */}\r\n                                <div style={{ width: '211px', marginRight: '4px' }}>\r\n                                    <CreateableSelect\r\n                                        ref='createableSelect'\r\n                                        orderStatus={this.orderStatus}\r\n                                        isValidStatus={isValidStatus}\r\n                                    />\r\n                                    {/* <Select\r\n                                    value={selectedOption}\r\n                                    onChange={this.handleSelectChange('orderStatus')}\r\n                                    options={statusOptions}\r\n                                    placeholder='Status'\r\n                                    isSearchable\r\n                                    className='mt-0 mb-0'\r\n                                    required\r\n                                /> */}\r\n                                </div>\r\n                                <MDBInput label=\"Tracking Id\" name=\"orderTracking\" onInput={this.handleInput} value={this.state.orderTracking} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n                                <MDBInput label=\"Note\" name=\"orderNote\" onInput={this.handleInput} value={this.state.orderNote} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn>Login</MDBBtn>\r\n                        </div>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n            // <MDBCard className='col-md-12 m-0'>\r\n            //     <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n            //         Order Details\r\n            //     </MDBCardHeader>\r\n            //     <MDBCardBody className='p-0 m-0'>\r\n            //         <MDBRow center className='m-0 p-0' >\r\n            //             <MDBCol sm='4' className='m-0'>\r\n            //                 <MDBInput value={orderTotal} label=\"Total\" hint=\"Total\" disabled className='mt-0 mb-0' style={{ marginRight: '4px', fontWeight: 'bold' }} />\r\n            //             </MDBCol>\r\n            //             <MDBCol sm='4' className='m-0'>\r\n            //                 <MDBInput value={totalValueAdded} className='mt-0 mb-0' style={{ marginRight: '4px', fontWeight: 'bold' }} label=\"Total value added\" hint=\"Total value added\" disabled />\r\n            //             </MDBCol>\r\n            //         </MDBRow>\r\n            // <form className='form-inline mb-0 mt-0 ml-3 p-0' ref={this.props.orderForm}>\r\n            //     <div className=' p-0 mr-4' >\r\n            //         <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Order:</label>\r\n            //     </div>\r\n            //     <MDBInput value={this.state.orderId} inputRef={this.props.orderId} label=\"Id\" outline disabled className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //     <div style={{ marginRight: '4px', width: '211px' }}>\r\n\r\n            //         <Select\r\n            //             styles={customStyles}\r\n            //             value={orderSource}\r\n            //             onChange={this.handleSelectChange}\r\n            //             options={sourceOptions}\r\n            //             placeholder='Source'\r\n            //             isSearchable\r\n            //             className='mt-0 mb-0'\r\n            //             isClearable\r\n            //         />\r\n            //     </div>\r\n            //     <div style={{ width: '211px', marginRight: '4px' }}>\r\n            //         <CreateableSelect\r\n            //             ref='createableSelect'\r\n            //             orderStatus={this.orderStatus}\r\n            //             isValidStatus={isValidStatus}\r\n            //         />\r\n            //         {/* <Select\r\n            //                         value={selectedOption}\r\n            //                         onChange={this.handleSelectChange('orderStatus')}\r\n            //                         options={statusOptions}\r\n            //                         placeholder='Status'\r\n            //                         isSearchable\r\n            //                         className='mt-0 mb-0'\r\n            //                         required\r\n            //                     /> */}\r\n            //     </div>\r\n            //     <MDBInput label=\"Tracking Id\" name=\"orderTracking\" onInput={this.handleInput} value={this.state.orderTracking} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //     <MDBInput label=\"Note\" name=\"orderNote\" onInput={this.handleInput} value={this.state.orderNote} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            // </form>\r\n\r\n            //         <form className='form-inline mb-0 mt-0 ml-3' ref={this.props.customerForm} >\r\n            //             <div className=' p-0 mr-4' >\r\n            //                 <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Customer:</label>\r\n            //             </div>\r\n\r\n            //             <MDBInput value={this.state.cName} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Name\" name=\"cName\" onInput={this.handleInput} required validate outline />\r\n            //             <MDBInput value={this.state.cContact} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Contact\" name=\"cContact\" onInput={this.handleInput} required validate outline />\r\n            //             <MDBInput value={this.state.cAddress} className='mt-0 mb-0' style={{ marginRight: '4px' }} label=\"Address\" name=\"cAddress\" onInput={this.handleInput} required validate outline />\r\n            //         </form>\r\n            //         <form className='form-inline mb-0 mt-0 ml-3' ref='productForm' onSubmit={this.handleAddProduct} noValidate>\r\n\r\n            //             <div className='p-0 mr-4' >\r\n            //                 <label className='' style={{ fontWeight: 'bold', textAlign: 'left' }}>Product:</label>\r\n            //             </div>\r\n\r\n            //             <MDBInput value={this.state.pName} type='text' label=\"Name\" name=\"pName\" onInput={this.handleInput} required validate outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput value={this.state.pSKU} type='text' label=\"SKU\" name=\"pSKU\" onInput={this.handleInput} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput value={this.state.pRate} type='number' label=\"Rate\" name=\"pRate\" onInput={this.handleInput} required validate outline min='0' className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput value={this.state.pQTY} type='number' label=\"Qty\" name=\"pQTY\" onInput={this.handleInput} required validate outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput value={this.state.pRate * this.state.pQTY} type='number' label='Price' hint=\"Price\" inputRef={e => { this.pPrice = e }} disabled outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput value={this.state.pRemarks} type='text' label=\"Remarks\" name=\"pRemarks\" onInput={this.handleInput} outline className='mt-0 mb-0' style={{ marginRight: '4px' }} />\r\n            //             <MDBInput type='checkbox' inputRef={e => { this.checkbox = e }} className='mt-0 mb-0' filled label='Is Extra added?' />\r\n            //             <MDBBtn type='submit' size='lg' style={{ width: '50px', height: '40px', padding: '0px', margin: '0px' }} outline>Add</MDBBtn>\r\n            //         </form>\r\n            //     </MDBCardBody>\r\n            // </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderDetails"]},"metadata":{},"sourceType":"module"}