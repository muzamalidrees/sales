{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\nimport { Link } from 'react-router-dom';\nimport ViewOrderModal from './sections/ViewOrderModal';\nimport EditOrderModal from './sections/EditOrderModal';\nimport DeleteModal from './sections/DeleteModal';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n    };\n\n    this.handleView = id => e => {\n      let el = e.target;\n      let row = el.closest('tr');\n      this.refs.viewOrderModal.setState({\n        modalShow: true\n      });\n      this.refs.viewOrderModal.fetchData(id);\n    };\n\n    this.handleEdit = id => e => {\n      let el = e.target;\n      let row = el.closest('tr');\n      let id = row.cells[11].innerHTML;\n      this.refs.editOrderModal.setState({\n        modalShow: true\n      });\n      this.refs.editOrderModal.fetchData(id);\n    };\n\n    this.handleDelete = e => {\n      let el = e.target;\n      let row = el.closest('tr');\n      var i = row.rowIndex;\n      let dRowValue = row.cells[11].innerHTML;\n      this.setState({\n        rowToBeDeleted: i,\n        dRowValue: dRowValue\n      });\n      this.refs.deleteModal.setState({\n        modalShow: true\n      });\n    };\n\n    this.deleteOrder = () => {\n      let rowToBeDeleted = this.state.rowToBeDeleted;\n      let dRowValue = this.state.dRowValue;\n      document.getElementById('ordersTable').deleteRow(rowToBeDeleted);\n      let order = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteOrder', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this.componentDidMount = () => {\n      let table = document.getElementById('ordersTable'); // console.log(table);\n\n      if (table !== null) {\n        console.log(table.rows);\n        console.log(table.childNodes[1]); // table.childNodes[1].forEach(node => {\n        //     console.log('ok');\n        // });\n\n        if (table.children[1].children[2] !== undefined) {\n          console.log('ok');\n        } // console.log(table.rows[1].children);\n        // console.log(table.rows[1].cells);\n        // console.log(table.rows[0]);\n        // console.log(table.rows[1]);\n        // console.log(table.rows[1].children[11].style);\n        // table.rows[1].children[11].style.display = 'none'\n        // table.rows[1].cells[11].style.display = 'none'\n\n      }\n    };\n\n    this._isMounted = true;\n    fetch('/getAllOrders').then(res => res.json()).then(json => {\n      // console.log(json)\n      if (this._isMounted) {\n        this.setState({\n          orders: json.data\n        });\n      }\n    }).catch(error => console.log(error));\n    this.state = {\n      orders: [],\n      rowToBeDeleted: '',\n      dRowValue: ''\n    };\n  }\n\n  render() {\n    var orders = this.state.orders;\n    var rows = [];\n    var index = 0;\n    orders.forEach(order => {\n      index = index + 1;\n      rows.push({\n        index: index,\n        order_id: order.order_id,\n        date: order.date,\n        cName: order.customer_name,\n        cContact: order.customer_contact,\n        cAddress: order.customer_address,\n        total: order.total,\n        tracking: order.tracking_id,\n        note: order.note,\n        status: order.status,\n        buttons: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleView(order.id),\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"info\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })), React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleEdit,\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"teal\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"pencil-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        })), React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleDelete,\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"red darken-3\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }))),\n        id: order.id\n      });\n    });\n    var data = {\n      columns: [{\n        label: '#',\n        field: 'index'\n      }, {\n        label: 'Order_Id',\n        field: 'order_id'\n      }, {\n        label: 'Date',\n        field: 'date'\n      }, {\n        label: 'Customer Name',\n        field: 'cName'\n      }, {\n        label: 'Customer Contact',\n        field: 'cContact'\n      }, {\n        label: 'Customer Address',\n        field: 'cAddress'\n      }, {\n        label: 'Total',\n        field: 'total'\n      }, {\n        label: 'Tracking Id',\n        field: 'tracking'\n      }, {\n        label: 'Note',\n        field: 'note'\n      }, {\n        label: 'Status',\n        field: 'status'\n      }, {\n        label: 'Action',\n        field: 'buttons'\n      }, {\n        label: '',\n        field: 'id'\n      }],\n      rows: rows\n    };\n    return React.createElement(MDBCard, {\n      className: \" p-0\",\n      style: {\n        marginTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Orders\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      className: \"m-0 font-weight-bold\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/newOrder\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Add New Order\")), React.createElement(MDBDataTable, {\n      id: \"ordersTable\",\n      striped: true,\n      small: true,\n      hover: true,\n      theadColor: \"teal\",\n      bordered: true,\n      btn: true,\n      entries: 8,\n      entriesOptions: [10, 20, 35, 55, 70, 100, 135],\n      responsive: true,\n      data: data,\n      theadTextWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(ViewOrderModal, {\n      ref: \"viewOrderModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(EditOrderModal, {\n      ref: \"editOrderModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(DeleteModal, {\n      ref: \"deleteModal\",\n      deleteEntry: this.deleteOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\Home.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","Link","ViewOrderModal","EditOrderModal","DeleteModal","Home","constructor","_isMounted","componentWillUnmount","handleView","id","e","el","target","row","closest","refs","viewOrderModal","setState","modalShow","fetchData","handleEdit","cells","innerHTML","editOrderModal","handleDelete","i","rowIndex","dRowValue","rowToBeDeleted","deleteModal","deleteOrder","state","document","getElementById","deleteRow","order","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","catch","error","componentDidMount","table","rows","childNodes","children","undefined","orders","data","render","index","forEach","push","order_id","date","cName","customer_name","cContact","customer_contact","cAddress","customer_address","total","tracking","tracking_id","note","status","buttons","fontSize","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { Link } from 'react-router-dom'\r\nimport ViewOrderModal from './sections/ViewOrderModal';\r\nimport EditOrderModal from './sections/EditOrderModal';\r\nimport DeleteModal from './sections/DeleteModal';\r\n\r\n\r\nclass Home extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllOrders',\r\n        )\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ orders: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orders: [],\r\n            rowToBeDeleted: '',\r\n            dRowValue: ''\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleView = (id) => e => {\r\n\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n\r\n        this.refs.viewOrderModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.viewOrderModal.fetchData(id);\r\n    }\r\n\r\n    handleEdit = (id) => e => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n\r\n        let id = row.cells[11].innerHTML\r\n\r\n        this.refs.editOrderModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.editOrderModal.fetchData(id);\r\n\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        let dRowValue = row.cells[11].innerHTML\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: dRowValue\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n\r\n        })\r\n    }\r\n\r\n    deleteOrder = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('ordersTable').deleteRow(rowToBeDeleted)\r\n        let order = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(order),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteOrder', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let table = document.getElementById('ordersTable')\r\n        // console.log(table);\r\n        if (table !== null) {\r\n            console.log(table.rows);\r\n            console.log(table.childNodes[1]);\r\n            // table.childNodes[1].forEach(node => {\r\n            //     console.log('ok');\r\n\r\n            // });\r\n            if (table.children[1].children[2] !== undefined) {\r\n                console.log('ok');\r\n\r\n            }\r\n            // console.log(table.rows[1].children);\r\n            // console.log(table.rows[1].cells);\r\n            // console.log(table.rows[0]);\r\n            // console.log(table.rows[1]);\r\n            // console.log(table.rows[1].children[11].style);\r\n            // table.rows[1].children[11].style.display = 'none'\r\n            // table.rows[1].cells[11].style.display = 'none'\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { orders } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n        orders.forEach((order) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    order_id: order.order_id,\r\n                    date: order.date,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_address,\r\n                    total: order.total,\r\n                    tracking: order.tracking_id,\r\n                    note: order.note,\r\n                    status: order.status,\r\n                    buttons: <React.Fragment>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleView(order.id)} className='m-1 py-1 px-2' outline color='info' size=\"sm\"><MDBIcon icon=\"eye\" /></MDBBtn>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                    </React.Fragment>,\r\n                    id: order.id,\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Order_Id', field: 'order_id', }, { label: 'Date', field: 'date', },\r\n                { label: 'Customer Name', field: 'cName' }, { label: 'Customer Contact', field: 'cContact', },\r\n                { label: 'Customer Address', field: 'cAddress', }, { label: 'Total', field: 'total', },\r\n                { label: 'Tracking Id', field: 'tracking', }, { label: 'Note', field: 'note', },\r\n                { label: 'Status', field: 'status', }, { label: 'Action', field: 'buttons' }, { label: '', field: 'id', },\r\n            ],\r\n            rows: rows\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\r\n                <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                    Orders\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n                    <MDBBtn className='m-0 font-weight-bold' color='secondary' >\r\n                        <Link to='/newOrder' style={{ color: 'white' }}>\r\n                            Add New Order\r\n                        </Link>\r\n                    </MDBBtn>\r\n                    <MDBDataTable id='ordersTable' striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={8} entriesOptions={[10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                    <ViewOrderModal\r\n                        ref='viewOrderModal'\r\n                    />\r\n                    <EditOrderModal\r\n                        ref='editOrderModal'\r\n                    />\r\n                    <DeleteModal\r\n                        ref='deleteModal'\r\n                        deleteEntry={this.deleteOrder}\r\n                    />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}