{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\AllOrdersTable.jsx\";\nimport React, { Component } from 'react';\nimport OTableRow from './OTableRow';\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn } from 'mdbreact';\n\nclass AllOrdersTable extends Component {\n  constructor() {\n    super();\n\n    this.refreshOrdersTable = () => {\n      console.log('ok');\n      this.setState();\n    };\n\n    fetch('/getAllOrders').then(res => res.json()).then(json => {\n      console.log(json); // if (this._isMounted) {\n\n      this.setState({\n        showTable: true,\n        orders: json.data\n      }); // }\n    }).catch(error => console.log(error));\n    this.state = {\n      orders: []\n    };\n    this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\n  }\n\n  render() {\n    // const searchText = this.props.searchText;\n    // const searchFilter = this.props.searchFilter;\n    var orders = this.state.orders;\n    var rows = [];\n    var index = 0;\n    orders.forEach(order => {\n      // if (searchResult[searchFilter].indexOf(searchText) === -1) {\n      //     return;\n      // }\n      index = index + 1;\n      rows.push(React.createElement(OTableRow, {\n        index: index,\n        order: order,\n        key: order.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(MDBCard, {\n      className: \"col p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Orders\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(MDBTable, {\n      id: \"ordersTable\",\n      striped: true,\n      responsive: true,\n      bordered: true,\n      autoWidth: true,\n      scrollY: true,\n      maxHeight: \"360px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      color: \"teal\",\n      textWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sr.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Customer Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Total Value Added\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Tracking Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Note\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Status\"))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, rows))));\n  }\n\n}\n\nexport default AllOrdersTable;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\AllOrdersTable.jsx"],"names":["React","Component","OTableRow","MDBTable","MDBTableHead","MDBTableBody","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","AllOrdersTable","constructor","refreshOrdersTable","console","log","setState","fetch","then","res","json","showTable","orders","data","catch","error","state","bind","render","rows","index","forEach","order","push","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport OTableRow from './OTableRow';\r\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn } from 'mdbreact';\r\n\r\n\r\nclass AllOrdersTable extends Component {\r\n    constructor() {\r\n        super();\r\n        fetch('/getAllOrders',\r\n        )\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                // if (this._isMounted) {\r\n                this.setState({ showTable: true, orders: json.data })\r\n                // }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orders: [],\r\n        }\r\n        this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\r\n    }\r\n\r\n    refreshOrdersTable = () => {\r\n        console.log('ok');\r\nthis.setState()\r\n    }\r\n\r\n    render() {\r\n        // const searchText = this.props.searchText;\r\n        // const searchFilter = this.props.searchFilter;\r\n        var orders = this.state.orders;\r\n        var rows = [];\r\n        var index = 0;\r\n        orders.forEach((order) => {\r\n            // if (searchResult[searchFilter].indexOf(searchText) === -1) {\r\n            //     return;\r\n            // }\r\n            index = index + 1;\r\n            rows.push(\r\n                <OTableRow index={index} order={order} key={order.id} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <MDBCard className='col p-0'>\r\n                <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                    Orders\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n                    <MDBTable id='ordersTable' striped responsive bordered autoWidth scrollY maxHeight='360px'>\r\n\r\n                        <MDBTableHead color='teal' textWhite >\r\n                            <tr>\r\n                                <th>Sr.</th>\r\n                                <th>Id</th>\r\n                                <th>Customer Name</th>\r\n                                <th>Customer Contact</th>\r\n                                <th>Customer Address</th>\r\n                                <th>Total</th>\r\n                                <th>Total Value Added</th>\r\n                                <th>Tracking Id</th>\r\n                                <th>Note</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {rows}\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllOrdersTable"]},"metadata":{},"sourceType":"module"}