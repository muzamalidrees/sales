{"ast":null,"code":"import _objectSpread from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\users\\\\pages\\\\NewUser.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\nimport Select from 'react-select';\nimport Notification from '../../misc/sections/Notification';\nimport { Can } from '../../../configs/Ability-context';\n\nvar NewUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewUser, _Component);\n\n  function NewUser() {\n    var _this;\n\n    _classCallCheck(this, NewUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewUser).call(this));\n    _this._isMounted = false;\n\n    _this.handleSelectChange = function (selectedOption) {\n      _this.setState({\n        role: selectedOption\n      });\n    };\n\n    _this.handleInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.refs.newUserForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else if (_this.state.role === '' || _this.state.role === null) {\n        _this.setState({\n          role: null\n        });\n\n        return;\n      } else {\n        var name = _this.state.name;\n        var email = _this.state.email;\n        var cell = _this.state.cell;\n        var username = _this.state.username;\n        var password = _this.state.password;\n        var role = _this.state.role.value;\n        console.log(name, email, cell, username, password, role);\n        var user = {\n          name: name,\n          email: email,\n          cell: cell,\n          username: username,\n          password: password,\n          role: role\n        };\n        var options = {\n          method: 'POST',\n          body: JSON.stringify(user),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/addNewUser', options).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          // console.log(json)\n          if (_this._isMounted === true) {\n            _this.setState({\n              message: json.message,\n              notificationShow: true\n            });\n          }\n\n          if (json.success === true) {\n            _this.setState({\n              role: '',\n              name: '',\n              email: '',\n              cell: '',\n              username: '',\n              password: ''\n            });\n          } else {\n            _this.username.focus();\n          }\n\n          if (_this._isMounted === true) {\n            setTimeout(function () {\n              return _this.setState({\n                notificationShow: false\n              });\n            }, 1502);\n          }\n        })[\"catch\"](function (error) {\n          return console.log(error);\n        });\n      }\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllRoles').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          roles: json.data,\n          showOptions: true\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      role: '',\n      name: '',\n      email: '',\n      cell: '',\n      username: '',\n      password: '',\n      roles: '',\n      showOptions: false,\n      message: '',\n      notificationShow: false\n    };\n    return _this;\n  }\n\n  _createClass(NewUser, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          role = _this$state.role,\n          roles = _this$state.roles,\n          showOptions = _this$state.showOptions;\n      var customStyles = {\n        control: function control(base, state) {\n          return _objectSpread({}, base, {\n            borderColor: state.isFocused ? '#ddd' : role !== null ? '#ddd' : 'red',\n            width: '191px' // float: 'right'\n\n          });\n        }\n      };\n      var roleOptions;\n\n      if (showOptions) {\n        roleOptions = roles.map(function (role) {\n          return {\n            key: role.id,\n            label: role.name,\n            value: role.id\n          };\n        });\n      }\n\n      return React.createElement(Can, {\n        I: \"create\",\n        a: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"\",\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"New User\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        ref: \"newUserForm\",\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: this.state.name,\n        label: \"Name\",\n        name: \"name\",\n        icon: \"user\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: this.state.email,\n        label: \"Email\",\n        name: \"email\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: this.state.cell,\n        label: \"Phone\",\n        name: \"cell\",\n        icon: \"phone\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: this.state.username,\n        label: \"Username\",\n        name: \"username\",\n        inputRef: function inputRef(el) {\n          _this2.username = el;\n        },\n        icon: \"user\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        onInput: this.handleInput,\n        value: this.state.password,\n        label: \"Password\",\n        name: \"password\",\n        icon: \"lock\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), showOptions ? React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Select, {\n        styles: customStyles,\n        value: role,\n        onChange: this.handleSelectChange,\n        options: roleOptions,\n        placeholder: \"Role\",\n        isSearchable: true,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })) : null), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"teal\",\n        outline: true,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Register\"), React.createElement(MDBBtn, {\n        size: \"sm\",\n        className: \"m-0 p-0\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/home/new\",\n        className: \"m-0\",\n        style: {\n          fontSize: '16px',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Add New Order\")))))), this.state.notificationShow ? React.createElement(Notification, {\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }) : null))));\n    }\n  }]);\n\n  return NewUser;\n}(Component);\n\nexport default NewUser;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\users\\pages\\NewUser.jsx"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBCardBody","MDBCardHeader","MDBCard","Select","Notification","Can","NewUser","_isMounted","handleSelectChange","selectedOption","setState","role","handleInput","e","target","name","value","handleSubmit","preventDefault","form","refs","newUserForm","checkValidity","classList","add","state","email","cell","username","password","console","log","user","options","method","body","JSON","stringify","headers","fetch","then","res","json","message","notificationShow","success","focus","setTimeout","error","roles","data","showOptions","customStyles","control","base","borderColor","isFocused","width","roleOptions","map","key","id","label","marginTop","color","el","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\n\r\nclass NewUser extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data, showOptions: true })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n\r\n\r\n        this.state = {\r\n            role: '',\r\n            name: '',\r\n            email: '',\r\n            cell: '',\r\n            username: '',\r\n            password: '',\r\n            roles: '',\r\n            showOptions: false,\r\n            message: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleSelectChange = selectedOption => {\r\n        this.setState({\r\n            role: selectedOption\r\n        })\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newUserForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else if (this.state.role === '' || this.state.role === null) {\r\n            this.setState({ role: null })\r\n            return\r\n        }\r\n        else {\r\n            let name = this.state.name\r\n            let email = this.state.email\r\n            let cell = this.state.cell\r\n            let username = this.state.username\r\n            let password = this.state.password\r\n            let role = this.state.role.value\r\n\r\n            console.log(name, email, cell, username, password, role);\r\n            let user = { name: name, email: email, cell: cell, username: username, password: password, role: role }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(user),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    if (this._isMounted === true) {\r\n                        this.setState({ message: json.message, notificationShow: true })\r\n                    }\r\n                    if (json.success === true) {\r\n\r\n                        this.setState({\r\n                            role: '',\r\n                            name: '',\r\n                            email: '',\r\n                            cell: '',\r\n                            username: '',\r\n                            password: ''\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.username.focus();\r\n                    }\r\n                    if (this._isMounted === true) {\r\n                        setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { role, roles, showOptions } = this.state\r\n        const customStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : role !== null ?\r\n                        '#ddd' : 'red',\r\n                width: '191px',\r\n                // float: 'right'\r\n            })\r\n        }\r\n        var roleOptions;\r\n        if (showOptions) {\r\n\r\n            roleOptions = roles.map(role => ({ key: role.id, label: role.name, value: role.id }));\r\n        }\r\n\r\n\r\n        return (\r\n            <Can I='create' a='user'>\r\n                <MDBContainer className='' style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard className=' p-5'>\r\n\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                                    New User\r\n                            </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n\r\n                                    <form ref='newUserForm' onSubmit={this.handleSubmit} noValidate>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.name}\r\n                                                label=\"Name\"\r\n                                                name='name'\r\n                                                icon=\"user\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.email}\r\n                                                label=\"Email\"\r\n                                                name=\"email\"\r\n                                                icon=\"envelope\"\r\n                                                group\r\n                                                type=\"email\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.cell}\r\n                                                label=\"Phone\"\r\n                                                name=\"cell\"\r\n                                                icon=\"phone\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.username}\r\n                                                label=\"Username\"\r\n                                                name=\"username\"\r\n                                                inputRef={el => { this.username = el }}\r\n                                                icon=\"user\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                required\r\n                                            />\r\n                                            <MDBInput\r\n                                                onInput={this.handleInput}\r\n                                                value={this.state.password}\r\n                                                label=\"Password\"\r\n                                                name=\"password\"\r\n                                                icon=\"lock\"\r\n                                                group\r\n                                                type=\"text\"\r\n                                                validate\r\n                                                required>\r\n                                                {/* <MDBIcon icon=\"home\" style={{ float: 'left' }} /> */}\r\n                                            </MDBInput>\r\n                                            {showOptions ?\r\n                                                <div className=''>\r\n                                                    <Select\r\n                                                        styles={customStyles}\r\n                                                        value={role}\r\n                                                        onChange={this.handleSelectChange}\r\n                                                        options={roleOptions}\r\n                                                        placeholder='Role'\r\n                                                        isSearchable\r\n                                                        isClearable\r\n                                                    />\r\n                                                </div> : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <MDBBtn size='sm' color=\"teal\" outline type='submit'>Register</MDBBtn>\r\n                                            <MDBBtn size='sm' className='m-0 p-0' color='teal'>\r\n                                                <MDBNavLink to='/home/new' className='m-0' style={{ fontSize: '16px', color: 'white' }}>\r\n                                                    Add New Order\r\n                                                </MDBNavLink>\r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                            {\r\n                                this.state.notificationShow ?\r\n                                    <Notification\r\n                                        message={this.state.message}\r\n                                    /> : null\r\n                            }\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewUser"]},"metadata":{},"sourceType":"module"}