{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\AllUsers.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\nimport EditOrderModal from './sections/EditOrderModal';\nimport DeleteModal from './sections/DeleteModal';\n\nclass AllUsers extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n    };\n\n    this.handleEdit = e => {\n      // console.log('edit');\n      var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n      var svgClik = e.target.parentNode.parentNode.parentNode;\n      var buttonClik = e.target.parentNode.parentNode;\n      var tdClik = e.target.parentNode;\n      var targt = e.target;\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = svgClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = buttonClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = tdClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = targt;\n      }\n\n      let id = iconClik.cells[1].innerHTML;\n      this.refs.editUserModal.setState({\n        modalShow: true\n      });\n      this.refs.editUserModal.fetchData(id);\n    };\n\n    this.handleDelete = e => {\n      var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n      var svgClik = e.target.parentNode.parentNode.parentNode;\n      var buttonClik = e.target.parentNode.parentNode;\n      var tdClik = e.target.parentNode;\n      var targt = e.target;\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = svgClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = buttonClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = tdClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = targt;\n      }\n\n      var i = iconClik.rowIndex;\n      let dRowValue = iconClik.cells[1].innerHTML;\n      this.setState({\n        rowToBeDeleted: i,\n        dRowValue: dRowValue\n      });\n      this.refs.deleteModal.setState({\n        modalShow: true\n      });\n    };\n\n    this.deleteUser = () => {\n      let rowToBeDeleted = this.state.rowToBeDeleted;\n      let dRowValue = this.state.dRowValue;\n      document.getElementById('usersTable').deleteRow(rowToBeDeleted);\n      let order = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteUser', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this._isMounted = true;\n    fetch('/getAllUsers').then(res => res.json()).then(json => {\n      // console.log(json)\n      if (this._isMounted) {\n        this.setState({\n          users: json.data\n        });\n      }\n    }).catch(error => console.log(error));\n    this.state = {\n      users: [],\n      rowToBeDeleted: '',\n      dRowValue: ''\n    };\n  }\n\n  render() {\n    var users = this.state.users;\n    var rows = [];\n    var index = 0;\n    users.forEach(user => {\n      index = index + 1;\n      rows.push({\n        index: index,\n        name: user.name,\n        email: user.email,\n        cell: user.cell,\n        username: user.username,\n        // password: user.password,\n        role_id: user.role_id,\n        buttons: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleEdit(user.id),\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"teal\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"pencil-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        })), React.createElement(MDBBtn, {\n          style: {\n            fontSize: '15px'\n          },\n          onClick: this.handleDelete(),\n          className: \"m-1 py-1 px-2\",\n          outline: true,\n          color: \"red darken-3\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        })))\n      });\n    });\n    var data = {\n      columns: [{\n        label: '#',\n        field: 'index'\n      }, {\n        label: 'Id',\n        field: 'id'\n      }, {\n        label: 'Name',\n        field: 'name'\n      }, {\n        label: 'Email',\n        field: 'email'\n      }, {\n        label: 'Cell',\n        field: 'cell'\n      }, {\n        label: 'Username',\n        field: 'username'\n      }, {\n        label: 'Role',\n        field: 'role_id'\n      }, {\n        label: 'Action',\n        field: 'buttons'\n      }],\n      rows: rows\n    };\n    return React.createElement(MDBCard, {\n      className: \" p-0\",\n      style: {\n        marginTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Users\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      id: \"usersTable\",\n      striped: true,\n      small: true,\n      hover: true,\n      theadColor: \"teal\",\n      bordered: true,\n      btn: true,\n      entries: 12,\n      entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n      responsive: true,\n      data: data,\n      theadTextWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(EditOrderModal, {\n      ref: \"editUserModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(DeleteModal, {\n      ref: \"deleteModal\",\n      deleteEntry: this.deleteUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AllUsers;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\AllUsers.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","EditOrderModal","DeleteModal","AllUsers","constructor","_isMounted","componentWillUnmount","handleEdit","e","iconClik","target","parentNode","svgClik","buttonClik","tdClik","targt","rowIndex","undefined","id","cells","innerHTML","refs","editUserModal","setState","modalShow","fetchData","handleDelete","i","dRowValue","rowToBeDeleted","deleteModal","deleteUser","state","document","getElementById","deleteRow","order","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","catch","error","users","data","render","rows","index","forEach","user","push","name","email","cell","username","role_id","buttons","fontSize","columns","label","field","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport EditOrderModal from './sections/EditOrderModal';\r\nimport DeleteModal from './sections/DeleteModal';\r\n\r\n\r\nclass AllUsers extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllUsers')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n\r\n                    this.setState({ users: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            users: [],\r\n            rowToBeDeleted: '',\r\n            dRowValue: ''\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (e) => {\r\n        // console.log('edit');\r\n        var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\r\n        var svgClik = e.target.parentNode.parentNode.parentNode;\r\n        var buttonClik = e.target.parentNode.parentNode;\r\n        var tdClik = e.target.parentNode;\r\n        var targt = e.target\r\n\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = svgClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = buttonClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = tdClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = targt;\r\n        }\r\n        let id = iconClik.cells[1].innerHTML\r\n\r\n        this.refs.editUserModal.setState({\r\n            modalShow: true\r\n        })\r\n        this.refs.editUserModal.fetchData(id);\r\n\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\r\n        var svgClik = e.target.parentNode.parentNode.parentNode;\r\n        var buttonClik = e.target.parentNode.parentNode;\r\n        var tdClik = e.target.parentNode;\r\n        var targt = e.target\r\n\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = svgClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = buttonClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = tdClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = targt;\r\n        }\r\n        var i = iconClik.rowIndex;\r\n        let dRowValue = iconClik.cells[1].innerHTML\r\n\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: dRowValue\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteUser = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('usersTable').deleteRow(rowToBeDeleted)\r\n        let order = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(order),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteUser', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var { users } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n\r\n        users.forEach((user) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: user.name,\r\n                    email: user.email,\r\n                    cell: user.cell,\r\n                    username: user.username,\r\n                    // password: user.password,\r\n                    role_id: user.role_id,\r\n                    buttons: <React.Fragment>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleEdit(user.id)} className='m-1 py-1 px-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" /></MDBBtn>\r\n                        <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete()} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Id', field: 'id', }, { label: 'Name', field: 'name' },\r\n                { label: 'Email', field: 'email', }, { label: 'Cell', field: 'cell', },\r\n                { label: 'Username', field: 'username', }, { label: 'Role', field: 'role_id', },\r\n                { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n\r\n            <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\r\n                <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                    Users\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n\r\n                    <MDBDataTable id='usersTable' striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                    <EditOrderModal\r\n                        ref='editUserModal'\r\n                    />\r\n                    <DeleteModal\r\n                        ref='deleteModal'\r\n                        deleteEntry={this.deleteUser}\r\n                    />\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllUsers"]},"metadata":{},"sourceType":"module"}