{"ast":null,"code":"import _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\permissions\\\\pages\\\\AllPermissions.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport DeleteModal from '../../misc/sections/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\n\nvar AllPermissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllPermissions, _Component);\n\n  function AllPermissions() {\n    var _this;\n\n    _classCallCheck(this, AllPermissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllPermissions).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleDelete = function (id) {\n      return function (e) {\n        var el = e.target;\n        var row = el.closest('tr');\n        var i = row.rowIndex;\n\n        _this.setState({\n          rowToBeDeleted: i,\n          dRowValue: id\n        });\n\n        _this.refs.deleteModal.setState({\n          modalShow: true\n        });\n      };\n    };\n\n    _this.deletePermission = function () {\n      var rowToBeDeleted = _this.state.rowToBeDeleted;\n      var dRowValue = _this.state.dRowValue;\n      document.getElementById('permissionsTable').deleteRow(rowToBeDeleted);\n      var permission = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(permission),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deletePermission', options).then(function (res) {\n        return res.json();\n      }).then(function (json) {// console.log(json)\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllPermissions').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          permissions: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      rowToBeDeleted: '',\n      dRowValue: '',\n      permissions: []\n    };\n    return _this;\n  }\n\n  _createClass(AllPermissions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var permissions = this.state.permissions;\n      var rows = [];\n      var index = 0;\n      permissions.forEach(function (permission) {\n        index = index + 1;\n        rows.push({\n          index: index,\n          permission: permission.permission,\n          entity: permission.entity,\n          slug: permission.slug,\n          buttons: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(Can, {\n            I: \"delete\",\n            a: \"permission\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(MDBBtn, {\n            style: {\n              fontSize: '15px'\n            },\n            onClick: _this2.handleDelete(permission.id),\n            className: \"m-1 py-1 px-2\",\n            outline: true,\n            color: \"red darken-3\",\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"trash\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }))))\n        });\n      });\n      var data = {\n        columns: [{\n          label: '#',\n          field: 'index'\n        }, {\n          label: 'Permission',\n          field: 'permission'\n        }, {\n          label: 'Entity',\n          field: 'entity'\n        }, {\n          label: 'Slug',\n          field: 'slug'\n        }, {\n          label: 'Action',\n          field: 'buttons'\n        }],\n        rows: rows\n      };\n      return React.createElement(Can, {\n        I: \"read\",\n        a: \"permission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"\",\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"All Permissions\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(MDBDataTable, {\n        id: \"permissionsTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"default-color\",\n        bordered: true,\n        btn: true,\n        entries: 12,\n        entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(DeleteModal, {\n        ref: \"deleteModal\",\n        deleteEntry: this.deletePermission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return AllPermissions;\n}(Component);\n\nexport default AllPermissions;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\permissions\\pages\\AllPermissions.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","DeleteModal","Can","AllPermissions","_isMounted","componentWillUnmount","handleDelete","id","e","el","target","row","closest","i","rowIndex","setState","rowToBeDeleted","dRowValue","refs","deleteModal","modalShow","deletePermission","state","document","getElementById","deleteRow","permission","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","error","console","log","permissions","data","rows","index","forEach","push","entity","slug","buttons","fontSize","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\nimport DeleteModal from '../../misc/sections/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\n\r\n\r\nclass AllPermissions extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllPermissions')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ permissions: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            rowToBeDeleted: '',\r\n            dRowValue: '',\r\n            permissions: [],\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            dRowValue: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deletePermission = () => {\r\n        let rowToBeDeleted = this.state.rowToBeDeleted\r\n        let dRowValue = this.state.dRowValue\r\n        document.getElementById('permissionsTable').deleteRow(rowToBeDeleted)\r\n        let permission = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(permission),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deletePermission', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var { permissions } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n\r\n        permissions.forEach((permission) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    permission: permission.permission,\r\n                    entity: permission.entity,\r\n                    slug: permission.slug,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='delete' a='permission'>\r\n                            <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleDelete(permission.id)} className='m-1 py-1 px-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" /></MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', },\r\n                { label: 'Permission', field: 'permission' },\r\n                { label: 'Entity', field: 'entity' },\r\n                { label: 'Slug', field: 'slug' },\r\n                { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='permission'>\r\n                <MDBContainer className='' style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"8\">\r\n                            <MDBCard className=' p-0'>\r\n                                <MDBCardHeader tag=\"h4\" style={{color:'teal'}} className=\"text-center font-weight-bold\">\r\n                                    All Permissions\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n\r\n                                    <MDBDataTable id='permissionsTable' striped small hover theadColor=\"default-color\"\r\n                                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                                        data={data} theadTextWhite >\r\n                                    </MDBDataTable>\r\n                                    <DeleteModal\r\n                                        ref='deleteModal'\r\n                                        deleteEntry={this.deletePermission}\r\n                                    />\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllPermissions"]},"metadata":{},"sourceType":"module"}