{"ast":null,"code":"import _objectSpread from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\rolePermissioning\\\\pages\\\\SetRolesPermissions.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport chroma from 'chroma-js';\nimport Notification from '../../misc/sections/Notification';\nimport { Can } from '../../../configs/Ability-context';\nimport LoaderModal from '../../misc/sections/LoaderModal';\n\nvar SetRolesPermissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SetRolesPermissions, _Component);\n\n  function SetRolesPermissions() {\n    var _this;\n\n    _classCallCheck(this, SetRolesPermissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetRolesPermissions).call(this));\n    _this._isMounted = false;\n\n    _this.handleSelectChange = function (name) {\n      return function (selectedOption) {\n        _this.setState(_defineProperty({}, name, selectedOption));\n      };\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.role === '' || _this.state.role === null) {\n        _this.setState({\n          role: null\n        });\n\n        return;\n      } else if (_this.state.permission === [] || _this.state.permission === null || _this.state.permission === '') {\n        _this.setState({\n          permission: null\n        });\n\n        return;\n      } else {\n        _this.refs.loaderModal.setState({\n          modalShow: true\n        });\n\n        var _this$state = _this.state,\n            role = _this$state.role,\n            permission = _this$state.permission;\n        var roleId = role.value;\n        var Permissions = [];\n        permission.forEach(function (Permission) {\n          var permissionId = Permission.value;\n          Permissions.push({\n            role_id: roleId,\n            permission_id: permissionId\n          });\n        }); // console.log(Permissions);\n\n        var rolePermissions = {\n          Permissions: Permissions\n        };\n        var options = {\n          method: 'POST',\n          body: JSON.stringify(rolePermissions),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/addNewRolePermissions', options).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          console.log(json);\n\n          if (_this._isMounted) {\n            _this.setState({\n              role: '',\n              permission: []\n            }); // window.location.reload()\n\n          }\n        })[\"catch\"](function (error) {\n          return console.log(error);\n        });\n\n        _this.refs.loaderModal.setState({\n          modalShow: false\n        });\n      }\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllPermissions').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          permissions: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch('/getAllRoles').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      if (_this._isMounted) {\n        _this.setState({\n          roles: json.data\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      permissions: [],\n      roles: [],\n      role: '',\n      permission: '',\n      notificationMessage: '',\n      notificationShow: false\n    };\n    return _this;\n  }\n\n  _createClass(SetRolesPermissions, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          role = _this$state2.role,\n          roles = _this$state2.roles,\n          permission = _this$state2.permission,\n          permissions = _this$state2.permissions;\n      var animatedComponents = makeAnimated();\n      var roleStyles = {\n        control: function control(base, state) {\n          return _objectSpread({}, base, {\n            borderColor: state.isFocused ? '#ddd' : role !== null ? '#ddd' : 'red',\n            fontWeight: 370,\n            borderTop: 'none',\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderRadius: 'none'\n          });\n        }\n      };\n      var permissionStyles = {\n        control: function control(base, state) {\n          return _objectSpread({}, base, {\n            borderColor: state.isFocused ? '#ddd' : permission !== null ? '#ddd' : 'red',\n            fontWeight: 370,\n            backgroundColor: 'white',\n            borderTop: 'none',\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderRadius: 'none'\n          });\n        },\n        option: function option(styles, _ref) {\n          var data = _ref.data,\n              isDisabled = _ref.isDisabled,\n              isFocused = _ref.isFocused,\n              isSelected = _ref.isSelected;\n          var color = chroma(data.color);\n          return _objectSpread({}, styles, {\n            backgroundColor: isDisabled ? null : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\n            color: isDisabled ? '#ccc' : isSelected ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black' : data.color,\n            cursor: isDisabled ? 'not-allowed' : 'default',\n            ':active': _objectSpread({}, styles[':active'], {\n              backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css())\n            })\n          });\n        },\n        multiValue: function multiValue(styles, _ref2) {\n          var data = _ref2.data;\n          var color = chroma(data.color);\n          return _objectSpread({}, styles, {\n            backgroundColor: color.alpha(0.1).css()\n          });\n        },\n        multiValueLabel: function multiValueLabel(styles, _ref3) {\n          var data = _ref3.data;\n          return _objectSpread({}, styles, {\n            color: data.color\n          });\n        },\n        multiValueRemove: function multiValueRemove(styles, _ref4) {\n          var data = _ref4.data;\n          return _objectSpread({}, styles, {\n            color: data.color,\n            ':hover': {\n              backgroundColor: data.color,\n              color: 'white'\n            }\n          });\n        }\n      };\n      var roleOptions, permissionOptions;\n      roleOptions = roles.map(function (role) {\n        return {\n          key: role.id,\n          label: role.name,\n          value: role.id\n        };\n      });\n      permissionOptions = permissions.map(function (permission) {\n        return {\n          key: permission.id,\n          label: permission.slug,\n          value: permission.id,\n          color: permission.id % 2 === 0 ? '#2BBBAD' : '#01579b'\n        };\n      });\n      return React.createElement(Can, {\n        I: \"set\",\n        a: \"rolePermission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"p-0\",\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"mb-5 text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Set Roles' Permissions\"), React.createElement(MDBCardBody, {\n        className: \"p-0 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        ref: \"setRolePermissionsForm\",\n        className: \"\",\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        around: true,\n        className: \"m-0 p-0 grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: \"6\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Select, {\n        styles: roleStyles,\n        value: role,\n        onChange: this.handleSelectChange('role'),\n        options: roleOptions,\n        placeholder: \"Role\",\n        isSearchable: true,\n        isClearable: true,\n        className: \"form-control-lg px-0 mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        className: \"mt-3 p-0 form-control\",\n        color: \"default\",\n        outline: true,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(MDBRow, {\n        around: true,\n        className: \"my-4 p-0 mx-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        className: \"m-0 pl-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        ref: \"label\",\n        style: {\n          fontFamily: 'monospace',\n          color: 'teal'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.state.permission ? this.state.permission.length : 0, \" permissions selected\"), React.createElement(Select, {\n        isMulti: true,\n        styles: permissionStyles,\n        value: permission,\n        onChange: this.handleSelectChange('permission'),\n        options: permissionOptions,\n        placeholder: \"Permissions\",\n        isSearchable: true,\n        isClearable: true,\n        className: \"form-control-lg px-0\",\n        components: animatedComponents,\n        closeMenuOnSelect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })))), React.createElement(Can, {\n        I: \"read\",\n        a: \"rolePermission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/rolePermissioning/all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"All Roles' Permissions...\")))), this.state.notificationShow ? React.createElement(Notification, {\n        message: this.state.notificationMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }) : null)), React.createElement(LoaderModal, {\n        ref: \"loaderModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SetRolesPermissions;\n}(Component);\n\nexport default SetRolesPermissions;","map":{"version":3,"sources":["d:\\mzamal\\sales&stock\\sales\\src\\components\\rolePermissioning\\pages\\SetRolesPermissions.jsx"],"names":["React","Component","Link","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBCardBody","MDBCardHeader","MDBCard","Select","makeAnimated","chroma","Notification","Can","LoaderModal","SetRolesPermissions","_isMounted","handleSelectChange","name","selectedOption","setState","handleSubmit","e","preventDefault","state","role","permission","refs","loaderModal","modalShow","roleId","value","Permissions","forEach","Permission","permissionId","push","role_id","permission_id","rolePermissions","options","method","body","JSON","stringify","headers","fetch","then","res","json","console","log","error","permissions","data","roles","notificationMessage","notificationShow","animatedComponents","roleStyles","control","base","borderColor","isFocused","fontWeight","borderTop","borderRight","borderLeft","borderRadius","permissionStyles","backgroundColor","option","styles","isDisabled","isSelected","color","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","roleOptions","permissionOptions","map","key","id","label","slug","marginTop","fontFamily","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCardBody, MDBCardHeader, MDBCard } from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport chroma from 'chroma-js';\r\nimport Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport LoaderModal from '../../misc/sections/LoaderModal'\r\n\r\n\r\nclass SetRolesPermissions extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllPermissions')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ permissions: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        fetch('/getAllRoles')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                if (this._isMounted) {\r\n                    this.setState({ roles: json.data })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            permissions: [],\r\n            roles: [],\r\n            role: '',\r\n            permission: '',\r\n            notificationMessage: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleSelectChange = name => selectedOption => {\r\n\r\n        this.setState({\r\n            [name]: selectedOption\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (this.state.role === '' || this.state.role === null) {\r\n            this.setState({ role: null })\r\n            return\r\n        }\r\n        else if (this.state.permission === [] || this.state.permission === null || this.state.permission === '') {\r\n            this.setState({ permission: null })\r\n            return\r\n        }\r\n        else {\r\n            this.refs.loaderModal.setState({ modalShow: true })\r\n            let { role, permission } = this.state\r\n            let roleId = role.value\r\n            let Permissions = []\r\n            permission.forEach(Permission => {\r\n                let permissionId = Permission.value\r\n                Permissions.push({ role_id: roleId, permission_id: permissionId })\r\n            })\r\n            // console.log(Permissions);\r\n\r\n            let rolePermissions = { Permissions: Permissions }\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(rolePermissions),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewRolePermissions', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            role: '',\r\n                            permission: []\r\n                        })\r\n                        // window.location.reload()\r\n                    }\r\n                })\r\n                .catch((error) => console.log(error))\r\n            this.refs.loaderModal.setState({ modalShow: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { role, roles, permission, permissions } = this.state\r\n        const animatedComponents = makeAnimated();\r\n        const roleStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : role !== null ?\r\n                        '#ddd' : 'red',\r\n                fontWeight: 370,\r\n                borderTop: 'none',\r\n                borderRight: 'none',\r\n                borderLeft: 'none',\r\n                borderRadius: 'none',\r\n            })\r\n        }\r\n        const permissionStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : permission !== null ?\r\n                        '#ddd' : 'red',\r\n                fontWeight: 370,\r\n                backgroundColor: 'white',\r\n                borderTop: 'none',\r\n                borderRight: 'none',\r\n                borderLeft: 'none',\r\n                borderRadius: 'none',\r\n            }),\r\n            option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n                const color = chroma(data.color);\r\n                return {\r\n                    ...styles,\r\n                    backgroundColor: isDisabled\r\n                        ? null\r\n                        : isSelected\r\n                            ? data.color\r\n                            : isFocused\r\n                                ? color.alpha(0.1).css()\r\n                                : null,\r\n                    color: isDisabled\r\n                        ? '#ccc'\r\n                        : isSelected\r\n                            ? chroma.contrast(color, 'white') > 2\r\n                                ? 'white'\r\n                                : 'black'\r\n                            : data.color,\r\n                    cursor: isDisabled ? 'not-allowed' : 'default',\r\n\r\n                    ':active': {\r\n                        ...styles[':active'],\r\n                        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n                    },\r\n                };\r\n            },\r\n            multiValue: (styles, { data }) => {\r\n                const color = chroma(data.color);\r\n                return {\r\n                    ...styles,\r\n                    backgroundColor: color.alpha(0.1).css(),\r\n                };\r\n            },\r\n            multiValueLabel: (styles, { data }) => ({\r\n                ...styles,\r\n                color: data.color,\r\n            }),\r\n            multiValueRemove: (styles, { data }) => ({\r\n                ...styles,\r\n                color: data.color,\r\n                ':hover': {\r\n                    backgroundColor: data.color,\r\n                    color: 'white',\r\n                },\r\n            }),\r\n        }\r\n        let roleOptions, permissionOptions\r\n\r\n        roleOptions = roles.map(role => ({\r\n            key: role.id,\r\n            label: role.name,\r\n            value: role.id,\r\n        }));\r\n        permissionOptions = permissions.map(permission => ({\r\n            key: permission.id,\r\n            label: permission.slug,\r\n            value: permission.id,\r\n            color: permission.id % 2 === 0 ?\r\n                '#2BBBAD' : '#01579b'\r\n        }));\r\n\r\n\r\n\r\n        return (\r\n            <Can I='set' a='rolePermission' >\r\n                <MDBContainer className='p-0' style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"7\">\r\n                            <MDBCard className='p-3'>\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"mb-5 text-center font-weight-bold\">\r\n                                    Set Roles' Permissions\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody className='p-0 text-center'>\r\n\r\n                                    <form onSubmit={this.handleSubmit} ref='setRolePermissionsForm' className='' noValidate>\r\n                                        <MDBRow around className='m-0 p-0 grey-text'>\r\n                                            <MDBCol sm='6' className='m-0 p-0'>\r\n                                                <Select\r\n                                                    styles={roleStyles}\r\n                                                    value={role}\r\n                                                    onChange={this.handleSelectChange('role')}\r\n                                                    options={roleOptions}\r\n                                                    placeholder='Role'\r\n                                                    isSearchable\r\n                                                    isClearable\r\n                                                    className='form-control-lg px-0 mb-1'\r\n                                                />\r\n                                            </MDBCol>\r\n                                            <MDBCol sm='4' className='m-0 p-0'>\r\n                                                <MDBBtn className='mt-3 p-0 form-control' color=\"default\" outline type='submit'>Submit</MDBBtn>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <MDBRow around className='my-4 p-0 mx-0'>\r\n                                            <MDBCol className='m-0 pl-4'>\r\n                                                <label ref='label' style={{ fontFamily: 'monospace', color: 'teal' }}>{this.state.permission ? this.state.permission.length : 0} permissions selected</label>\r\n                                                <Select\r\n                                                    isMulti\r\n                                                    styles={permissionStyles}\r\n                                                    value={permission}\r\n                                                    onChange={this.handleSelectChange('permission')}\r\n                                                    options={permissionOptions}\r\n                                                    placeholder='Permissions'\r\n                                                    isSearchable\r\n                                                    isClearable\r\n                                                    className='form-control-lg px-0'\r\n                                                    components={animatedComponents}\r\n                                                    closeMenuOnSelect={false}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </form>\r\n                                    <Can I='read' a='rolePermission'>\r\n                                        <Link to='/rolePermissioning/all'>All Roles' Permissions...</Link>\r\n                                    </Can>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                            {\r\n                                this.state.notificationShow ?\r\n                                    <Notification\r\n                                        message={this.state.notificationMessage}\r\n                                    /> : null\r\n                            }\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <LoaderModal\r\n                        ref='loaderModal'\r\n                    />\r\n                </MDBContainer>\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SetRolesPermissions"]},"metadata":{},"sourceType":"module"}