{"ast":null,"code":"import _objectSpread from \"D:\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\sections\\\\EditOrderModal.jsx\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBPopover, MDBPopoverHeader, MDBPopoverBody, MDBModalBody, MDBTable, MDBTableHead, MDBTableBody, MDBModalHeader, MDBModalFooter, MDBRow, MDBCol, MDBInput, MDBDataTable } from 'mdbreact';\nimport Select from 'react-select';\nimport CreateableSelect from './CreatableAdvancedSelect';\nimport PTableRow from './PTableRow';\nimport deleteOrderModal from './DeleteOrderModal';\nconst sourceOptions = [{\n  value: 'facebook',\n  label: 'Facebook'\n}, {\n  value: 'whatsapp1',\n  label: 'WhatsApp 1'\n}, {\n  value: 'whatsapp2',\n  label: 'WhatsApp 2'\n}, {\n  value: 'phone1',\n  label: 'Phone 1'\n}, {\n  value: 'phone2',\n  label: 'Phone 2'\n}, {\n  value: 'website',\n  label: 'Website'\n}, {\n  value: 'imo',\n  label: 'Imo'\n}];\n\nclass EditOrderModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = id => {\n      fetch('/getSpecificOrder/' + id).then(res => res.json()).then(json => {\n        // console.log(json)\n        // this.order = json.data\n        var order = json.data;\n        this.setState({\n          order: order,\n          orderId: order.id,\n          orderTotal: order.total,\n          totalValueAdded: order.total_value_added,\n          orderSource: {\n            label: order.source,\n            value: order.source\n          },\n          orderStatus: {\n            label: order.status,\n            value: order.status\n          },\n          orderTracking: order.tracking_id,\n          orderNote: order.note,\n          cName: order.customer_name,\n          cContact: order.customer_contact,\n          cAddress: order.customer_address // showOrderDetails: true,\n\n        });\n      }).catch(error => console.log(error));\n      fetch('/getAllOrderDetails/' + id).then(res => res.json()).then(json => {\n        // console.log(json)\n        json.data.map(x => {\n          delete x.createdAt;\n          delete x.updatedAt;\n          delete x.deletedAt;\n          delete x.order_id;\n        });\n        this.setState({\n          orderDetails: json.data\n        });\n        this.setRows(json.data);\n      }).catch(error => console.log(error));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.orderStatus = newValue => {\n      if (newValue === null) {\n        this.setState({\n          isValidStatus: false,\n          orderStatus: newValue\n        });\n      } else {\n        this.setState({\n          orderStatus: newValue,\n          isValidStatus: true\n        });\n      }\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSelectChange = selectedOption => {\n      if (selectedOption === null) {\n        this.setState({\n          orderSource: selectedOption,\n          isValidSource: false\n        });\n      } else {\n        this.setState({\n          orderSource: selectedOption,\n          isValidSource: true\n        });\n      }\n    };\n\n    this.setRows = orderDetails => {\n      this.setState({\n        rows: []\n      });\n      var Rows = [];\n\n      if (orderDetails !== undefined) {\n        var index = 0;\n        orderDetails.forEach(orderDetail => {\n          let pChecked;\n          index++;\n\n          if (orderDetail.product_extra_added === \"Yes\") {\n            pChecked = true;\n          } else {\n            pChecked = false;\n          }\n\n          Rows.push(React.createElement(PTableRow, {\n            index: index,\n            Id: orderDetail.id,\n            pName: orderDetail.product_name,\n            pSKU: orderDetail.product_sku,\n            pRate: orderDetail.product_rate,\n            pQTY: orderDetail.product_qty,\n            pPrice: orderDetail.product_price,\n            pRemarks: orderDetail.product_remarks,\n            pChecked: pChecked,\n            key: Math.random(),\n            deleteProduct: this.deleteProduct,\n            minusFromTotal: this.minusFromTotal,\n            addToTotal: this.addToTotal,\n            minusFromTotalValueAdded: this.minusFromTotalValueAdded,\n            addToTotalValueAdded: this.addToTotalValueAdded,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }));\n        });\n      }\n\n      this.setState({\n        rows: Rows\n      });\n    };\n\n    this.deleteProduct = (price, i, pChecked) => {\n      if (confirm(\"Selected row will be deleted permanently\")) {\n        this.setState({\n          orderTotal: this.state.orderTotal - parseInt(price)\n        });\n\n        if (pChecked === 'Yes') {\n          this.setState({\n            totalValueAdded: this.state.totalValueAdded - parseInt(price)\n          });\n        }\n\n        var rows = [...this.state.rows];\n        rows.splice(i - 1, 1);\n        this.setState({\n          rows\n        });\n      } else {\n        txt = \"You pressed Cancel!\";\n      }\n    };\n\n    this.minusFromTotal = value => {\n      this.setState({\n        orderTotal: this.state.orderTotal - parseInt(value)\n      });\n    };\n\n    this.minusFromTotalValueAdded = value => {\n      this.setState({\n        totalValueAdded: this.state.totalValueAdded - parseInt(value)\n      });\n    };\n\n    this.addToTotal = value => {\n      this.setState({\n        orderTotal: this.state.orderTotal + parseInt(value)\n      });\n    };\n\n    this.addToTotalValueAdded = value => {\n      this.setState({\n        totalValueAdded: this.state.totalValueAdded + parseInt(value)\n      });\n    };\n\n    this.handleSubmit = () => {\n      let form = this.refs.myForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n        return;\n      } else if (!this.state.isValidSource || !this.state.isValidStatus) {\n        return;\n      } else {\n        this.updateOrder();\n        let Table = document.getElementById('editProductsTable');\n\n        for (let index = 1; index < Table.rows.length; index++) {\n          const pName = Table.rows[index].cells[1].innerHTML;\n          const pSKU = Table.rows[index].cells[2].innerHTML;\n          const pRate = Table.rows[index].cells[3].innerHTML;\n          const pQTY = Table.rows[index].cells[4].innerHTML;\n          const pPrice = Table.rows[index].cells[5].innerHTML;\n          const pRemarks = Table.rows[index].cells[6].innerHTML;\n          const pChecked = Table.rows[index].cells[7].innerHTML;\n          const pId = Table.rows[index].cells[8].innerHTML;\n          this.updateOrderDetails(pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n        }\n\n        for (let index = Table.rows.length - 1; index > 0; index--) {\n          Table.deleteRow(index);\n        }\n\n        this.toggle();\n        window.location.reload();\n      }\n    };\n\n    this.updateOrder = () => {\n      let orderId = this.state.orderId;\n      let source = this.state.orderSource.value;\n      let status = this.state.orderStatus.value;\n      let tracking = this.state.orderTracking;\n      let note = this.state.orderNote;\n      let total = this.state.orderTotal;\n      let totalAddedValue = this.state.totalValueAdded;\n      let cName = this.state.cName;\n      let cContact = this.state.cContact;\n      let cAddress = this.state.cAddress;\n      var order = {\n        id: orderId,\n        source: source,\n        status: status,\n        tracking: tracking,\n        note: note,\n        total: total,\n        totalAddedValue: totalAddedValue,\n        cName: cName,\n        cContact: cContact,\n        cAddress: cAddress\n      };\n      var options = {\n        method: 'PUT',\n        body: JSON.stringify(order),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/updateOrder', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this.updateOrderDetails = (pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\n      console.log(pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n      let orderId = this.state.orderId;\n      let orderDetail = {\n        id: pId,\n        order_id: orderId,\n        pName: pName,\n        pSKU: pSKU,\n        pRate: pRate,\n        pQTY: pQTY,\n        pPrice: pPrice,\n        pRemarks: pRemarks,\n        pChecked: pChecked\n      };\n      var options = {\n        method: 'PUT',\n        body: JSON.stringify(orderDetail),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/updateOrderDetail', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      modalShow: false,\n      order: '',\n      orderTotal: 0,\n      totalValueAdded: 0,\n      orderSource: '',\n      orderStatus: '',\n      orderTracking: '',\n      orderNote: '',\n      cName: '',\n      cContact: '',\n      cAddress: '',\n      orderId: 1,\n      rows: [],\n      isValidSource: true,\n      isValidStatus: true\n    };\n    this.deleteProduct = this.deleteProduct.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          orderSource = _this$state.orderSource,\n          isValidSource = _this$state.isValidSource;\n    const customStyles = {\n      control: (base, state) => _objectSpread({}, base, {\n        borderColor: state.isFocused ? '#ddd' : isValidSource ? '#ddd' : 'red',\n        width: '183px'\n      })\n    };\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      isOpen: this.state.modalShow,\n      toggle: this.toggle,\n      size: \"lg\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Edit Order\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"9\",\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"6\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.orderTotal,\n      label: \"Total\",\n      hint: \"Total\",\n      disabled: true,\n      className: \"m-0\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      sm: \"6\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.totalValueAdded,\n      className: \"m-0\",\n      style: {\n        fontWeight: 'bold'\n      },\n      label: \"Total value added\",\n      hint: \"Total value added\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      ref: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"4\",\n      className: \"m-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.orderId,\n      label: \"Id\",\n      outline: true,\n      disabled: true,\n      className: \"mt-0 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      md: \"4\",\n      className: \" \",\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Select, {\n      styles: customStyles,\n      value: orderSource,\n      onChange: this.handleSelectChange,\n      options: sourceOptions,\n      placeholder: \"Source\",\n      isSearchable: true,\n      className: \"my-auto\",\n      isClearable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }))), React.createElement(MDBCol, {\n      md: \"4\",\n      className: \"m-0 \",\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(CreateableSelect, {\n      ref: \"createableSelect\",\n      orderStatus: this.orderStatus,\n      isValidStatus: this.state.isValidStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })))), React.createElement(MDBRow, {\n      center: true,\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"4\",\n      className: \"m-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Tracking Id\",\n      value: this.state.orderTracking,\n      name: \"orderTracking\",\n      onInput: this.handleInput,\n      outline: true,\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      sm: \"8\",\n      className: \"m-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Note\",\n      value: this.state.orderNote,\n      name: \"orderNote\",\n      onInput: this.handleInput,\n      outline: true,\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }))), React.createElement(MDBRow, {\n      className: \"m-0 p-0\",\n      end: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"12\",\n      className: \"m-0 p-0\",\n      bottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Customer:\"))), React.createElement(MDBRow, {\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"3\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.cName,\n      onInput: this.handleInput,\n      name: \"cName\",\n      className: \"m-0\",\n      label: \"Name\",\n      outline: true,\n      required: true,\n      validate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      sm: \"3\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.cContact,\n      onInput: this.handleInput,\n      name: \"cContact\",\n      className: \"m-0\",\n      label: \"Contact\",\n      outline: true,\n      required: true,\n      validate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      sm: \"6\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      value: this.state.cAddress,\n      onInput: this.handleInput,\n      name: \"cAddress\",\n      className: \"m-0\",\n      label: \"Address\",\n      outline: true,\n      required: true,\n      validate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }))), React.createElement(MDBRow, {\n      className: \"m-0 p-0\",\n      end: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"12\",\n      className: \"m-0 p-0\",\n      bottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        fontWeight: 'bold',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Products:\")))), React.createElement(MDBTable, {\n      id: \"editProductsTable\",\n      striped: true,\n      responsive: true,\n      bordered: true,\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      color: \"teal\",\n      textWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Sr.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"SKU\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Rate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Remarks\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Extra added\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, this.state.rows))))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      onClick: this.handleSubmit,\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Save changes\"))));\n  }\n\n}\n\nexport default EditOrderModal;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\sections\\EditOrderModal.jsx"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBPopover","MDBPopoverHeader","MDBPopoverBody","MDBModalBody","MDBTable","MDBTableHead","MDBTableBody","MDBModalHeader","MDBModalFooter","MDBRow","MDBCol","MDBInput","MDBDataTable","Select","CreateableSelect","PTableRow","deleteOrderModal","sourceOptions","value","label","EditOrderModal","constructor","props","fetchData","id","fetch","then","res","json","order","data","setState","orderId","orderTotal","total","totalValueAdded","total_value_added","orderSource","source","orderStatus","status","orderTracking","tracking_id","orderNote","note","cName","customer_name","cContact","customer_contact","cAddress","customer_address","catch","error","console","log","map","x","createdAt","updatedAt","deletedAt","order_id","orderDetails","setRows","toggle","modalShow","state","newValue","isValidStatus","handleInput","e","target","name","handleSelectChange","selectedOption","isValidSource","rows","Rows","undefined","index","forEach","orderDetail","pChecked","product_extra_added","push","product_name","product_sku","product_rate","product_qty","product_price","product_remarks","Math","random","deleteProduct","minusFromTotal","addToTotal","minusFromTotalValueAdded","addToTotalValueAdded","price","i","confirm","parseInt","splice","txt","handleSubmit","form","refs","myForm","checkValidity","classList","add","updateOrder","Table","document","getElementById","length","pName","cells","innerHTML","pSKU","pRate","pQTY","pPrice","pRemarks","pId","updateOrderDetails","deleteRow","window","location","reload","tracking","totalAddedValue","options","method","body","JSON","stringify","headers","bind","render","customStyles","control","base","borderColor","isFocused","width","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBPopover, MDBPopoverHeader, MDBPopoverBody, MDBModalBody, MDBTable, MDBTableHead, MDBTableBody, MDBModalHeader, MDBModalFooter, MDBRow, MDBCol, MDBInput, MDBDataTable } from 'mdbreact';\r\nimport Select from 'react-select';\r\nimport CreateableSelect from './CreatableAdvancedSelect';\r\nimport PTableRow from './PTableRow';\r\nimport deleteOrderModal from './DeleteOrderModal';\r\n\r\n\r\n\r\n\r\nconst sourceOptions = [\r\n    { value: 'facebook', label: 'Facebook' },\r\n    { value: 'whatsapp1', label: 'WhatsApp 1' },\r\n    { value: 'whatsapp2', label: 'WhatsApp 2' },\r\n    { value: 'phone1', label: 'Phone 1' },\r\n    { value: 'phone2', label: 'Phone 2' },\r\n    { value: 'website', label: 'Website' },\r\n    { value: 'imo', label: 'Imo' },\r\n];\r\n\r\n\r\nclass EditOrderModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false,\r\n            order: '',\r\n            orderTotal: 0,\r\n            totalValueAdded: 0,\r\n            orderSource: '',\r\n            orderStatus: '',\r\n            orderTracking: '',\r\n            orderNote: '',\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n            orderId: 1,\r\n            rows: [],\r\n            isValidSource: true,\r\n            isValidStatus: true\r\n        }\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n    }\r\n    fetchData = (id) => {\r\n\r\n        fetch('/getSpecificOrder/' + id)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                // this.order = json.data\r\n                var order = json.data\r\n                this.setState({\r\n                    order: order,\r\n                    orderId: order.id,\r\n                    orderTotal: order.total,\r\n                    totalValueAdded: order.total_value_added,\r\n                    orderSource: { label: order.source, value: order.source },\r\n                    orderStatus: { label: order.status, value: order.status },\r\n                    orderTracking: order.tracking_id,\r\n                    orderNote: order.note,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_address,\r\n                    // showOrderDetails: true,\r\n                })\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        fetch('/getAllOrderDetails/' + id)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                json.data.map((x) => {\r\n                    delete x.createdAt;\r\n                    delete x.updatedAt;\r\n                    delete x.deletedAt;\r\n                    delete x.order_id;\r\n                });\r\n                this.setState({\r\n                    orderDetails: json.data,\r\n                })\r\n                this.setRows(json.data);\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow,\r\n\r\n        });\r\n    }\r\n\r\n    orderStatus = (newValue) => {\r\n        if (newValue === null) {\r\n            this.setState({\r\n                isValidStatus: false, orderStatus: newValue\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                orderStatus: newValue, isValidStatus: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = selectedOption => {\r\n        if (selectedOption === null) {\r\n            this.setState({\r\n                orderSource: selectedOption, isValidSource: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                orderSource: selectedOption, isValidSource: true\r\n            })\r\n        }\r\n    }\r\n\r\n    setRows = (orderDetails) => {\r\n        this.setState({\r\n            rows: []\r\n        })\r\n        var Rows = [];\r\n        if (orderDetails !== undefined) {\r\n            var index = 0;\r\n            orderDetails.forEach(orderDetail => {\r\n                let pChecked;\r\n                index++;\r\n                if (orderDetail.product_extra_added === \"Yes\") {\r\n                    pChecked = true\r\n                }\r\n                else {\r\n                    pChecked = false\r\n                }\r\n                Rows.push(\r\n                    <PTableRow\r\n                        index={index}\r\n                        Id={orderDetail.id}\r\n                        pName={orderDetail.product_name}\r\n                        pSKU={orderDetail.product_sku}\r\n                        pRate={orderDetail.product_rate}\r\n                        pQTY={orderDetail.product_qty}\r\n                        pPrice={orderDetail.product_price}\r\n                        pRemarks={orderDetail.product_remarks}\r\n                        pChecked={pChecked}\r\n                        key={Math.random()}\r\n                        deleteProduct={this.deleteProduct}\r\n                        minusFromTotal={this.minusFromTotal}\r\n                        addToTotal={this.addToTotal}\r\n                        minusFromTotalValueAdded={this.minusFromTotalValueAdded}\r\n                        addToTotalValueAdded={this.addToTotalValueAdded}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n        this.setState({ rows: Rows })\r\n    }\r\n\r\n    deleteProduct = (price, i, pChecked) => {\r\n\r\n        if (confirm(\"Selected row will be deleted permanently\")) {\r\n\r\n            this.setState({\r\n                orderTotal: this.state.orderTotal - parseInt(price)\r\n            })\r\n            if (pChecked === 'Yes') {\r\n                this.setState({\r\n                    totalValueAdded: this.state.totalValueAdded - parseInt(price)\r\n                })\r\n            }\r\n            var rows = [...this.state.rows];\r\n            rows.splice(i - 1, 1);\r\n            this.setState({ rows });\r\n        } else {\r\n            txt = \"You pressed Cancel!\";\r\n        }\r\n    }\r\n\r\n    minusFromTotal = (value) => {\r\n        this.setState({\r\n            orderTotal: this.state.orderTotal - parseInt(value)\r\n        })\r\n    }\r\n\r\n    minusFromTotalValueAdded = (value) => {\r\n        this.setState({\r\n            totalValueAdded: this.state.totalValueAdded - parseInt(value)\r\n        })\r\n    }\r\n\r\n    addToTotal = (value) => {\r\n        this.setState({\r\n            orderTotal: this.state.orderTotal + parseInt(value)\r\n        })\r\n    }\r\n\r\n    addToTotalValueAdded = (value) => {\r\n        this.setState({\r\n            totalValueAdded: this.state.totalValueAdded + parseInt(value)\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let form = this.refs.myForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return;\r\n        }\r\n        else if (!this.state.isValidSource || !this.state.isValidStatus) {\r\n            return;\r\n        }\r\n        else {\r\n            this.updateOrder();\r\n            let Table = document.getElementById('editProductsTable');\r\n            for (let index = 1; index < Table.rows.length; index++) {\r\n                const pName = Table.rows[index].cells[1].innerHTML;\r\n                const pSKU = Table.rows[index].cells[2].innerHTML;\r\n                const pRate = Table.rows[index].cells[3].innerHTML;\r\n                const pQTY = Table.rows[index].cells[4].innerHTML;\r\n                const pPrice = Table.rows[index].cells[5].innerHTML;\r\n                const pRemarks = Table.rows[index].cells[6].innerHTML;\r\n                const pChecked = Table.rows[index].cells[7].innerHTML;\r\n                const pId = Table.rows[index].cells[8].innerHTML;\r\n                this.updateOrderDetails(pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\r\n            }\r\n            for (let index = Table.rows.length - 1; index > 0; index--) {\r\n                Table.deleteRow(index);\r\n            }\r\n            this.toggle()\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    updateOrder = () => {\r\n        let orderId = this.state.orderId\r\n        let source = this.state.orderSource.value;\r\n        let status = this.state.orderStatus.value;\r\n        let tracking = this.state.orderTracking;\r\n        let note = this.state.orderNote;\r\n        let total = this.state.orderTotal;\r\n        let totalAddedValue = this.state.totalValueAdded;\r\n        let cName = this.state.cName;\r\n        let cContact = this.state.cContact;\r\n        let cAddress = this.state.cAddress;\r\n\r\n        var order = { id: orderId, source: source, status: status, tracking: tracking, note: note, total: total, totalAddedValue: totalAddedValue, cName: cName, cContact: cContact, cAddress: cAddress }\r\n        var options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(order),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/updateOrder', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    updateOrderDetails = (pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked) => {\r\n        console.log(pId, pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\r\n        let orderId = this.state.orderId;\r\n        let orderDetail = { id: pId, order_id: orderId, pName: pName, pSKU: pSKU, pRate: pRate, pQTY: pQTY, pPrice: pPrice, pRemarks: pRemarks, pChecked: pChecked }\r\n        var options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(orderDetail),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/updateOrderDetail', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { orderSource, isValidSource } = this.state\r\n\r\n        const customStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : isValidSource ?\r\n                        '#ddd' : 'red',\r\n                width: '183px'\r\n            })\r\n        }\r\n        return (\r\n            <MDBContainer>\r\n                <MDBModal isOpen={this.state.modalShow} toggle={this.toggle} size='lg' centered>\r\n                    <MDBModalHeader toggle={this.toggle}>Edit Order</MDBModalHeader>\r\n                    <MDBModalBody>\r\n\r\n                        <MDBRow center>\r\n                            <MDBCol md=\"9\" className='m-0 p-0'>\r\n                                <MDBRow center className='m-0 p-0' >\r\n                                    <MDBCol sm='6' className='m-0'>\r\n                                        <MDBInput value={this.state.orderTotal} label=\"Total\" hint=\"Total\" disabled className='m-0' style={{ fontWeight: 'bold' }} />\r\n                                    </MDBCol>\r\n                                    <MDBCol sm='6' className='m-0'>\r\n                                        <MDBInput value={this.state.totalValueAdded} className='m-0' style={{ fontWeight: 'bold' }} label=\"Total value added\" hint=\"Total value added\" disabled />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <form ref='myForm'>\r\n                                    <MDBRow center className='m-0 p-0' >\r\n                                        <MDBCol sm='4' className='m-0 ' >\r\n                                            <MDBInput value={this.state.orderId} label=\"Id\" outline disabled className='mt-0 mb-0' />\r\n                                        </MDBCol>\r\n                                        <MDBCol md='4' className=' ' middle >\r\n                                            <React.Fragment>\r\n                                                <Select\r\n                                                    styles={customStyles}\r\n                                                    value={orderSource}\r\n                                                    onChange={this.handleSelectChange}\r\n                                                    options={sourceOptions}\r\n                                                    placeholder='Source'\r\n                                                    isSearchable\r\n                                                    className='my-auto'\r\n                                                    isClearable\r\n                                                />\r\n                                            </React.Fragment>\r\n                                        </MDBCol>\r\n                                        <MDBCol md='4' className='m-0 ' middle >\r\n                                            <React.Fragment>\r\n                                                <CreateableSelect\r\n                                                    ref='createableSelect'\r\n                                                    orderStatus={this.orderStatus}\r\n                                                    isValidStatus={this.state.isValidStatus}\r\n                                                />\r\n                                            </React.Fragment>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                    <MDBRow center className='m-0 p-0' >\r\n                                        <MDBCol sm='4' className='m-0 '>\r\n                                            <MDBInput label=\"Tracking Id\" value={this.state.orderTracking} name=\"orderTracking\" onInput={this.handleInput} outline className='m-0' />\r\n                                        </MDBCol>\r\n                                        <MDBCol sm='8' className='m-0 '>\r\n                                            <MDBInput label=\"Note\" value={this.state.orderNote} name=\"orderNote\" onInput={this.handleInput} outline className='m-0' />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                    <MDBRow className='m-0 p-0' end>\r\n                                        <MDBCol sm='12' className='m-0 p-0' bottom >\r\n                                            <label style={{ fontWeight: 'bold', textAlign: 'left' }}>Customer:</label>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                    <MDBRow className='m-0 p-0'>\r\n                                        <MDBCol sm='3' className='m-0'>\r\n                                            <MDBInput value={this.state.cName} onInput={this.handleInput} name=\"cName\" className='m-0' label=\"Name\" outline required validate />\r\n                                        </MDBCol>\r\n                                        <MDBCol sm='3' className='m-0'>\r\n                                            <MDBInput value={this.state.cContact} onInput={this.handleInput} name=\"cContact\" className='m-0' label=\"Contact\" outline required validate />\r\n                                        </MDBCol>\r\n                                        <MDBCol sm='6' className='m-0'>\r\n                                            <MDBInput value={this.state.cAddress} onInput={this.handleInput} name=\"cAddress\" className='m-0' label=\"Address\" outline required validate />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                    <MDBRow className='m-0 p-0' end>\r\n                                        <MDBCol sm='12' className='m-0 p-0' bottom >\r\n                                            <label style={{ fontWeight: 'bold', textAlign: 'left' }}>Products:</label>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                </form>\r\n\r\n                                <MDBTable id='editProductsTable' striped responsive bordered autoWidth>\r\n\r\n                                    <MDBTableHead color='teal' textWhite >\r\n                                        <tr>\r\n                                            <th>Sr.</th>\r\n                                            <th>Product</th>\r\n                                            <th>SKU</th>\r\n                                            <th>Rate</th>\r\n                                            <th>Qty</th>\r\n                                            <th>Price</th>\r\n                                            <th>Remarks</th>\r\n                                            <th>Extra added</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </MDBTableHead>\r\n                                    <MDBTableBody>\r\n                                        {this.state.rows}\r\n                                    </MDBTableBody>\r\n                                </MDBTable>\r\n\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                        <MDBBtn onClick={this.handleSubmit} outline color=\"primary\">Save changes</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditOrderModal;"]},"metadata":{},"sourceType":"module"}