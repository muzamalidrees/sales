{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport './loginStyles.css';\nimport FormPage from './FormPage'; // import { user } from '../../actions/login-actions'\n// import { connect } from 'react-redux'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateLogin = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      let form = this.refs.loginForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        this.handleLogin();\n      }\n    };\n\n    this.handleLogin = () => {\n      var options = {\n        method: 'POST',\n        body: JSON.stringify({\n          username: this.refs.email.value,\n          password: this.refs.password.value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/auth', options).then(res => res.json()).then(json => {\n        console.log(json);\n        let message = json.message;\n\n        if (message === 'incorrect Password') {\n          this.refs.password.value = \"\";\n          this.refs.password.focus();\n        } else {}\n\n        this.props.dispatch(user(json.user));\n        this.refs.loginLabel.innerHTML = message;\n        this.refs.loginBtn.style.marginTop = '0px';\n        this.setState({\n          isLoggedIn: true\n        });\n        this.props.changeUserState(json.user.role_id); // this.props.history.push(json.route);\n      }).catch(err => console.log(err));\n    };\n\n    this.onChangeLabel = () => {\n      this.refs.loginLabel.innerHTML = '';\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      document.getElementById('homeLink').style.display = '';\n      document.getElementById('homeLinkCode').style.display = '';\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    } else return (// <div className=\"container\" style={{ textAlign: 'center', backgroundColor: '#999999', marginTop: '81px', marginBottom: '81px', paddingTop: '81px', paddingBottom: '81px' }}>\n      React.createElement(FormPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) //     <form className='loginForm' ref='loginForm' onSubmit={this.validateLogin} method='POST' noValidate>\n      //         <h1 className='loginHdng'>Sign In</h1>\n      //         <div style={{ display: 'inline-block' }} className=\"form-row col-lg-6 m-0 p-0\">\n      //             <div className='col form-group'>\n      //                 <input type=\"email\" onChange={this.onChangeLabel} className=\"form-control form-control-lg\" ref=\"email\" placeholder=\"Enter email\" required />\n      //                 <div className=\"valid-feedback\">\n      //                     Looks good!\n      //                 </div>\n      //                 <div className=\"invalid-feedback\">\n      //                     Please enter a valid email.\n      //                 </div>\n      //             </div>\n      //         </div>\n      //         <br></br>\n      //         <div style={{ display: 'inline-block' }} className=\"form-row col-lg-6 m-0 p-0 \">\n      //             <div className='col form-group'>\n      //                 <input type='password' onChange={this.onChangeLabel} className=\"form-control form-control-lg\" ref=\"password\" placeholder=\"Password\" required />\n      //                 <div className=\"valid-feedback\">\n      //                     Looks good!\n      //                 </div>\n      //                 <div className=\"invalid-feedback\">\n      //                     Please enter password.\n      //                 </div>\n      //             </div>\n      //         </div>\n      //         <br></br>\n      //         {/* <div class=\"form-check\">\n      //             <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n      //             </div> */}\n      //         <div style={{ display: 'inline-block' }} className=\"form-row  col-lg-5  \">\n      //             <label className=\"loginLabel\" ref='loginLabel' htmlFor=\"loginBtn\"></label>\n      //             <button type=\"submit\" id='loginBtn' ref='loginBtn' className=\"col-sm-12 loginBtn\">Sign In</button>\n      //         </div>\n      //     </form>\n      // </div>\n\n    );\n  }\n\n}\n\nexport default connect()(Login);","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\auth\\Login.js"],"names":["React","Component","Redirect","FormPage","Login","constructor","props","validateLogin","evt","preventDefault","stopPropagation","form","refs","loginForm","checkValidity","classList","add","handleLogin","options","method","body","JSON","stringify","username","email","value","password","headers","fetch","then","res","json","console","log","message","focus","dispatch","user","loginLabel","innerHTML","loginBtn","style","marginTop","setState","isLoggedIn","changeUserState","role_id","catch","err","onChangeLabel","state","render","document","getElementById","display","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router'\nimport './loginStyles.css';\nimport FormPage from './FormPage';\n// import { user } from '../../actions/login-actions'\n// import { connect } from 'react-redux'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n        }\n    }\n    validateLogin = (evt) => {\n\n\n        evt.preventDefault();\n        evt.stopPropagation();\n        let form = this.refs.loginForm;\n        if (form.checkValidity() === false) {\n            form.classList.add('was-validated');\n        }\n        else {\n            this.handleLogin();\n        }\n\n    }\n    handleLogin = () => {\n        var options = {\n            method: 'POST',\n            body: JSON.stringify({ username: this.refs.email.value, password: this.refs.password.value }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        fetch('/auth', options)\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json);\n                let message = json.message;\n                if (message === 'incorrect Password') {\n                    this.refs.password.value = \"\";\n                    this.refs.password.focus();\n                }\n                else {\n                }\n                this.props.dispatch(user(json.user));\n                this.refs.loginLabel.innerHTML = message;\n                this.refs.loginBtn.style.marginTop = '0px';\n                this.setState({ isLoggedIn: true })\n                this.props.changeUserState(json.user.role_id);\n\n                // this.props.history.push(json.route);\n            })\n            .catch((err) => console.log(err))\n    }\n    onChangeLabel = () => {\n        this.refs.loginLabel.innerHTML = '';\n    }\n\n    render() {\n        if (this.state.isLoggedIn) {\n            document.getElementById('homeLink').style.display = ''\n            document.getElementById('homeLinkCode').style.display = ''\n            return <Redirect to='/home' />\n        }\n        else return (\n            // <div className=\"container\" style={{ textAlign: 'center', backgroundColor: '#999999', marginTop: '81px', marginBottom: '81px', paddingTop: '81px', paddingBottom: '81px' }}>\n            <FormPage />\n            //     <form className='loginForm' ref='loginForm' onSubmit={this.validateLogin} method='POST' noValidate>\n            //         <h1 className='loginHdng'>Sign In</h1>\n\n            //         <div style={{ display: 'inline-block' }} className=\"form-row col-lg-6 m-0 p-0\">\n            //             <div className='col form-group'>\n            //                 <input type=\"email\" onChange={this.onChangeLabel} className=\"form-control form-control-lg\" ref=\"email\" placeholder=\"Enter email\" required />\n            //                 <div className=\"valid-feedback\">\n            //                     Looks good!\n            //                 </div>\n            //                 <div className=\"invalid-feedback\">\n            //                     Please enter a valid email.\n            //                 </div>\n            //             </div>\n            //         </div>\n\n            //         <br></br>\n\n            //         <div style={{ display: 'inline-block' }} className=\"form-row col-lg-6 m-0 p-0 \">\n            //             <div className='col form-group'>\n            //                 <input type='password' onChange={this.onChangeLabel} className=\"form-control form-control-lg\" ref=\"password\" placeholder=\"Password\" required />\n            //                 <div className=\"valid-feedback\">\n            //                     Looks good!\n            //                 </div>\n            //                 <div className=\"invalid-feedback\">\n            //                     Please enter password.\n            //                 </div>\n            //             </div>\n            //         </div>\n\n            //         <br></br>\n\n            //         {/* <div class=\"form-check\">\n            //             <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n            //             </div> */}\n            //         <div style={{ display: 'inline-block' }} className=\"form-row  col-lg-5  \">\n            //             <label className=\"loginLabel\" ref='loginLabel' htmlFor=\"loginBtn\"></label>\n            //             <button type=\"submit\" id='loginBtn' ref='loginBtn' className=\"col-sm-12 loginBtn\">Sign In</button>\n            //         </div>\n\n            //     </form>\n            // </div>\n\n\n\n        )\n    }\n}\n\n\nexport default\n    connect()\n        (Login)"]},"metadata":{},"sourceType":"module"}