{"ast":null,"code":"import _classCallCheck from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\mzamal\\\\sales&stock\\\\sales\\\\src\\\\components\\\\reports\\\\pages\\\\AllReports.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\nimport { Can } from \"../../../configs/Ability-context\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nvar AllReports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllReports, _Component);\n\n  function AllReports() {\n    var _this;\n\n    _classCallCheck(this, AllReports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllReports).call(this));\n    _this._isMounted = false;\n\n    _this.componentWillUnmount = function () {\n      _this._isMounted = false;\n    };\n\n    _this.handleDateChange = function (value) {\n      _this.setState({\n        fromDate: value\n      });\n\n      if (value !== null) {\n        var comingDate = _this.state.fromDate;\n        comingDate.setDate(comingDate.getDate() - 1);\n\n        var selectedOrderDetails = _this.state.orderDetails.filter(function (orderDetail) {\n          return new Date(orderDetail.order_date) > comingDate;\n        });\n\n        _this.setState({\n          selectedOrderDetails: selectedOrderDetails\n        });\n      }\n    };\n\n    _this.totalSales = function () {\n      var Total = 0;\n\n      _this.state.selectedOrderDetails.forEach(function (orderDetail) {\n        Total = Total + Number(orderDetail.product_price);\n      });\n\n      return Total;\n    };\n\n    _this.totalValueAdded = function () {\n      var Total = 0;\n\n      var details = _this.state.selectedOrderDetails.filter(function (orderDetail) {\n        return orderDetail.product_extra_added === 'Yes';\n      });\n\n      details.forEach(function (detail) {\n        Total = Total + Number(detail.product_price);\n      });\n      return Total;\n    };\n\n    _this._isMounted = true;\n    fetch('/getAllOrderDetails').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      var orderDetails = json.data;\n\n      if (_this._isMounted) {\n        _this.setState({\n          orderDetails: orderDetails,\n          selectedOrderDetails: orderDetails\n        });\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    _this.state = {\n      orderDetails: [],\n      selectedOrderDetails: [],\n      fromDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(AllReports, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedOrderDetails = _this$state.selectedOrderDetails,\n          fromDate = _this$state.fromDate;\n      var rows = [];\n      var index = 0;\n      selectedOrderDetails.forEach(function (orderDetail) {\n        index = index + 1;\n        var date;\n\n        if (orderDetail.order_date === null) {\n          date = new Date(\"2019-07-08T00:00:00.000Z\").toLocaleDateString();\n        } else {\n          date = new Date(orderDetail.order_date).toLocaleDateString();\n        }\n\n        rows.push({\n          product_name: orderDetail.product_name,\n          product_sku: orderDetail.product_sku,\n          product_rate: orderDetail.product_rate,\n          product_qty: orderDetail.product_qty,\n          product_price: orderDetail.product_price,\n          product_remarks: orderDetail.product_remarks,\n          product_extra_added: orderDetail.product_extra_added,\n          order_date: date\n        });\n      });\n      var data = {\n        columns: [{\n          label: 'Name',\n          field: 'product_name'\n        }, {\n          label: 'SKU',\n          field: 'product_sku'\n        }, {\n          label: 'Rate',\n          field: 'product_rate'\n        }, {\n          label: 'QTY',\n          field: 'product_qty'\n        }, {\n          label: 'Price',\n          field: 'product_price'\n        }, {\n          label: 'Remarks',\n          field: 'product_remarks'\n        }, {\n          label: 'Extra Added',\n          field: 'product_extra_added'\n        }, {\n          label: 'Date',\n          field: 'order_date'\n        }],\n        rows: rows\n      };\n      return React.createElement(Can, {\n        I: \"read\",\n        a: \"report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        className: \"\",\n        fluid: true,\n        style: {\n          marginTop: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \" p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MDBCardHeader, {\n        tag: \"h4\",\n        style: {\n          color: 'teal'\n        },\n        className: \"text-center font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Order-details Reports\"), React.createElement(MDBCardBody, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Select Date from which you want to fetch report.\"), React.createElement(MDBCol, {\n        md: \"12\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"3\",\n        className: \"m-0 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        id: \"datePicker\",\n        selected: fromDate,\n        onChange: this.handleDateChange,\n        className: \"form-control\",\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        autoComplete: \"off\",\n        dateFormat: \"dd/MM/yy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })))), React.createElement(MDBDataTable, {\n        id: \"reportsTable\",\n        striped: true,\n        small: true,\n        hover: true,\n        theadColor: \"teal\",\n        bordered: true,\n        btn: true,\n        entries: 12,\n        entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n        responsive: true,\n        data: data,\n        theadTextWhite: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Sales\",\n        value: this.totalSales(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        label: \"Total Value Added\",\n        value: this.totalValueAdded(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return AllReports;\n}(Component);\n\nexport default AllReports;","map":{"version":3,"sources":["D:\\mzamal\\sales&stock\\sales\\src\\components\\reports\\pages\\AllReports.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","MDBContainer","MDBRow","MDBCol","MDBInput","Can","DatePicker","AllReports","_isMounted","componentWillUnmount","handleDateChange","value","setState","fromDate","comingDate","state","setDate","getDate","selectedOrderDetails","orderDetails","filter","orderDetail","Date","order_date","totalSales","Total","forEach","Number","product_price","totalValueAdded","details","product_extra_added","detail","fetch","then","res","json","data","error","console","log","rows","index","date","toLocaleDateString","push","product_name","product_sku","product_rate","product_qty","product_remarks","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\n\r\nclass AllReports extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n        fetch('/getAllOrderDetails')\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                let orderDetails = json.data\r\n                if (this._isMounted) {\r\n                    this.setState({ orderDetails: orderDetails, selectedOrderDetails: orderDetails })\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orderDetails: [],\r\n            selectedOrderDetails: [],\r\n            fromDate: new Date()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    // handling date value and refreshing records\r\n\r\n    handleDateChange = (value) => {\r\n        this.setState({\r\n            fromDate: value\r\n        });\r\n        if (value !== null) {\r\n\r\n            let comingDate = this.state.fromDate    \r\n            comingDate.setDate(comingDate.getDate() - 1);\r\n            let selectedOrderDetails = this.state.orderDetails.filter(orderDetail => new Date(orderDetail.order_date) > comingDate)\r\n            this.setState({\r\n                selectedOrderDetails: selectedOrderDetails\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    totalSales = () => {\r\n        let Total = 0;\r\n        this.state.selectedOrderDetails.forEach(orderDetail => {\r\n            Total = Total + Number(orderDetail.product_price)\r\n        })\r\n        return Total\r\n    }\r\n\r\n    totalValueAdded = () => {\r\n        let Total = 0;\r\n        let details = this.state.selectedOrderDetails.filter(orderDetail => orderDetail.product_extra_added === 'Yes')\r\n        details.forEach(detail => {\r\n            Total = Total + Number(detail.product_price)\r\n        })\r\n        return Total\r\n\r\n    }\r\n\r\n    render() {\r\n        var { selectedOrderDetails, fromDate } = this.state;\r\n        var rows = [];\r\n        var index = 0;\r\n        selectedOrderDetails.forEach((orderDetail) => {\r\n\r\n            index = index + 1;\r\n            let date;\r\n            if (orderDetail.order_date === null) {\r\n                date = new Date(\"2019-07-08T00:00:00.000Z\").toLocaleDateString();\r\n            }\r\n            else {\r\n                date = new Date(orderDetail.order_date).toLocaleDateString();\r\n            }\r\n            rows.push(\r\n                {\r\n                    product_name: orderDetail.product_name,\r\n                    product_sku: orderDetail.product_sku,\r\n                    product_rate: orderDetail.product_rate,\r\n                    product_qty: orderDetail.product_qty,\r\n                    product_price: orderDetail.product_price,\r\n                    product_remarks: orderDetail.product_remarks,\r\n                    product_extra_added: orderDetail.product_extra_added,\r\n                    order_date: date,\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: 'Name', field: 'product_name' },\r\n                { label: 'SKU', field: 'product_sku' }, { label: 'Rate', field: 'product_rate' },\r\n                { label: 'QTY', field: 'product_qty' }, { label: 'Price', field: 'product_price' },\r\n                { label: 'Remarks', field: 'product_remarks' }, { label: 'Extra Added', field: 'product_extra_added' },\r\n                { label: 'Date', field: 'order_date' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='report'>\r\n                <MDBContainer className='' fluid style={{ marginTop: '80px' }}>\r\n                    <MDBRow center>\r\n                        <MDBCol sm=\"10\">\r\n                            <MDBCard className=' p-0'>\r\n                                <MDBCardHeader tag=\"h4\" style={{ color: 'teal' }} className=\"text-center font-weight-bold\">\r\n                                    Order-details Reports\r\n                            </MDBCardHeader>\r\n                                <MDBCardBody className='p-2'>\r\n                                    <MDBRow className='m-0 p-0' >\r\n                                        <label>Select Date from which you want to fetch report.</label>\r\n                                        <MDBCol md='12' className='m-0 p-0' >\r\n                                            <MDBCol md='3' className='m-0 p-0'>\r\n                                                <DatePicker\r\n                                                    id='datePicker'\r\n                                                    selected={fromDate}\r\n                                                    onChange={this.handleDateChange}\r\n                                                    className='form-control'\r\n                                                    peekNextMonth\r\n                                                    showMonthDropdown\r\n                                                    showYearDropdown\r\n                                                    dropdownMode=\"select\"\r\n                                                    autoComplete='off'\r\n                                                    dateFormat=\"dd/MM/yy\"\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBDataTable id='reportsTable' striped small hover theadColor=\"teal\"\r\n                                        bordered btn entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                                        data={data} theadTextWhite >\r\n                                    </MDBDataTable>\r\n                                    <MDBRow>\r\n                                        <MDBCol>\r\n\r\n                                            <MDBInput type='text' label='Total Sales' value={this.totalSales()} />\r\n                                        </MDBCol>\r\n                                        <MDBCol>\r\n                                            <MDBInput type='text' label='Total Value Added' value={this.totalValueAdded()} />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllReports"]},"metadata":{},"sourceType":"module"}