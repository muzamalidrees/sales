{"ast":null,"code":"var _jsxFileName = \"D:\\\\sales&stock\\\\sales\\\\src\\\\components\\\\pages\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\nimport { Link } from 'react-router-dom';\nimport ViewOrderModal from './sections/ViewOrderModal';\nimport EditOrderModal from './sections/EditOrderModal';\nimport deleteOrderModal from './sections/deleteOrderModal';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.handleView = () => {\n      console.log('view');\n      this.setState({\n        viewOrder: true\n      });\n    };\n\n    this.handleEdit = () => {\n      console.log('edit');\n      this.setState({\n        editOrder: true\n      });\n    };\n\n    this.handleDelete = e => {\n      var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\n      var svgClik = e.target.parentNode.parentNode.parentNode;\n      var buttonClik = e.target.parentNode.parentNode;\n      var tdClik = e.target.parentNode;\n      var targt = e.target;\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = svgClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = buttonClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = tdClik;\n      }\n\n      if (iconClik.rowIndex === undefined) {\n        iconClik = targt;\n      }\n\n      var i = iconClik.rowIndex; // console.log(i);\n\n      document.getElementById('ordersTable').deleteRow(i);\n      let dRowValue = iconClik.cells[1].innerHTML; // console.log(dRowValue);\n\n      let customer = {\n        value: dRowValue\n      };\n      var options = {\n        method: 'DELETE',\n        body: JSON.stringify(customer),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/deleteOrder', options).then(res => res.json()).then(json => {\n        console.log(json);\n      }).catch(error => console.log(error));\n    };\n\n    this.refreshOrdersTable = () => {};\n\n    fetch('/getAllOrders').then(res => res.json()).then(json => {\n      // console.log(json)\n      // if (this._isMounted) {\n      this.setState({\n        showTable: true,\n        orders: json.data\n      }); // }\n    }).catch(error => console.log(error));\n    this.state = {\n      orders: [],\n      viewOrder: false,\n      editOrder: false,\n      deleteOrder\n    };\n    this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\n  }\n\n  render() {\n    var orders = this.state.orders;\n    var rows = [];\n    var index = 0;\n    orders.forEach(order => {\n      index = index + 1;\n      rows.push({\n        index: index,\n        id: order.id,\n        cName: order.customer_name,\n        cContact: order.customer_contact,\n        cAddress: order.customer_addres,\n        total: order.total,\n        totalValueAdded: order.total_value_added,\n        tracking: order.tracking_id,\n        note: order.note,\n        status: order.status,\n        buttons: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          onClick: this.handleView,\n          className: \"m-1 p-2\",\n          outline: true,\n          color: \"info\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"eye\",\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), \"view\"), React.createElement(MDBBtn, {\n          onClick: this.handleEdit,\n          className: \"m-1 p-2\",\n          outline: true,\n          color: \"teal\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"pencil-alt\",\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }), \"edit\"), React.createElement(MDBBtn, {\n          onClick: this.handleDelete,\n          className: \"m-1 p-2\",\n          outline: true,\n          color: \"red darken-3\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(MDBIcon, {\n          icon: \"trash\",\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), \"delete\"))\n      });\n    });\n    var data = {\n      columns: [{\n        label: '#',\n        field: 'index'\n      }, {\n        label: 'Id',\n        field: 'id'\n      }, {\n        label: 'Customer Name',\n        field: 'cName'\n      }, {\n        label: 'Customer Contact',\n        field: 'cContact'\n      }, {\n        label: 'Customer Address',\n        field: 'cAddress'\n      }, {\n        label: 'Total',\n        field: 'total'\n      }, {\n        label: 'Total Value Added',\n        field: 'totalValueAdded'\n      }, {\n        label: 'Tracking Id',\n        field: 'tracking'\n      }, {\n        label: 'Note',\n        field: 'note'\n      }, {\n        label: 'Status',\n        field: 'status'\n      }, {\n        label: '',\n        field: 'buttons'\n      }],\n      rows: rows\n    };\n    return React.createElement(MDBCard, {\n      className: \" p-0\",\n      style: {\n        marginTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      tag: \"h4\",\n      className: \"text-center font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Orders\"), React.createElement(MDBCardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      className: \"m-0 font-weight-bold\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/newOrder\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Add New Order\")), React.createElement(MDBDataTable, {\n      id: \"ordersTable\",\n      striped: true,\n      small: true,\n      hover: true,\n      theadColor: \"teal\",\n      bordered: true,\n      btn: true,\n      entries: 5,\n      entriesOptions: [5, 10, 20, 35, 55, 70, 100, 135],\n      responsive: true,\n      data: data,\n      theadTextWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(ViewOrderModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(EditOrderModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"deleteOrderModal\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:\\sales&stock\\sales\\src\\components\\pages\\Home.jsx"],"names":["React","Component","MDBDataTable","MDBCard","MDBCardHeader","MDBCardBody","MDBBtn","MDBIcon","Link","ViewOrderModal","EditOrderModal","deleteOrderModal","Home","constructor","handleView","console","log","setState","viewOrder","handleEdit","editOrder","handleDelete","e","iconClik","target","parentNode","svgClik","buttonClik","tdClik","targt","rowIndex","undefined","i","document","getElementById","deleteRow","dRowValue","cells","innerHTML","customer","value","options","method","body","JSON","stringify","headers","fetch","then","res","json","catch","error","refreshOrdersTable","showTable","orders","data","state","deleteOrder","bind","render","rows","index","forEach","order","push","id","cName","customer_name","cContact","customer_contact","cAddress","customer_addres","total","totalValueAdded","total_value_added","tracking","tracking_id","note","status","buttons","columns","label","field","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { Link } from 'react-router-dom'\r\nimport ViewOrderModal from './sections/ViewOrderModal';\r\nimport EditOrderModal from './sections/EditOrderModal';\r\nimport deleteOrderModal from './sections/deleteOrderModal';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        fetch('/getAllOrders',\r\n        )\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                // if (this._isMounted) {\r\n                this.setState({ showTable: true, orders: json.data })\r\n                // }\r\n            })\r\n            .catch((error) => console.log(error))\r\n        this.state = {\r\n            orders: [],\r\n            viewOrder: false,\r\n            editOrder: false,\r\n            deleteOrder\r\n        }\r\n        this.refreshOrdersTable = this.refreshOrdersTable.bind(this);\r\n    }\r\n    handleView = () => {\r\n        console.log('view');\r\n        this.setState({\r\n            viewOrder: true\r\n        })\r\n\r\n    }\r\n\r\n    handleEdit = () => {\r\n        console.log('edit');\r\n        this.setState({\r\n            editOrder: true\r\n        })\r\n\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        var iconClik = e.target.parentNode.parentNode.parentNode.parentNode;\r\n        var svgClik = e.target.parentNode.parentNode.parentNode;\r\n        var buttonClik = e.target.parentNode.parentNode;\r\n        var tdClik = e.target.parentNode;\r\n        var targt = e.target\r\n\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = svgClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = buttonClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = tdClik;\r\n        }\r\n        if (iconClik.rowIndex === undefined) {\r\n            iconClik = targt;\r\n        }\r\n        var i = iconClik.rowIndex;\r\n        // console.log(i);\r\n        document.getElementById('ordersTable').deleteRow(i)\r\n\r\n        let dRowValue = iconClik.cells[1].innerHTML\r\n        // console.log(dRowValue);\r\n\r\n        let customer = { value: dRowValue }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(customer),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteOrder', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n    }\r\n\r\n    refreshOrdersTable = () => {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var orders = this.state.orders;\r\n        var rows = [];\r\n        var index = 0;\r\n        orders.forEach((order) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    id: order.id,\r\n                    cName: order.customer_name,\r\n                    cContact: order.customer_contact,\r\n                    cAddress: order.customer_addres,\r\n                    total: order.total,\r\n                    totalValueAdded: order.total_value_added,\r\n                    tracking: order.tracking_id,\r\n                    note: order.note,\r\n                    status: order.status,\r\n                    buttons: <React.Fragment>\r\n                        <MDBBtn onClick={this.handleView} className='m-1 p-2' outline color='info' size=\"sm\"><MDBIcon icon=\"eye\" className='mr-1' />view</MDBBtn>\r\n                        <MDBBtn onClick={this.handleEdit} className='m-1 p-2' outline color='teal' size=\"sm\"><MDBIcon icon=\"pencil-alt\" className='mr-1' />edit</MDBBtn>\r\n                        <MDBBtn onClick={this.handleDelete} className='m-1 p-2' outline color='red darken-3' size=\"sm\"><MDBIcon icon=\"trash\" className=\"mr-1\" />delete</MDBBtn>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        var data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Id', field: 'id', }, { label: 'Customer Name', field: 'cName' },\r\n                { label: 'Customer Contact', field: 'cContact', }, { label: 'Customer Address', field: 'cAddress', },\r\n                { label: 'Total', field: 'total', }, { label: 'Total Value Added', field: 'totalValueAdded', },\r\n                { label: 'Tracking Id', field: 'tracking', }, { label: 'Note', field: 'note', },\r\n                { label: 'Status', field: 'status', }, { label: '', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n\r\n            <MDBCard className=' p-0' style={{ marginTop: '70px' }}>\r\n                <MDBCardHeader tag=\"h4\" className=\"text-center font-weight-bold\">\r\n                    Orders\r\n                </MDBCardHeader>\r\n                <MDBCardBody className='p-2'>\r\n                    <MDBBtn className='m-0 font-weight-bold' color='secondary' >\r\n                        <Link to='/newOrder' style={{ color: 'white' }}>\r\n                            Add New Order\r\n                        </Link>\r\n                    </MDBBtn>\r\n                    <MDBDataTable id='ordersTable' striped small hover theadColor=\"teal\"\r\n                        bordered btn entries={5} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                    <ViewOrderModal\r\n                    />\r\n                    <EditOrderModal\r\n                    />\r\n                    <deleteOrderModal\r\n                    />\r\n                    {/* <MDBTableHead color='teal' textWhite >\r\n                        <tr>\r\n                            <th>Sr.</th>\r\n                            <th>Id</th>\r\n                            <th>Customer Name</th>\r\n                            <th>Customer Contact</th>\r\n                            <th>Customer Address</th>\r\n                            <th>Total</th>\r\n                            <th>Total Value Added</th>\r\n                            <th>Tracking Id</th>\r\n                            <th>Note</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </MDBTableHead>\r\n                    <MDBTableBody>\r\n                        {rows}\r\n                    </MDBTableBody> */}\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}